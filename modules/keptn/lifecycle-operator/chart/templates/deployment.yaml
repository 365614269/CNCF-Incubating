{{- if or (le .Capabilities.KubeVersion.Minor "26") (not .Values.schedulingGatesEnabled) }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keptn-scheduler
  namespace: {{ .Release.Namespace | quote }}
  {{- $annotations := include "common.annotations" (dict "context" .) }}
  {{- with $annotations }}
  annotations: {{- . -}}
  {{- end }}
  labels:
{{- include "common.labels.standard" ( dict "context" . ) | nindent 4 }}
{{- end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lifecycle-operator
  namespace: {{ .Release.Namespace | quote }}
  labels:
{{- include "common.labels.standard" ( dict "context" . ) | nindent 4 }}
{{- include "common.annotations" ( dict "context" . ) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lifecycle-operator
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/part-of: keptn
    control-plane: lifecycle-operator
    keptn.sh/inject-cert: "true"
{{- include "common.labels.standard" ( dict "context" . ) | nindent 4 }}
{{- include "common.annotations" ( dict "context" . ) }}
spec:
  replicas: {{ .Values.lifecycleOperator.replicas }}
  selector:
    matchLabels:
      control-plane: lifecycle-operator
    {{- include "common.selectorLabels"  ( dict "context" . ) | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: lifecycle-operator
      {{- include "common.selectorLabels"  ( dict "context" . )  | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: lifecycle-operator
        metrics.dynatrace.com/port: "2222"
        metrics.dynatrace.com/scrape: "true"
        {{- if .Values.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      containers:
      - args:
        - --leader-elect
        command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: FUNCTION_RUNNER_IMAGE
          value: {{ .Values.lifecycleOperator.env.functionRunnerImage | quote }}
        - name: PYTHON_RUNNER_IMAGE
          value: {{ .Values.lifecycleOperator.env.pythonRunnerImage | quote }}
        - name: KEPTN_APP_CONTROLLER_LOG_LEVEL
          value: {{ .Values.lifecycleOperator.env.keptnAppControllerLogLevel | quote
            }}
        - name: KEPTN_APP_CREATION_REQUEST_CONTROLLER_LOG_LEVEL
          value: {{ .Values.lifecycleOperator.env.keptnAppCreationRequestControllerLogLevel
            | quote }}
        - name: KEPTN_APP_VERSION_CONTROLLER_LOG_LEVEL
          value: {{ .Values.lifecycleOperator.env.keptnAppVersionControllerLogLevel
            | quote }}
        - name: KEPTN_EVALUATION_CONTROLLER_LOG_LEVEL
          value: {{ .Values.lifecycleOperator.env.keptnEvaluationControllerLogLevel
            | quote }}
        - name: KEPTN_TASK_CONTROLLER_LOG_LEVEL
          value: {{ .Values.lifecycleOperator.env.keptnTaskControllerLogLevel | quote
            }}
        - name: KEPTN_TASK_DEFINITION_CONTROLLER_LOG_LEVEL
          value: {{ .Values.lifecycleOperator.env.keptnTaskDefinitionControllerLogLevel
            | quote }}
        - name: KEPTN_WORKLOAD_CONTROLLER_LOG_LEVEL
          value: {{ .Values.lifecycleOperator.env.keptnWorkloadControllerLogLevel
            | quote }}
        - name: KEPTN_WORKLOAD_VERSION_CONTROLLER_LOG_LEVEL
          value: {{ .Values.lifecycleOperator.env.keptnWorkloadVersionControllerLogLevel
            | quote }}
        - name: KEPTN_DORA_METRICS_PORT
          value: {{ .Values.lifecycleOperator.env.keptnDoraMetricsPort | quote }}
        - name: OPTIONS_CONTROLLER_LOG_LEVEL
          value: {{ .Values.lifecycleOperator.env.optionsControllerLogLevel | quote
            }}
        - name: SCHEDULING_GATES_ENABLED
          value: {{ .Values.schedulingGatesEnabled | quote
            }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        - name: CERT_MANAGER_ENABLED
          value: {{ .Values.global.certManagerEnabled | quote }}
        image: {{ include "common.images.image" ( dict "imageRoot" .Values.lifecycleOperator.image "global" .Values.global ) }}
        imagePullPolicy: {{ .Values.lifecycleOperator.imagePullPolicy }}
        name: lifecycle-operator
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 2222
          name: metrics
          protocol: TCP
        resources: {{- toYaml .Values.lifecycleOperator.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: {{ .Values.lifecycleOperator.containerSecurityContext.allowPrivilegeEscalation
            }}
          capabilities: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleOperator.containerSecurityContext.capabilities
            "context" $) | nindent 12 }}
          privileged: {{ .Values.lifecycleOperator.containerSecurityContext.privileged
            }}
          runAsGroup: {{ .Values.lifecycleOperator.containerSecurityContext.runAsGroup
            }}
          runAsNonRoot: {{ .Values.lifecycleOperator.containerSecurityContext.runAsNonRoot
            }}
          runAsUser: {{ .Values.lifecycleOperator.containerSecurityContext.runAsUser
            }}
          seccompProfile: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleOperator.containerSecurityContext.seccompProfile
            "context" $) | nindent 12 }}
        {{- if .Values.lifecycleOperator.livenessProbe }}
        livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleOperator.livenessProbe "context" $) | nindent 10 }}
         {{- else }}
        livenessProbe:
         httpGet:
           path: /healthz
           port: 8081
         initialDelaySeconds: 15
         periodSeconds: 20
        {{- end }}
        {{- if .Values.lifecycleOperator.readinessProbe }}
        readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleOperator.readinessProbe "context" $) | nindent 10 }}
         {{- else }}
        readinessProbe:
         httpGet:
           path: /readyz
           port: 8081
         initialDelaySeconds: 5
         periodSeconds: 10
        {{- end }}
      imagePullSecrets: {{- include "common.images.imagePullSecrets" . }}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: lifecycle-operator
      terminationGracePeriodSeconds: 10
{{- if .Values.lifecycleOperator.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleOperator.topologySpreadConstraints "context" $) | nindent 8 }}
{{- end }}
{{- if .Values.lifecycleOperator.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.lifecycleOperator.nodeSelector "context" $) | nindent 8 }}
{{- end }}
{{- if .Values.lifecycleOperator.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleOperator.tolerations "context" .) | nindent 8 }}
{{- end }}

{{- if or (le .Capabilities.KubeVersion.Minor "26") (not .Values.schedulingGatesEnabled) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scheduler
  namespace: {{ .Release.Namespace | quote }}
  labels:
    component: scheduler
{{- include "common.labels.standard" ( dict "context" . ) | nindent 4 }}
{{- include "common.annotations" ( dict "context" . ) }}
spec:
  replicas: {{ .Values.scheduler.replicas }}
  selector:
    matchLabels:
      component: scheduler
    {{- include "common.selectorLabels"  ( dict "context" . ) | nindent 6 }}
  template:
    metadata:
      labels:
        component: scheduler
      {{- include "common.selectorLabels"  ( dict "context" . )  | nindent 8 }}
    spec:
      containers:
      - command:
        - /bin/kube-scheduler
        - --config=/etc/kubernetes/scheduler-config.yaml
        env:
        - name: OTEL_COLLECTOR_URL
          value: {{ .Values.scheduler.env.otelCollectorUrl | quote }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ include "common.images.image" ( dict "imageRoot" .Values.scheduler.image "global" .Values.global ) }}
        imagePullPolicy: {{ .Values.scheduler.imagePullPolicy }}
        name: scheduler
        resources: {{- toYaml .Values.scheduler.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: {{ .Values.scheduler.containerSecurityContext.allowPrivilegeEscalation
            }}
          capabilities: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.containerSecurityContext.capabilities
            "context" $) | nindent 12 }}
          privileged: {{ .Values.scheduler.containerSecurityContext.privileged
            }}
          readOnlyRootFilesystem: {{ .Values.scheduler.containerSecurityContext.readOnlyRootFilesystem
            }}
          runAsNonRoot: {{ .Values.scheduler.containerSecurityContext.runAsNonRoot
            }}
          runAsUser: {{ .Values.scheduler.containerSecurityContext.runAsUser }}
          seccompProfile: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.containerSecurityContext.seccompProfile
            "context" $) | nindent 12 }}
        volumeMounts:
        - mountPath: /etc/kubernetes
          name: scheduler-config
          readOnly: true
        {{- if .Values.scheduler.livenessProbe }}
        livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.livenessProbe "context" $) | nindent 10 }}
         {{- else }}
        livenessProbe:
         httpGet:
           path: /healthz
           port: 10259
           scheme: HTTPS
         initialDelaySeconds: 15
        {{- end }}
        {{- if .Values.scheduler.readinessProbe }}
        readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.readinessProbe "context" $) | nindent 10 }}
         {{- else }}
        readinessProbe:
         httpGet:
           path: /healthz
           port: 10259
           scheme: HTTPS
        {{- end }}
      imagePullSecrets: {{- include "common.images.imagePullSecrets" . }}
      serviceAccountName: keptn-scheduler
      volumes:
      - configMap:
          name: scheduler-config
        name: scheduler-config
{{- if .Values.scheduler.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.topologySpreadConstraints "context" $) | nindent 8 }}
{{- end }}
{{- if .Values.scheduler.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.scheduler.nodeSelector "context" $) | nindent 8 }}
{{- end }}
{{- if .Values.scheduler.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.tolerations "context" .) | nindent 8 }}
{{- end }}
{{- end }}
