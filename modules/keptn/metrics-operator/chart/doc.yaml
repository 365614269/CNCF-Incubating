
## @section Keptn Metrics Operator common

## @param   replicas customize number of installed metrics operator replicas

## @extra   operatorService.ports[0] webhook port (must correspond to Mutating Webhook Configurations)
## @param   operatorService.ports[0].name
## @param   operatorService.ports[0].port
## @param   operatorService.ports[0].protocol
## @param   operatorService.ports[0].targetPort
## @extra   operatorService.ports[1] port to integrate with the K8s custom metrics API
## @param   operatorService.ports[1].name
## @param   operatorService.ports[1].port
## @param   operatorService.ports[1].targetPort
## @extra   operatorService.ports[2] port to integrate with metrics API (e.g. Keda)
## @param   operatorService.ports[2].name
## @param   operatorService.ports[2].port
## @param   operatorService.ports[2].protocol
## @param   operatorService.ports[2].targetPort
## @param   operatorService.type

## @param      config.health.healthProbeBindAddress setup on what address to start the default health handler
## @param      config.leaderElection.leaderElect decides whether to enable leader election with multiple replicas
## @param      config.leaderElection.resourceName defines LeaderElectionID
## @param      config.metrics.bindAddress MetricsBindAddress is the TCP address that the controller should bind to for serving prometheus metrics. It can be set to "0" to disable the metrics serving.
## @param      config.webhook.port

## @extra Mutating Webhook Configurations for metrics Operator
## @param     webhookService.ports[0].port
## @param     webhookService.ports[0].protocol
## @param     webhookService.ports[0].targetPort
## @param     webhookService.type

## @param    nodeSelector add custom nodes selector to metrics operator
## @param    tolerations add custom tolerations to metrics operator
## @param    topologySpreadConstraints add custom topology constraints to metrics operator

## @section Keptn Metrics Operator controller
## @extra   containerSecurityContext Sets security context privileges
## @param   containerSecurityContext.allowPrivilegeEscalation
## @param   containerSecurityContext.capabilities.drop
## @param   containerSecurityContext.privileged
## @param   containerSecurityContext.runAsGroup
## @param   containerSecurityContext.runAsNonRoot
## @param   containerSecurityContext.runAsUser
## @param   containerSecurityContext.seccompProfile.type


## @param   image.repository specify registry for manager image
## @param   image.tag select tag for manager image

## @param   env.exposeKeptnMetrics enable metrics exporter
## @param   env.metricsControllerLogLevel sets the log level of Metrics Controller
## @param   env.analysisControllerLogLevel  sets the log level of Analysis Controller
## @param   env.enableKeptnAnalysis  enables/disables the analysis feature

## @extra  livenessProbe custom livenessprobe for manager container
## @skip   livenessProbe.httpGet.path
## @skip   livenessProbe.httpGet.port
## @skip   livenessProbe.initialDelaySeconds
## @skip   livenessProbe.periodSeconds

## @extra  readinessProbe custom readinessprobe for manager container
## @skip   readinessProbe.httpGet.path
## @skip   readinessProbe.httpGet.port
## @skip   readinessProbe.initialDelaySeconds
## @skip   readinessProbe.periodSeconds

## @extra  resources specify limits and requests for manager container
## @skip   resources.limits.cpu
## @skip   resources.limits.memory
## @skip   resources.requests.cpu
## @skip   resources.requests.memory

## @section Global
## Current available parameters: kubernetesClusterDomain, imagePullSecrets, schedulingGatesEnabled
## @param  kubernetesClusterDomain overrides domain.local
## @param  imagePullSecrets global value for image registry secret
