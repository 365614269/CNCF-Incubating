name: "Release"

on:
  workflow_dispatch: {}


jobs:
  BuildWheels:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      checks: write    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Custodian        
        uses: ./.github/composites/install
        with:
          python-version: "3.11"

      - name: Build Wheels
        shell: bash
        run: |
          poetry self add poetry-plugin-freeze
          pip install twine
          make pkg-build-wheel

      - name: Build ChangeLog
        shell: bash
        run: |
          python tools/dev/changelog.py --output release.md \
             --path . --since last --skip-provider awscc
          cat release.md

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_FTEST_ROLE }}
          aws-region: us-east-1

      - name: Auth Staging Repository
        shell: bash
        env:
          AWS_DEFAULT_REGION: us-east-1
          PKG_DOMAIN: release-staging
          PKG_REPO: stagec7n
        run: |
          ./tools/dev/staging-auth.sh >> /dev/null
  
      - name: Stage Wheels
        shell: bash
        env:
          AWS_DEFAULT_REGION: us-east-1
          PKG_DOMAIN: release-staging
          PKG_REPO: stagec7n
        run: |
          set -euxo pipefail
          python tools/dev/staging-clean.py
          python tools/dev/poetrypkg.py gen-qa-requires -r . --output wheels-manifest.txt
          make pkg-publish-wheel PKG_REPO=${{ env.PKG_REPO }}

      - uses: actions/upload-artifact@v3
        with:
          name: built-wheels
          path: |
            **/*.whl
            release.md
            wheels-manifest.txt

  TestWheels:
    runs-on: ubuntu-latest
    needs: BuildWheels
    permissions:
      id-token: write
      contents: read
      checks: write    
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - uses: actions/download-artifact@v3
        with:
          name: built-wheels

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_FTEST_ROLE }}
          aws-region: us-east-1


      - name: Auth Staging Repository
        shell: bash
        env:
          AWS_DEFAULT_REGION: us-east-1
          PKG_DOMAIN: release-staging
          PKG_REPO: stagec7n
        run: |
          ./tools/dev/staging-auth.sh >> /dev/null

      - name: Install Staged
        shell: bash
        run: |
          set -euxo pipefail
          pip install -r wheels-manifest.txt  --index-url ${{ env.STAGE_INDEX_URL }} --extra-index-url https://pypi.org/simple/

      - name: Smoke Test
        shell: bash
        run: |
          set -euxo pipefail
          custodian version --debug
          custodian schema --json > schema.json

  Publish:
    runs-on: ubuntu-latest
    needs: TestWheels
    steps:
      - uses: actions/checkout@v3
      - name: Install Custodian
        uses: ./.github/composites/install
        with:
          python-version: "3.11"          

      - uses: actions/download-artifact@v3
        with:
          name: built-wheels

      - name: Get Tag
        shell: bash
        run: |
          echo "release=$(poetry version -s).0" >> "$GITHUB_ENV"

#      - name: Create Release
#        uses: ncipollo/release-action@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          artifacts: "**/dist/*.whl"
#          token: ${{ secrets.GITHUB_TOKEN }}
#          tag: ${{ env.release_tag }}
#          commit: main
#          draft: true
#          bodyFile: release.md

#      - name: Publish
#        if: startsWith(github.ref, 'refs/tags/')
#        run: |
#          make pkg-publish PKG_REPO=pypi
