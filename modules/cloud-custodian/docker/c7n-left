# Dockerfiles are generated from tools/dev/dockerpkg.py
FROM ubuntu:22.04 as build-env

ARG POETRY_VERSION="1.5.1"
SHELL ["/bin/bash", "-c"]

# pre-requisite distro deps, and build env setup
RUN adduser --disabled-login --gecos "" custodian
RUN apt-get --yes update
RUN apt-get --yes install --no-install-recommends build-essential curl python3-venv python3-dev
RUN python3 -m venv /usr/local
RUN /usr/local/bin/pip install -U pip setuptools &&     /usr/local/bin/pip install "poetry==${POETRY_VERSION}"
ARG PATH="/root/.local/bin:$PATH"

WORKDIR /src
ADD pyproject.toml poetry.lock README.md /src
RUN . /usr/local/bin/activate && poetry install --without dev --no-root

ADD c7n /src/c7n/
RUN . /usr/local/bin/activate && poetry install --only-root

ADD tools/c7n_left /src/tools/c7n_left
RUN . /usr/local/bin/activate && cd tools/c7n_left && poetry install --without dev

RUN mkdir /output

FROM ubuntu:22.04

LABEL name="left" \
      repository="http://github.com/cloud-custodian/cloud-custodian"

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get --yes update \
        && apt-get --yes install python3 python3-venv git --no-install-recommends \
        && rm -Rf /var/cache/apt \
        && rm -Rf /var/lib/apt/lists/* \
        && rm -Rf /var/log/*

# These should remain below any other commands because they will invalidate
# the layer cache
COPY --from=build-env /src /src
COPY --from=build-env /usr/local /usr/local
COPY --from=build-env /output /output


RUN adduser --disabled-login --gecos "" custodian
USER custodian
WORKDIR /home/custodian
ENV LC_ALL="C.UTF-8" LANG="C.UTF-8"
VOLUME ["/home/custodian"]
ENTRYPOINT ["/usr/local/bin/c7n-left"]
CMD ["--help"]


LABEL "org.opencontainers.image.title"="left"
LABEL "org.opencontainers.image.description"="Cloud Custodian IaC Engine"
LABEL "org.opencontainers.image.documentation"="https://cloudcustodian.io/docs/tools/c7n-left.html"
