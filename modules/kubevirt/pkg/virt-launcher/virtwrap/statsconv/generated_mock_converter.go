// Code generated by MockGen. DO NOT EDIT.
// Source: converter.go
//
// Generated by this command:
//
//	mockgen -source converter.go -imports libvirt=libvirt.org/go/libvirt -package=statsconv -destination=generated_mock_converter.go
//

// Package statsconv is a generated GoMock package.
package statsconv

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockDomainIdentifier is a mock of DomainIdentifier interface.
type MockDomainIdentifier struct {
	ctrl     *gomock.Controller
	recorder *MockDomainIdentifierMockRecorder
	isgomock struct{}
}

// MockDomainIdentifierMockRecorder is the mock recorder for MockDomainIdentifier.
type MockDomainIdentifierMockRecorder struct {
	mock *MockDomainIdentifier
}

// NewMockDomainIdentifier creates a new mock instance.
func NewMockDomainIdentifier(ctrl *gomock.Controller) *MockDomainIdentifier {
	mock := &MockDomainIdentifier{ctrl: ctrl}
	mock.recorder = &MockDomainIdentifierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDomainIdentifier) EXPECT() *MockDomainIdentifierMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockDomainIdentifier) GetName() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetName indicates an expected call of GetName.
func (mr *MockDomainIdentifierMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockDomainIdentifier)(nil).GetName))
}

// GetUUIDString mocks base method.
func (m *MockDomainIdentifier) GetUUIDString() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUUIDString")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUUIDString indicates an expected call of GetUUIDString.
func (mr *MockDomainIdentifierMockRecorder) GetUUIDString() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUUIDString", reflect.TypeOf((*MockDomainIdentifier)(nil).GetUUIDString))
}
