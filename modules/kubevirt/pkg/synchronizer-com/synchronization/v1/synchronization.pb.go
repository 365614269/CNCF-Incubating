// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/synchronizer-com/synchronization/v1/synchronization.proto

/*
Package v1 is a generated protocol buffer package.

It is generated from these files:

	pkg/synchronizer-com/synchronization/v1/synchronization.proto

It has these top-level messages:

	VMI
	VMIStatus
	VMIStatusRequest
	VMIStatusResponse
*/
package v1

import (
	fmt "fmt"

	proto "github.com/golang/protobuf/proto"

	math "math"

	context "golang.org/x/net/context"

	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type VMI struct {
	VmiJson []byte `protobuf:"bytes,1,opt,name=vmiJson,proto3" json:"vmiJson,omitempty"`
}

func (m *VMI) Reset()                    { *m = VMI{} }
func (m *VMI) String() string            { return proto.CompactTextString(m) }
func (*VMI) ProtoMessage()               {}
func (*VMI) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *VMI) GetVmiJson() []byte {
	if m != nil {
		return m.VmiJson
	}
	return nil
}

type VMIStatus struct {
	VmiStatusJson []byte `protobuf:"bytes,1,opt,name=vmiStatusJson,proto3" json:"vmiStatusJson,omitempty"`
}

func (m *VMIStatus) Reset()                    { *m = VMIStatus{} }
func (m *VMIStatus) String() string            { return proto.CompactTextString(m) }
func (*VMIStatus) ProtoMessage()               {}
func (*VMIStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *VMIStatus) GetVmiStatusJson() []byte {
	if m != nil {
		return m.VmiStatusJson
	}
	return nil
}

type VMIStatusRequest struct {
	MigrationID string     `protobuf:"bytes,1,opt,name=migrationID" json:"migrationID,omitempty"`
	VmiStatus   *VMIStatus `protobuf:"bytes,2,opt,name=vmiStatus" json:"vmiStatus,omitempty"`
}

func (m *VMIStatusRequest) Reset()                    { *m = VMIStatusRequest{} }
func (m *VMIStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*VMIStatusRequest) ProtoMessage()               {}
func (*VMIStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *VMIStatusRequest) GetMigrationID() string {
	if m != nil {
		return m.MigrationID
	}
	return ""
}

func (m *VMIStatusRequest) GetVmiStatus() *VMIStatus {
	if m != nil {
		return m.VmiStatus
	}
	return nil
}

type VMIStatusResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *VMIStatusResponse) Reset()                    { *m = VMIStatusResponse{} }
func (m *VMIStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*VMIStatusResponse) ProtoMessage()               {}
func (*VMIStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *VMIStatusResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*VMI)(nil), "kubevirt.synchronization.VMI")
	proto.RegisterType((*VMIStatus)(nil), "kubevirt.synchronization.VMIStatus")
	proto.RegisterType((*VMIStatusRequest)(nil), "kubevirt.synchronization.VMIStatusRequest")
	proto.RegisterType((*VMIStatusResponse)(nil), "kubevirt.synchronization.VMIStatusResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Synchronize service

type SynchronizeClient interface {
	SyncSourceMigrationStatus(ctx context.Context, in *VMIStatusRequest, opts ...grpc.CallOption) (*VMIStatusResponse, error)
	SyncTargetMigrationStatus(ctx context.Context, in *VMIStatusRequest, opts ...grpc.CallOption) (*VMIStatusResponse, error)
}

type synchronizeClient struct {
	cc *grpc.ClientConn
}

func NewSynchronizeClient(cc *grpc.ClientConn) SynchronizeClient {
	return &synchronizeClient{cc}
}

func (c *synchronizeClient) SyncSourceMigrationStatus(ctx context.Context, in *VMIStatusRequest, opts ...grpc.CallOption) (*VMIStatusResponse, error) {
	out := new(VMIStatusResponse)
	err := grpc.Invoke(ctx, "/kubevirt.synchronization.Synchronize/SyncSourceMigrationStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *synchronizeClient) SyncTargetMigrationStatus(ctx context.Context, in *VMIStatusRequest, opts ...grpc.CallOption) (*VMIStatusResponse, error) {
	out := new(VMIStatusResponse)
	err := grpc.Invoke(ctx, "/kubevirt.synchronization.Synchronize/SyncTargetMigrationStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Synchronize service

type SynchronizeServer interface {
	SyncSourceMigrationStatus(context.Context, *VMIStatusRequest) (*VMIStatusResponse, error)
	SyncTargetMigrationStatus(context.Context, *VMIStatusRequest) (*VMIStatusResponse, error)
}

func RegisterSynchronizeServer(s *grpc.Server, srv SynchronizeServer) {
	s.RegisterService(&_Synchronize_serviceDesc, srv)
}

func _Synchronize_SyncSourceMigrationStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VMIStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SynchronizeServer).SyncSourceMigrationStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kubevirt.synchronization.Synchronize/SyncSourceMigrationStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SynchronizeServer).SyncSourceMigrationStatus(ctx, req.(*VMIStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Synchronize_SyncTargetMigrationStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VMIStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SynchronizeServer).SyncTargetMigrationStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kubevirt.synchronization.Synchronize/SyncTargetMigrationStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SynchronizeServer).SyncTargetMigrationStatus(ctx, req.(*VMIStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Synchronize_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kubevirt.synchronization.Synchronize",
	HandlerType: (*SynchronizeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SyncSourceMigrationStatus",
			Handler:    _Synchronize_SyncSourceMigrationStatus_Handler,
		},
		{
			MethodName: "SyncTargetMigrationStatus",
			Handler:    _Synchronize_SyncTargetMigrationStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/synchronizer-com/synchronization/v1/synchronization.proto",
}

func init() {
	proto.RegisterFile("pkg/synchronizer-com/synchronization/v1/synchronization.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x2d, 0xc8, 0x4e, 0xd7,
	0x2f, 0xae, 0xcc, 0x4b, 0xce, 0x28, 0xca, 0xcf, 0xcb, 0xac, 0x4a, 0x2d, 0xd2, 0x4d, 0xce, 0xcf,
	0x45, 0x12, 0x48, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2f, 0x33, 0x44, 0x17, 0xd2, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x92, 0xc8, 0x2e, 0x4d, 0x4a, 0x2d, 0xcb, 0x2c, 0x2a, 0xd1, 0x43, 0x93, 0x57,
	0x92, 0xe7, 0x62, 0x0e, 0xf3, 0xf5, 0x14, 0x92, 0xe0, 0x62, 0x2f, 0xcb, 0xcd, 0xf4, 0x2a, 0xce,
	0xcf, 0x93, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x09, 0x82, 0x71, 0x95, 0x0c, 0xb9, 0x38, 0xc3, 0x7c,
	0x3d, 0x83, 0x4b, 0x12, 0x4b, 0x4a, 0x8b, 0x85, 0x54, 0xb8, 0x78, 0xcb, 0x72, 0x33, 0x21, 0x1c,
	0x24, 0xc5, 0xa8, 0x82, 0x4a, 0xe5, 0x5c, 0x02, 0x70, 0x2d, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5,
	0x25, 0x42, 0x0a, 0x5c, 0xdc, 0xb9, 0x99, 0xe9, 0x45, 0x60, 0x4b, 0x3d, 0x5d, 0xc0, 0xfa, 0x38,
	0x83, 0x90, 0x85, 0x84, 0x1c, 0xb9, 0x38, 0xe1, 0xc6, 0x48, 0x30, 0x29, 0x30, 0x6a, 0x70, 0x1b,
	0x29, 0xeb, 0xe1, 0x72, 0xb7, 0x1e, 0xc2, 0x02, 0x84, 0x2e, 0x25, 0x5d, 0x2e, 0x41, 0x24, 0x8b,
	0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x41, 0x5e, 0xcb, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x85,
	0xda, 0x0a, 0xe3, 0x1a, 0xfd, 0x65, 0xe4, 0xe2, 0x0e, 0x46, 0x84, 0xa9, 0x50, 0x19, 0x97, 0x24,
	0x88, 0x1b, 0x9c, 0x5f, 0x5a, 0x94, 0x9c, 0xea, 0x0b, 0x73, 0x1a, 0xd4, 0xeb, 0x5a, 0xc4, 0xb8,
	0x05, 0xe2, 0x59, 0x29, 0x6d, 0xa2, 0xd4, 0x42, 0xdc, 0xa7, 0xc4, 0x00, 0xb3, 0x37, 0x24, 0xb1,
	0x28, 0x3d, 0xb5, 0x84, 0x7e, 0xf6, 0x3a, 0xb1, 0x44, 0x31, 0x95, 0x19, 0x26, 0xb1, 0x81, 0x93,
	0x88, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x6c, 0x3f, 0x46, 0x88, 0x63, 0x02, 0x00, 0x00,
}
