// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/vsock/system/v1/system.proto

/*
Package v1 is a generated protocol buffer package.

It is generated from these files:

	pkg/vsock/system/v1/system.proto

It has these top-level messages:

	Bundle
	EmptyRequest
*/
package v1

import (
	fmt "fmt"

	proto "github.com/golang/protobuf/proto"

	math "math"

	context "golang.org/x/net/context"

	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Bundle struct {
	Raw []byte `protobuf:"bytes,1,opt,name=Raw,proto3" json:"Raw,omitempty"`
}

func (m *Bundle) Reset()                    { *m = Bundle{} }
func (m *Bundle) String() string            { return proto.CompactTextString(m) }
func (*Bundle) ProtoMessage()               {}
func (*Bundle) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Bundle) GetRaw() []byte {
	if m != nil {
		return m.Raw
	}
	return nil
}

type EmptyRequest struct {
}

func (m *EmptyRequest) Reset()                    { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string            { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()               {}
func (*EmptyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*Bundle)(nil), "kubevirt.vsock.system.v1.Bundle")
	proto.RegisterType((*EmptyRequest)(nil), "kubevirt.vsock.system.v1.EmptyRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for System service

type SystemClient interface {
	CABundle(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*Bundle, error)
}

type systemClient struct {
	cc *grpc.ClientConn
}

func NewSystemClient(cc *grpc.ClientConn) SystemClient {
	return &systemClient{cc}
}

func (c *systemClient) CABundle(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*Bundle, error) {
	out := new(Bundle)
	err := grpc.Invoke(ctx, "/kubevirt.vsock.system.v1.System/CABundle", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for System service

type SystemServer interface {
	CABundle(context.Context, *EmptyRequest) (*Bundle, error)
}

func RegisterSystemServer(s *grpc.Server, srv SystemServer) {
	s.RegisterService(&_System_serviceDesc, srv)
}

func _System_CABundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemServer).CABundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kubevirt.vsock.system.v1.System/CABundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemServer).CABundle(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _System_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kubevirt.vsock.system.v1.System",
	HandlerType: (*SystemServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CABundle",
			Handler:    _System_CABundle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/vsock/system/v1/system.proto",
}

func init() { proto.RegisterFile("pkg/vsock/system/v1/system.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x28, 0xc8, 0x4e, 0xd7,
	0x2f, 0x2b, 0xce, 0x4f, 0xce, 0xd6, 0x2f, 0xae, 0x2c, 0x2e, 0x49, 0xcd, 0xd5, 0x2f, 0x33, 0x84,
	0xb2, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x24, 0xb2, 0x4b, 0x93, 0x52, 0xcb, 0x32, 0x8b,
	0x4a, 0xf4, 0xc0, 0xca, 0xf4, 0xa0, 0x92, 0x65, 0x86, 0x4a, 0x52, 0x5c, 0x6c, 0x4e, 0xa5, 0x79,
	0x29, 0x39, 0xa9, 0x42, 0x02, 0x5c, 0xcc, 0x41, 0x89, 0xe5, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x3c,
	0x41, 0x20, 0xa6, 0x12, 0x1f, 0x17, 0x8f, 0x6b, 0x6e, 0x41, 0x49, 0x65, 0x50, 0x6a, 0x61, 0x69,
	0x6a, 0x71, 0x89, 0x51, 0x02, 0x17, 0x5b, 0x30, 0x58, 0xa3, 0x50, 0x18, 0x17, 0x87, 0xb3, 0x23,
	0x54, 0x9f, 0x9a, 0x1e, 0x2e, 0xc3, 0xf5, 0x90, 0x75, 0x4b, 0x29, 0xe0, 0x56, 0x07, 0x31, 0x49,
	0x89, 0xc1, 0x89, 0x25, 0x8a, 0xa9, 0xcc, 0x30, 0x89, 0x0d, 0xec, 0x68, 0x63, 0x40, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x0f, 0xe2, 0x39, 0xce, 0xd8, 0x00, 0x00, 0x00,
}
