// Code generated by MockGen. DO NOT EDIT.
// Source: authorizer.go
//
// Generated by this command:
//
//	mockgen -source authorizer.go -package=rest -destination=generated_mock_authorizer.go -imports restful=github.com/emicklei/go-restful/v3
//

// Package rest is a generated GoMock package.
package rest

import (
	reflect "reflect"

	restful "github.com/emicklei/go-restful/v3"
	gomock "go.uber.org/mock/gomock"
)

// MockVirtApiAuthorizor is a mock of VirtApiAuthorizor interface.
type MockVirtApiAuthorizor struct {
	ctrl     *gomock.Controller
	recorder *MockVirtApiAuthorizorMockRecorder
	isgomock struct{}
}

// MockVirtApiAuthorizorMockRecorder is the mock recorder for MockVirtApiAuthorizor.
type MockVirtApiAuthorizorMockRecorder struct {
	mock *MockVirtApiAuthorizor
}

// NewMockVirtApiAuthorizor creates a new mock instance.
func NewMockVirtApiAuthorizor(ctrl *gomock.Controller) *MockVirtApiAuthorizor {
	mock := &MockVirtApiAuthorizor{ctrl: ctrl}
	mock.recorder = &MockVirtApiAuthorizorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVirtApiAuthorizor) EXPECT() *MockVirtApiAuthorizorMockRecorder {
	return m.recorder
}

// AddExtraPrefixHeaders mocks base method.
func (m *MockVirtApiAuthorizor) AddExtraPrefixHeaders(header []string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddExtraPrefixHeaders", header)
}

// AddExtraPrefixHeaders indicates an expected call of AddExtraPrefixHeaders.
func (mr *MockVirtApiAuthorizorMockRecorder) AddExtraPrefixHeaders(header any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddExtraPrefixHeaders", reflect.TypeOf((*MockVirtApiAuthorizor)(nil).AddExtraPrefixHeaders), header)
}

// AddGroupHeaders mocks base method.
func (m *MockVirtApiAuthorizor) AddGroupHeaders(header []string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddGroupHeaders", header)
}

// AddGroupHeaders indicates an expected call of AddGroupHeaders.
func (mr *MockVirtApiAuthorizorMockRecorder) AddGroupHeaders(header any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddGroupHeaders", reflect.TypeOf((*MockVirtApiAuthorizor)(nil).AddGroupHeaders), header)
}

// AddUserHeaders mocks base method.
func (m *MockVirtApiAuthorizor) AddUserHeaders(header []string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddUserHeaders", header)
}

// AddUserHeaders indicates an expected call of AddUserHeaders.
func (mr *MockVirtApiAuthorizorMockRecorder) AddUserHeaders(header any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddUserHeaders", reflect.TypeOf((*MockVirtApiAuthorizor)(nil).AddUserHeaders), header)
}

// Authorize mocks base method.
func (m *MockVirtApiAuthorizor) Authorize(req *restful.Request) (bool, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Authorize", req)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Authorize indicates an expected call of Authorize.
func (mr *MockVirtApiAuthorizorMockRecorder) Authorize(req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Authorize", reflect.TypeOf((*MockVirtApiAuthorizor)(nil).Authorize), req)
}

// GetExtraPrefixHeaders mocks base method.
func (m *MockVirtApiAuthorizor) GetExtraPrefixHeaders() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExtraPrefixHeaders")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetExtraPrefixHeaders indicates an expected call of GetExtraPrefixHeaders.
func (mr *MockVirtApiAuthorizorMockRecorder) GetExtraPrefixHeaders() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExtraPrefixHeaders", reflect.TypeOf((*MockVirtApiAuthorizor)(nil).GetExtraPrefixHeaders))
}

// GetGroupHeaders mocks base method.
func (m *MockVirtApiAuthorizor) GetGroupHeaders() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGroupHeaders")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetGroupHeaders indicates an expected call of GetGroupHeaders.
func (mr *MockVirtApiAuthorizorMockRecorder) GetGroupHeaders() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGroupHeaders", reflect.TypeOf((*MockVirtApiAuthorizor)(nil).GetGroupHeaders))
}

// GetUserHeaders mocks base method.
func (m *MockVirtApiAuthorizor) GetUserHeaders() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserHeaders")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetUserHeaders indicates an expected call of GetUserHeaders.
func (mr *MockVirtApiAuthorizorMockRecorder) GetUserHeaders() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserHeaders", reflect.TypeOf((*MockVirtApiAuthorizor)(nil).GetUserHeaders))
}
