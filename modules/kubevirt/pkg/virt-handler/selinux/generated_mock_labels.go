// Automatically generated by MockGen. DO NOT EDIT!
// Source: labels.go

package selinux

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of SELinux interface
type MockSELinux struct {
	ctrl     *gomock.Controller
	recorder *_MockSELinuxRecorder
}

// Recorder for MockSELinux (not exported)
type _MockSELinuxRecorder struct {
	mock *MockSELinux
}

func NewMockSELinux(ctrl *gomock.Controller) *MockSELinux {
	mock := &MockSELinux{ctrl: ctrl}
	mock.recorder = &_MockSELinuxRecorder{mock}
	return mock
}

func (_m *MockSELinux) EXPECT() *_MockSELinuxRecorder {
	return _m.recorder
}

func (_m *MockSELinux) Mode() string {
	ret := _m.ctrl.Call(_m, "Mode")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockSELinuxRecorder) Mode() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Mode")
}

func (_m *MockSELinux) IsPermissive() bool {
	ret := _m.ctrl.Call(_m, "IsPermissive")
	ret0, _ := ret[0].(bool)
	return ret0
}

func (_mr *_MockSELinuxRecorder) IsPermissive() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "IsPermissive")
}
