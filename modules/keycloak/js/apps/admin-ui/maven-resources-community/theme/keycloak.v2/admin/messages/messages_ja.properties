anyResource=任意のリソース
themes=テーマ
addClientScope=クライアントスコープの追加
clientType=クライアントタイプ
clientSignature=クライアント署名が必須
unanimous=Unanimous
policy-name=このポリシーの名前を設定します。
clientHelp=認可リクエストを作成するクライアントを選択してください。提供されない場合は、認可リクエストは今いるページのクライアントで行われることになります。
disabledFeatures=無効な機能
wantAssertionsSignedHelp=このサービス・プロバイダーが署名付きアサーションを要求するかどうかを設定します。
signOut=サインアウト
validatorDialogColNames.colName=ロール名
certificateHelp=クライアントで発行され、キーストアの秘密鍵で署名されたJWTを検証するためのクライアント証明書です。
credentialType=タイプ
passLoginHint=login_hintを渡す
operationType=操作タイプ
httpPostBindingAuthnRequestHelp=HTTP-POSTバインディングを使用してAuthnRequestを送信するかどうかを設定します。オフの場合は、HTTP-REDIRECTバインディングが使用されます。
userInitiatedActionLifespan=ユーザー起動アクションの有効期間
decisionStrategy=決定戦略
policyEnforcementMode=ポリシー施行モード
securityDefences=セキュリティー防御
realmSettings=レルムの設定
partialExport=部分エクスポート
displayName=表示名
applyToResourceTypeHelp=このパーミッションが、特定タイプの全リソースに適用されるべきかどうかを指定します。この場合、パーミッションは特定リソースタイプの全インスタンスに対して評価されます。
envelopeFrom=Envelope From
clientDescriptionHelp=クライアントの説明を指定します。例えば「タイムシート用のクライアント」です。ローカライズ用のキーもサポートしています。例: ${my_client_description}
effectiveRoleScopeMappings=有効なロールスコープ・マッピング
clientAuthenticator=クライアント認証
updateFirstLoginHelp=初回ログイン時のプロフィール更新
clientSessionMax=クライアントセッション最大
usermodel.clientRoleMapping.clientId.label=クライアントID
clientId=クライアントID
contextualAttributesHelp=実行環境や実行コンテキストによって提供される任意の属性を設定します。
clientLoginTimeoutHelp=クライアントがアクセストークン・プロトコルを終了するまでの最大時間。これは通常1分です。
lastAccess=最終アクセス
clientAuthentications.private_key_jwt=秘密鍵で署名されたJWT
uiDisplayName=コンソール表示名
adminEventsSettings=管理イベントの設定
times.minutes=分
disableUserInfo=UserInfoの無効
addressClaim.postal_code.label=郵便番号のユーザー属性名
forcePostBinding=POSTバインディングを強制
defaultRoles=デフォルトロール
clientScopeTypes.default=デフォルト
addressClaim.country.tooltip=「address」トークンクレーム内の「country」サブクレームにマップするために使用されるユーザー属性の名前。デフォルトは「country」です。
uuidLdapAttribute=UUID LDAP属性
scopeNameHelp=クライアント・スコープの名前。レルム内でユニークでなければなりません。スコープ・パラメーターの値として使用されるため、名前には空白文字を含めないでください。
requiredUserActions=必要なユーザー・アクション
flowTypeHelp=どの種類のフォームかを設定します。
allowRemoteResourceManagement=リモートリソース管理
identityProvider=アイデンティティープロバイダー
identityProviderLinks=アイデンティティープロバイダーのリンク
leave=外す
eventTypes.IMPERSONATE.name=代理ログイン
export=エクスポート
assertionLifespan=アサーションの有効期限
addressClaim.formatted.label=整形された住所のユーザー属性名
add=追加
passwordPolicy=パスワードポリシー
openIDEndpointConfiguration=OpenIDエンドポイントの設定
backchannelLogout=バックチャネルログアウト
addressClaim.street.label=その他住所のユーザー属性名
prompts.login=login
users=ユーザー
offlineSessionIdleHelp=セッションの有効期限が切れるまでのオフライン時間です。この期限内に少なくとも1回はオフライン・トークンを使用してリフレッシュしないと、オフライン・セッションは有効期限切れとなります。
wantAssertionsEncrypted=アサーションの暗号化が必要
forceNameIdFormatHelp=要求されたNameIDサブジェクト・フォーマットを無視し、管理コンソールで設定された物を使用します。
uris=URI
port=ポート
realmRolePrefix=レルムロールのプレフィックス
jwksUrlHelp=JWK形式のクライアント鍵が格納されているURLを設定します。詳細はJWKの仕様を参照してください。「jwt」クレデンシャルを持つKeycloakクライアント・アダプターを使用している場合は、アプリケーションに「/k_jwks」という接尾辞を付けたURLを使用することができます。例えば、「http://www.myhost.com/myapp/k_jwks」です。
includeRepresentation=Representationを含める
singleLogoutServiceUrl=シングル・ログアウト・サービスのURL
roles=ロール
representation=Representation
remove=削除
scopePermissions.users.manage-group-membership-description=管理者がレルム内のすべてのユーザーのグループ・メンバーシップを管理できるかどうかを決定するポリシー。これは、特定のグループポリシーと組み合わせて使用??されます
loginTheme=ログインテーマ
provider=プロバイダー
flows=フロー
scope=スコープ
includeRepresentationHelp=作成または更新リクエストのJSON Representationを含めるかどうかを設定します。
signAssertionsHelp=SAMLドキュメント内のアサーションを署名すべきか設定します。もしドキュメントが既に署名済みの場合は、この設定は不要です。
validateSignature=署名検証
headers=ヘッダー
effectiveProtocolMappersHelp=すべてのデフォルトのクライアント・スコープと選択されたオプションのスコープが含まれます。クライアントに発行されたアクセストークンを生成するときに、すべてのクライアント・スコープのすべてのプロトコル・マッパーとロールスコープのマッピングが使用されます
fromDisplayNameHelp=差出人のアドレスのユーザー・フレンドリーな名前です（オプション）。
userObjectClasses=ユーザー・オブジェクト・クラス
policyRoles=このポリシーで許可されるクライアント・ロールを指定してください。
accountLinkingOnlyHelp=オンの場合、ユーザーはこのプロバイダーからログインできません。このプロバイダーにリンクすることのみできます。これは、プロバイダーからのログインを許可したくないが、プロバイダーと統合したい場合に便利です
refreshTokenMaxReuseHelp=リフレッシュ・トークンを再利用できる最大回数。別のトークンが使用された場合、即時に無効化されます。
times.hours=時
webOrigins=Webオリジン
webAuthnPolicyAuthenticatorAttachmentHelp=受け入れ可能なアタッチメント・パターンでオーセンティケーターと通信します。
username=ユーザー名
importConfig=ファイルから設定をインポート
replyToDisplayNameHelp=返信先のアドレスのユーザー・フレンドリーな名前です（オプション）。
lifespan=有効期限
storedTokensReadableHelp=新しいユーザーが格納されたトークンを読み取り可能かどうかの有効/無効設定です。broker.read-tokenロールをアサインします。
webAuthnPolicyRpIdHelp=これは、WebAuthnリライング・パーティーとしてのIDです。オリジンの有効なドメインでなければなりません。
authenticationFlowTypeHelp=どの種類のフォームかを設定します。
editUsernameHelp=有効の場合はユーザー名フィールドが編集可能になり、そうでない場合は読み取り専用になります。
consoleDisplayConnectionUrlHelp=LDAPサーバーへの接続URL
clientAssertionSigningAlg=クライアントアサーション署名アルゴリズム
fullScopeAllowedHelp=全ての制限の無効を許可します。
applyPolicy=ポリシーの適用
otpType=OTPタイプ
directGrantHelp=ダイレクト・グラント認証で使用したいフローを選択してください。
algorithm=アルゴリズム
jsonType.tooltip=トークンへのJSONクレームの追加で使用されるJSONタイプを設定します。long、int、boolean、String、JSONが有効な値です。
enableStartTLS=StartTLSの有効
syncModeOverride=同期モードのオーバーライド
includeInTokenScope=トークンスコープに含める
eventType=イベントタイプ
accountLinkingOnly=アカウントのリンクのみ
sectorIdentifierUri.label=セクター識別子URI
usermodel.attr.label=ユーザー属性
eventTypes.REGISTER.name=登録
rememberMeHelpText=セッションの有効期限が切れるまではブラウザーの再起動でもログイン状態を保存するチェックボックスをログインページに表示します。
webAuthnPolicyUserVerificationRequirementHelp=ユーザー検証を要求するかどうかを認証器に伝えます。
idTokenSignatureAlgorithm=IDトークン署名アルゴリズム
syncModes.import=インポート
ssoServiceUrl=シングル・サインオン・サービスのURL
allowRemoteResourceManagementHelp=リソースは、リソースサーバーによりリモートで管理すべきかどうかを設定します。オフの場合は、リソースはこの管理コンソールだけで管理されます。
changedUsersSyncPeriod=変更ユーザーの同期周期
webAuthnPolicyAuthenticatorAttachment=オーセンティケーター・アタッチメント
userRegistration=ユーザー登録
save=保存
login=ログイン
changedUsersSyncHelp=変更または新規作成されたLDAPユーザーの同期周期を秒で設定します。
trustEmailHelp=有効とした場合は、このレルムでEメールの確認が有効となっている場合でも、このプロバイダーが提供するEメールは確認されなくなります。
credentialUserLabel=ユーザーラベル
adminURLHelp=クライアントの管理インターフェイスのURLを設定します。クライアントがアダプターのREST APIをサポートしている場合に設定してください。このREST APIにより、認証サーバーは無効化ポリシーや他の管理タスクをプッシュすることができます。通常、クライアントのベースURLを設定します。
otpPolicyPeriodHelp=OTPトークンが有効な秒数を設定します。デフォルトは30秒です。
storePasswordHelp=アーカイブ自身にアクセスするためのパスワード
userFederation=ユーザーフェデレーション
directAccess=ダイレクトアクセスグラント
disable=無効
attributes=属性
logic=ロジック
resourceType=リソースタイプ
minuteHelp=ポリシーが許可される分を指定します。2つ目のフィールドに値を入力することで、範囲指定も可能です。範囲指定した場合、現在の分が指定範囲内である場合にのみ許可されます。
scopeName=このスコープのユニークな名前を設定します。名前はスコープの一意な識別に使用され、特定のスコープを照会する際に使用することができます。
userInfoUrlHelp=UserInfoのURLを設定します。これはオプションです。
kc.realm.name=レルム
impersonate=代理ログイン
members=メンバー
scopePermissions.clients.token-exchange-description=このクライアントを対象とするトークンのトークン交換を許可するクライアントを決定するポリシー。
adminURL=管理URL
settings=設定
webAuthnPolicyUserVerificationRequirement=ユーザー検証要件
failureFactorHelp=検出するまでの失敗回数です。
webAuthnPolicyCreateTimeout=タイムアウト
storeTokensHelp=ユーザー認証後のトークン格納の有効/無効を設定します。
singleLogoutServiceUrlHelp=ログアウト・リクエストの送信に使用するURLを設定します。
useTruststoreSpi=トラストストアSPIを使用
usermodel.clientRoleMapping.rolePrefix.tooltip=各クライアント・ロールのプレフィックスを設定します（オプション）。
storeTokens=トークンの格納
userHelp=必要に応じて、サンプルのアクセストークンを生成するユーザーを選択します。ユーザーを選択しないと、評価中にサンプルのアクセストークンは生成されません
Sunday=日
emailVerifiedHelp=ユーザーのEメールが確認済みかどうかを設定します。
addExecution=エグゼキューションの追加
editMode=編集モード
passwordHelp=SMTPパスワード。このフィールドは、ボールトから値を取得できます。${vault.ID}形式を使用します。
groupMembership=グループ・メンバーシップ
fullSyncPeriod=フル同期の周期
addNode=ノードの追加
jwksUrl=JWKS URL
policy-description=このポリシーの説明を設定します。
policies=ポリシー
parentClientScope=親クライアントスコープ
importClient=クライアントのインポート
allTypes=すべてのタイプ
ldapFilter=LDAPフィルター
webAuthnPolicyRpEntityNameHelp=WebAuthnリライング・パーティーとしての人間が読み取れるサーバー名
postBrokerLoginFlowAlias=ログイン後のフロー
tokens=トークン
refreshTokenMaxReuse=リフレッシュトークンの最大再利用回数
encryptAssertionsHelp=SAMLアサーションをクライアントの公開鍵でAESを使い暗号化すべきか設定します。
clientScopes=クライアントスコープ
httpPostBindingLogout=HTTP-POSTバインディング・ログアウト
requirement=必要条件
permissionDescription=このパーミッションの説明を設定します。
multivalued.label=マルチバリュー
minute=分
useJwksUrl=JWKS URLの使用
wantAssertionsSigned=アサーションの署名が必要
algorithmNotSpecified=アルゴリズムの指定なし
scopeParameter=スコープ・パラメーター
rememberMe=ログイン状態の保存
flow.registration=登録フロー
webAuthnPolicyAcceptableAaguids=許容可能なAAGUID
registeredClusterNodes=登録済みクラスターノード
storePassword=ストアのパスワード
logoutServiceRedirectBindingURLHelp=シングル・ログアウト・サービスのSAMLRedirectバインディングURLを設定します。異なるBindingを使用している場合は空でよいです。
defaultGroups=デフォルトグループ
flow.browser=ブラウザーフロー
scopePermissions.clients.map-roles-client-scope-description=管理者がこのクライアントによって定義されたロールを別のクライアントのクライアント・スコープに適用できるかどうかを決定するポリシー
addressClaim.street.tooltip=「address」トークンクレーム内の「street_address」サブクレームにマップするために使用されるユーザー属性の名前。デフォルトは「street」です。
includeInIdToken.tooltip=クレームをIDトークンに追加すべきかどうかを設定します。
password=パスワード
httpPostBindingResponseHelp=HTTP-POSTバインディングを使用してリクエストに応答するかどうかを設定します。オフの場合は、HTTP-REDIRECTバインディングが使用されます。
allowPasswordAuthentication=パスワード認証を許可
pairwiseSubAlgorithmSalt.tooltip=ペアワイズ対象識別子を計算する際に使用するソルトを設定します。空白のままにするとソルトは生成されます。
clientAuthorization=認可
waitIncrementSecondsHelp=失敗回数が閾値に達した場合、どれくらいの時間ユーザーはロックアウトされるか設定します。
allowKerberosAuthentication=Kerberos認証を許可
addressClaim.formatted.tooltip=「address」トークンクレーム内の「formatted」サブクレームにマップするために使用されるユーザー属性の名前。デフォルトは「formatted」です。
allowedClockSkew=許容されるクロックスキュー
events=イベント
createPermission=パーミッションを作成
mapperType=マッパータイプ
credentialResetConfirm=メールの送信
permissionsEnabledHelp=このロールを管理するために、きめ細かいパーミッションを有効にするかどうかを決定します。無効にすると、設定されている現在のパーミッションがすべて削除されます。
consentScreenTextHelp=このクライアント・スコープが同意が必要なクライアントに追加された場合に、同意画面に表示されるテキスト。指定しない場合は、デフォルトでクライアント・スコープの名前になります
kerberosRealm=Kerberosレルム
flow.direct\ grant=ダイレクト・グラント・フロー
typeHelp=作成された各クライアントにデフォルト・スコープとして追加されるクライアント・スコープ。
htmlDisplayName=HTML表示名
authorizationUrl=認可URL
contextualAttributes=コンテキスト属性
replyTo=返信先
providerDescription=プロバイダーの説明
scopePermissions.clients.view-description=管理者がこのクライアントを表示できるかどうかを決定するポリシー
idpInitiatedSsoRelayStateHelp=IDP Initiated SSOを行う際のSAMLリクエストで送信したいRelayStateを設定します。
otpHashAlgorithmHelp=OTPを生成するために使用するハッシュ・アルゴリズム
usermodel.clientRoleMapping.clientId.tooltip=ロールマッピング用のクライアントID。このクライアントのクライアント・ロールだけがトークンに追加されます。これが設定されていない場合は、すべてのクライアントのクライアント・ロールがトークンに追加されます。
passCurrentLocaleHelp=現在のロケールをui_localesパラメーターとしてアイデンティティー・プロバイダーに渡します。
scopePermissions.clients.manage-description=管理者がこのクライアントを管理できるかどうかを決定するポリシー
vendor=ベンダー
webAuthnPolicyRequireResidentKeyHelp=オーセンティケーターに、公開鍵クレデンシャルを検出可能なクレデンシャルとして作成するかどうかを指示します。
logoutServiceRedirectBindingURL=ログアウト・サービスのRedirectバインディングURL
dayMonth=ポリシーが許可される日を定義します。2番目のフィールドに値を入力して範囲を指定することもできます。この場合、現在の日が指定した2つの値の間にあるか、等しい場合のみ許可されます。
disabled=無効
idpInitiatedSsoRelayState=IDP Initiated SSOのRelayState
validatingX509Certs=検証用のX509証明書
guiOrder=表示順
userInfoUrl=UserInfo URL
displayOnConsentScreen=同意画面で表示する
principalAttributeHelp=外部ユーザーを識別するために使用される属性の名前またはフレンドリー名。
nameIdPolicyFormat=Name IDポリシー・フォーマット
idpInitiatedSsoUrlName=IDP-Initiated SSOのURL名
xFrameOptions=X-Frame-Options
scopeDescriptionHelp=クライアントスコープの説明
directGrant=ダイレクトグラントフロー
consensus=Consensus
nameIdFormatHelp=サブジェクトに使用するName IDフォーマットを設定します。
ssoSessionIdleRememberMe=リメンバーミー・セッションの有効期限が切れるまでのアイドル時間です。セッションが期限切れになると、トークンおよびブラウザー・セッションは無効になります。設定されていない場合は、標準のSSOセッション・アイドル値が使用されます。
adminEvents=管理イベント
SSOSessionIdleRememberMe=SSOセッション・アイドル・リメンバーミー
urisHelp=リソースによって保護されているURIのセット。
serverPrincipal=サーバー・プリンシパル
signDocuments=ドキュメントを署名する
tokenUrl=トークンURL
webauthnPolicy=WebAuthnポリシー
grantedClientScopes=付与されたクライアント・スコープ
evictionHour=エビクションの時
effectiveProtocolMappers=有効なプロトコル・マッパー
notBefore=この日時より前
syncModes.legacy=レガシー
ldapMappersList=LDAPマッパー
titleEvents=イベント
continue=続ける
acceptsPromptNoneHelp=これは、アイデンティティー・プロバイダー・オーセンティケーターとともに使用されるか、またはkc_idp_hintがこのアイデンティティー・プロバイダーを指す場合に使用されます。クライアントがprompt=noneでリクエストを送信し、ユーザーがまだ認証されていない場合、エラーは直接クライアントに返されませんが、prompt=noneのリクエストはこのアイデンティティー・プロバイダーに転送されます。
included.client.audience.label=含まれるクライアント・オーディエンス
selectScope=スコープを選択
generateNewKeys=新しい鍵を生成
offlineSessionIdle=オフライン・セッション・アイドル
revokeRefreshToken=リフレッシュトークンの無効化
minimumQuickLoginWaitSeconds=クイックログイン失敗時の最小待機時間
operationTypes=操作タイプ
expireTime=有効期限
adminThemeHelp=管理コンソールのテーマを選択します。
name=名前
clientList=クライアント
userSession.modelNote.label=ユーザー・セッション・ノート
next=次へ
pagination=ページネーション
import=インポート
otpHashAlgorithm=OTPハッシュ・アルゴリズム
mapper.nameid.format.tooltip=このマッパーは、AuthnRequestのNameIDフォーマットがこの値に等しい場合にのみ適用されます。
hideOnLoginPageHelp=非表示の場合、明示的に要求されていれば（例えば、「kc_idp_hint」パラメーターを使用していれば）、このプロバイダーによるログインが可能です。
description=説明
addressClaim.postal_code.tooltip=「address」トークンクレーム内の「postal_code」サブクレームにマップするために使用されるユーザー属性の名前。デフォルトは「postal_code」です。
providerId=ID
Tuesday=火
loginTimeout=ログインタイムアウト
idTokenEncryptionContentEncryptionAlgorithm=IDトークン暗号化コンテンツの暗号化アルゴリズム
fineGrainSamlEndpointConfig=SAMLエンドポイントの詳細設定
hours=時
maxFailureWaitSeconds=最大待機時間
configure=設定
manage=管理
alwaysDisplayInUI=常にコンソールに表示
kerberosIntegration=Kerberosと統合
protocolMapper=プロトコルです。
requiredSettings=必要な設定
time=日時
scopePermissions.users.view-description=管理者がレルム内のすべてのユーザーを表示できるかどうかを決定するポリシー
idTokenSignatureAlgorithmHelp=IDトークンの署名に使用されるJWAアルゴリズム。
sslType.all=すべてのリクエスト
excludeSessionStateFromAuthenticationResponse=認証レスポンスからセッション状態を除外
httpPostBindingResponse=HTTP-POSTバインディング・レスポンス
saveEvents=イベントの保存
issuer=発行者（Issuer）
policyEnforcementModeHelp=ポリシー施行モードは、認可リクエストを評価する際に適用される方法を決定します。「Enforcing」は、与えられたリソースに関連するポリシーが存在しない場合でも、リクエストはデフォルトで拒否されることを意味します。「Permissive」は、与えられたリソースに関連するポリシーが存在しない場合でも、リクエストは許可されることを意味します。「Disabled」は、完全にポリシーの評価を無効にし、任意のリソースへのアクセスを許可します。
lastUpdated=最終更新日
credentialResetBtn=クレデンシャルのリセット
selectAUser=ユーザーを選択
eventTypes.RESET_PASSWORD.name=パスワードのリセット
oAuthMutual=OAuth 2.0相互TLS証明書バインド・アクセストークンが有効
keystore=キーストア
canonicalizationHelp=XML署名の正規化方式（Canonicalization Method）を設定します。
sessions=セッション
fullSyncPeriodHelp=フル同期の周期を秒で設定します。
priority=優先度
trustEmail=Eメールを信頼
jsonType.label=クレームJSONタイプ
fullScopeAllowed=フルスコープを許可
syncModes.inherit=継承
masterSamlProcessingUrlHelp=設定された場合は、このURLがSPのアサーション・コンシューマーおよびシングル・ログアウト・サービスの両方のBindingに使われます。これは、SAMLエンドポイントの詳細設定にある各Bindingやサービスの設定にて個別に上書きすることができます。
claimJsonType=トークンへのJSONクレームの追加で使用されるJSONタイプを設定します。long、int、boolean、String、JSONが有効な値です。
sslType.external=外部からのリクエスト
multiValued=属性がマルチバリューをサポートしているかどうかを示します。サポートしている場合は、この属性のすべての値リストがクレームとして設定されます。サポートしていない場合は、最初の値だけがクレームとして設定されます。
webAuthnPolicyAttestationConveyancePreferenceHelp=認証ステートメントを生成する方法の優先権をオーセンティケーターに通知します。
duplicateEmailsHelpText=複数のユーザーが同じEメールアドレスを持つことを許可します。この設定を変更すると、ユーザーのキャッシュもクリアされます。重複するEメールアドレスのサポートを無効にした後で、データベース内の既存ユーザーのEメールの制約を手動で更新することをお勧めします。
usermodel.realmRoleMapping.rolePrefix.label=レルムロールのプレフィックス
temporaryPasswordHelpText=有効の場合は、ユーザーは次のログイン時にパスワードの変更が必要となります。
connectionPooling=接続プーリング
wantAuthnRequestsSignedHelp=アイデンティティー・プロバイダーが署名付きAuthnRequestを要求するかどうかを設定します。
enabled=有効
forgotPassword=パスワード忘れ
idTokenEncryptionKeyManagementAlgorithmHelp=IDトークンの暗号化鍵の管理に使用されるJWAアルゴリズム。このオプションは、暗号化されたIDトークンが必要な場合に必須です。空のままにすると、IDトークンは署名されますが、暗号化されません。
keyPassword=鍵のパスワード
scopePermissions.clients.map-roles-composite-description=管理者がこのクライアントによって定義されたロールをコンポジットとして別のロールに適用できるかどうかを決定するポリシー
startTime=開始時間
logicHelp=ロジックは、ポリシーの判定方法を決定します。「Positive」の場合は、このポリシーの評価中に得られた結果（許可または拒否）が判定の実行に使用されます。「Negative」の場合は、結果は反転されます。つまり、許可は拒否になり、拒否は許可になります。
clientNameHelp=クライアントの表示名を指定します。例えば、「My Client」です。ローカライズ用のキーもサポートしています。例: ${my_client}
createPolicy=クライアントポリシーの作成
clearAdminEvents=管理イベントのクリア
rootUrl=ルートURL
clientLoginTimeout=クライアントのログインタイムアウト
webAuthnPolicyExtraOrigins=エクストラオリジンズ
alwaysDisplayInUIHelp=ユーザーのアクティブなセッションがない場合でも、このクライアントを常にアカウント・コンソールに一覧表示します。
readTimeout=読み取りタイムアウト
samlSignatureKeyName=SAML署名鍵名
accessTokenSignatureAlgorithm=アクセストークン署名アルゴリズム
logicType.negative=Negative
otpPolicy=OTPポリシー
flow-type.form-flow=form
signDocumentsHelp=SAMLドキュメントをレルムで署名すべきか設定します。
resetPassword=パスワードのリセット
requireSslHelp=HTTPSが必須かどうか。「なし」は、HTTPSがどのIPアドレスのクライアントにも要求されないことを意味します。「外部リクエスト」は、ローカルホストとプライベートIPアドレスのクライアントがHTTPSなしでアクセスできることを意味します。「すべてのリクエスト」は、HTTPSがすべてのIPアドレスのクライアントに要求されることを意味します。
addUser=ユーザーの追加
includeAuthnStatementHelp=認証方式とタイムスタンプを含めたステートメントをログイン・レスポンスに含めるべきか設定します。
protocol=プロトコル
manageAccount=アカウントの管理
clientSecret=クライアントシークレット
httpPostBindingAuthnRequest=AuthnRequestのHTTP-POSTバインディング
includeInAccessToken.label=アクセストークンに追加
iconUri=アイコンURI
usersInRole=ロールのユーザー
groupsClaimHelp=定義されている場合、ポリシーは、パーミッションを要求するアイデンティティーを表すアクセストークンまたはIDトークン内の特定のクレームから、ユーザーのグループを取得します。定義されていない場合、ユーザーのグループはレルム設定から取得されます。
createGroup=グループの作成
clientAuthentications.client_secret_jwt=JWTでクライアント・シークレット
created=作成日
minutes=分
usersDN=ユーザーDN
selectUser=サーバーからパーミッションを検索するためにIDが使用されるユーザーを選択します。
included.custom.audience.label=含まれるカスタム・オーディエンス
requestObjectSignatureAlgorithm=リクエスト・オブジェクトの署名アルゴリズム
tokenLifespan.expires=有効期限
mappers=マッパー
waitIncrementSeconds=連続失敗時の待機時間
name-id-format=Name IDフォーマット
credentials=クレデンシャル
webAuthnPolicyCreateTimeoutHelp=ユーザーの公開鍵クレデンシャルの作成に対するタイムアウト値（秒単位）。0に設定すると、このタイムアウト・オプションは適応されません。
policyType.hotp=カウンターベース
enableSSL=SSLの有効
general=一般
failureFactor=最大ログイン失敗回数
usermodel.clientRoleMapping.tokenClaimName.tooltip=トークン内に挿入するクレームの名前を設定します。「address.street」のように完全修飾名で設定します。この場合、ネストされたJSONオブジェクトが作成されます。ネスティングを防ぎ、ドットを文字通りに使用するには、ドットをバックスラッシュ（\\.）でエスケープします。特別なトークン${client_id}を使うことができ、これは実際のクライアントIDに置き換えられます。使用例は「resource_access.${client_id}.roles」です。これは、すべてのクライアントからロールを追加する場合（特に「Client ID」スイッチが設定されていない場合）や、各クライアントのクライアント・ロールを別々の場所に保存する場合に、特に便利です。
signAssertions=アサーションを署名する
scopePermissions.clients.map-roles-description=管理者がこのクライアントによって定義されたロールをマップできるかどうかを決定するポリシー
disableUserInfoHelp=追加のユーザー情報を取得するUserInfoサービスの使用を無効にするかどうかを設定します。デフォルトではこのOIDCサービスを使用します。
adminTheme=管理コンソールテーマ
alias=エイリアス
validateSignatures=SAMLレスポンスの署名検証の有効/無効を設定します。
authentication=認証
descriptionHelp=クライアント・スコープの説明
logoutUrlHelp=外部IDPからユーザーのログアウトに使用するセッション終了エンドポイントを設定します。
permissionType=このパーミッションが適用されるリソースタイプを指定します。
policyEnforcementModes.ENFORCING=実施
permanentLockout=永久ロックアウト
debug=デバッグ
webAuthnPolicyRequireResidentKey=常駐鍵が必要
clear=クリア
signatureAlgorithm=署名アルゴリズム
eventTypes.LOGOUT.name=ログアウト
groupsClaim=グループクレーム
requiredActions=必須アクション
authenticationOverridesHelp=レルム認証フロー・バインディングをオーバーライドします。
policyDecisionStagey=決定戦略は、ポリシーの評価方法と最終的な判定方法を決定します。「Affirmative」は、最終判定がpositiveとなるためには、少なくとも1つのポリシーがpositiveと評価する必要がある、ということを意味します。「Unanimous」は、全体の判定がpositiveとなるためには、すべてのポリシーがpositiveと評価する必要がある、ということを意味します。「Consensus」は、positiveの数がnegativeの数より多くなければならないことを意味します。positiveとnegativeの数が同じ場合は、最終的な判定はnegativeになります。
resetActions=リセット・アクション
batchSize=バッチサイズ
usermodel.prop.tooltip=UserModelインターフェイスのプロパティー・メソッドの名前です。例えば、「email」の値はUserModel.getEmail()メソッドを参照しています。
user=ユーザー
otpTypeHelp=「totp」はタイムベースのワンタイム・パスワードです。「hotp」は、サーバーでハッシュに対してカウンターを保持するカウンターベースのワンタイム・パスワードです。
keyForCodeExchange=Proof Key for Code Exchangeのコードチャレンジ方式
endpointsHelp=プロトコル・エンドポイントの設定を表示します。
useKerberosForPasswordAuthentication=パスワード認証にKerberosを使用
debugHelp=Krb5LoginModuleの標準出力へのデバッグロギングの有効/無効を設定します。
validatorColNames.colConfig=設定
nodeHost=ノードホスト
quickLoginCheckMilliSeconds=クイックログインチェックのミリ秒
unspecified=未定義
profile=プロファイル
active=アクティブ
forcePostBindingHelp=レスポンスに常にPOSTバインディングを使用します。
roleName=ロール名
addOrigins=オリジンを追加
requiredUserActionsHelp=ユーザーがログインするときに必要なアクションです。「Verify email」は、Eメールアドレスを確認するためのEメールをユーザーに送信します。「Update profile」は、新しい個人情報を入力する必要があります。「Update password」は、ユーザーが新しいパスワードを入力する必要があります。「Configure OTP」は、モバイル・パスワード・ジェネレーターの設定が必要です。
requestObjectSignatureAlgorithmHelp=クライアントが「request」または「request_uri」パラメーターで指定されたOIDCリクエスト・オブジェクトを送信する際に使用する必要がある、JWAアルゴリズムを設定します。「any」に設定した場合は、リクエスト・オブジェクトは任意のアルゴリズム（「none」を含む）で署名されます。
deleteEvents=イベントのクリア
includeOneTimeUseConditionHelp=OneTimeUse条件をログイン・レスポンスに含めるべきか設定します。
accessTokenLifespanHelp=アクセストークンが有効期限切れとなる最大時間です。この値はSSOタイムアウトと比べて短くすることをお勧めします。
redirectURIHelp=アイデンティティー・プロバイダーの設定で使用するリダイレクトURIです。
resourcePath=リソースパス
permissionsEnabled=パーミッションが有効
attestationPreference.none=なし
useJwksUrlHelp=有効とした場合は、アイデンティティー・プロバイダーの公開鍵が指定されたJWKS URLからダウンロードされます。アイデンティティー・プロバイダーが新しい鍵ペアを生成する際に、新しい鍵が常に再ダウンロードされるため、柔軟性が大幅に向上します。無効とした場合は、Keycloak DBの公開鍵（または証明書）が使用されるため、アイデンティティー・プロバイダーの鍵ペアが変更された際には、常にKeycloak DBに新しい鍵をインポートする必要があります。
pairwiseSubAlgorithmSalt.label=ソルト
revocation=無効化
scopeTypeHelp=作成された各クライアントにデフォルト・スコープとして追加されるクライアント・スコープ
useEntityDescriptor=エンティティーディスクリプターを使用する
loginActionTimeout=ログイン・アクション・タイムアウト
cacheSettings=キャッシュ設定
validRedirectURIs=ログインまたはログインの成功後にブラウザーがリダイレクト可能とする、有効なURIパターンを設定します。「http://example.com/*」のような単純なワイルドカードが使用可能です。相対パス、つまり「/my/relative/path/*」も指定可能です。相対パスはクライアントのルートURLを基準とします。または、未指定の場合は認証サーバーのルートURLが使用されます。SAMLでは、ログイン・リクエストに埋め込まれたコンシューマー・サービスのURLに依存している場合は、有効なURIパターンを設定する必要があります。
removeImported=インポートを削除
assertionConsumerServicePostBindingURL=アサーション・コンシューマー・サービスのPOSTバインディングURL
endpoints=エンドポイント
validatingX509CertsHelp=署名の確認に使用するPEM形式の証明書を設定します。
importFile=ファイルをインポート
protocolHelp=このクライアント・スコープによって提供されているSSOプロトコル設定がどれか
accessTokenSignatureAlgorithmHelp=アクセストークンの署名に使用されるJWAアルゴリズム。
requestObjectRequired=リクエスト・オブジェクトが必要
prompts.none=none
resourcesHelp=このパーミッションが適用されるリソース・インスタンスを指定します。
passwordConfirmation=新しいパスワード（確認）
emailVerified=Eメールが確認済み
aggregate.attrs.tooltip=属性値をグループ属性と集約する必要があるかどうかを示します。OpenID Connectマッパーを使用している場合は、すべての値を取得するためにマルチバリューのオプションも有効にする必要があります。重複した値は破棄され、値の順序はこのオプションでは保証されません。
Thursday=木
requestObjectRequiredHelp=クライアントが認可リクエストとともにリクエスト・オブジェクトを提供する必要があるかどうか、およびそのためにどの方法を使用できるかを指定します。「not required」に設定されている場合、リクエスト・オブジェクトの提供はオプションです。それ以外のケースでは、リクエスト・オブジェクトを提供する必要があります。「request」に設定されている場合、リクエスト・オブジェクトは値で提供される必要があります。「request_uri」に設定されている場合、リクエスト・オブジェクトは参照によって提供される必要があります。「requestまたはrequest_uri」に設定されている場合、いずれの方法も使用できます。
discoveryEndpoint=ディスカバリーエンドポイント
countHelp=このトークンを利用してクライアントをいくつ作成可能か指定します。
otpPolicyPeriod=OTPトークンの期間
Monday=月
frontendUrlHelp=レルムのフロントエンドURLを設定します。デフォルトのホスト名プロバイダーと組み合わせて使用し、特定のレルムのフロントエンド・リクエストのベースURLをオーバーライドします。
cachePolicy=キャッシュ・ポリシー
consentRequired=同意の必須
selectMethodType.import=インポート
standardFlow=スタンダードフロー
eventListeners=イベントリスナー
clientScopeType.default=DEFAULT
bindDn=バインドDN
Friday=金
wantAuthnRequestsSigned=AuthnRequestの署名が必要
usermodel.attr.tooltip=格納されるユーザー属性名、UserMode.attributeマップ内の属性名です。
fineGrainOpenIdConnectConfiguration=OpenID Connectの詳細設定
count=カウント
testAuthentication=認証テスト
month=月
addressClaim.region.tooltip=「address」トークンクレーム内の「region」サブクレームにマップするために使用されるユーザー属性の名前。デフォルトは「region」です。
expiration=有効期限
logoutServicePostBindingURL=ログアウト・サービスのPOSTバインディングURL
assertionConsumerServicePostBindingURLHelp=アサーション・コンシューマー・サービス（ログイン・レスポンス）のSAML POSTバインディングURLを設定します。このBindingのためのURLがない場合は空でよいです。
resourceTypes=リソースタイプ
includeInUserInfo.label=UserInfoに追加
back=戻る
validateSignatureHelp=外部IDPの署名検証の有効/無効を設定します。
title=認証
verifyEmail=メールアドレスの検証
addressClaim.locality.label=市区町村のユーザー属性名
formatOption=フォーマット・オプション
nodeReRegistrationTimeout=ノード再登録のタイムアウト
client=client
connectionURL=接続URL
accessTokenLifespan=アクセストークン生存期間
loginWithEmailHelpText=ユーザーがEメールアドレスでログインできるようにします。
setToNow=現在日時を設定
firstBrokerLoginFlowAliasOverrideHelp=このアイデンティティー・プロバイダーでの初回ログイン後に起動させる認証フローのエイリアスです。「初回ログイン」という用語は、認証したアイデンティティー・プロバイダー・アカウントに現在関連付けられているKeycloakアカウントがない状態であることを意味します。
owner=オーナー
implicitFlow=インプリシットフロー
encryptAssertions=アサーションを暗号化する
keyAliasHelp=秘密鍵のエイリアス
tokenClaimName.tooltip=トークン内に挿入するクレームの名前を設定します。「address.street」のように完全修飾名で設定します。この場合、ネストされたJSONオブジェクトが作成されます。ネスティングを防ぎ、ドットを文字通りに使用するには、ドットをバックスラッシュ（\\.）でエスケープします。
userName=ユーザー名
clientProfileDescription=説明
ssoSessionMax=セッションの有効期限が切れるまでの最大時間です。セッションの有効期限が切れると、トークンとブラウザー・セッションは無効化されます。
optimizeLookup=REDIRECT署名鍵検索の最適化
browserFlowHelp=ブラウザー認証で使用したいフローを選択してください。
temporaryLocked=一時的なロック
setup=セットアップ
realm=レルム
prompt=プロンプト（prompt）
showAuthData=認可データの表示
includeInUserInfo.tooltip=クレームをUserInfoに追加すべきかどうかを設定します。
unlinkUsers=ユーザーのリンクを解除する
initialCounter=初期カウンター
revokeRefreshTokenHelp=有効にすると、リフレッシュ・トークンは「リフレッシュ・トークンの最大再利用回数」までしか使用できず、別のトークンが使用されると無効化されます。無効にすると、リフレッシュ・トークンは使用後に無効化されず、複数回使用できます。
ownerManagedAccessHelp=有効にすると、このリソースへのアクセスをリソースオーナーが管理できます。
authorization=きめ細かい認可のサポートを有効/無効にします。
scopePermissions.users.map-roles-description=管理者がすべてのユーザーのロールをマップできるかどうかを決定するポリシー
bindCredentialsHelp=LDAP管理者のパスワードを設定します。このフィールドは、ボールトから値を取得できます。${vault.ID}形式を使用します。
webAuthnPolicySignatureAlgorithms=署名アルゴリズム
action=アクション
id=ID
join=参加
idTokenEncryptionContentEncryptionAlgorithmHelp=IDトークンの暗号化の際に、コンテンツの暗号化に使用されるJWAアルゴリズム。このオプションは、暗号化されたIDトークンが必要な場合にのみ必須です。空のままにすると、IDトークンは署名されますが、暗号化されません。
scopesHelp=認可リクエストの際に送信されるスコープです。スペース区切りでスコープのリストを設定します。デフォルトは「openid」です。
includeAuthnStatement=AuthnStatementを含める
multivalued.tooltip=属性がマルチバリューをサポートしているかどうかを示します。サポートしている場合は、この属性のすべての値リストがクレームとして設定されます。サポートしていない場合は、最初の値だけがクレームとして設定されます。
addIdPMapper=アイデンティティー・プロバイダー・マッパーを追加
enableStartTls=StartTLSの有効
usersPermissionsHint=レルム内のすべてのユーザーを管理するきめ細かいパーミッション。レルム内のユーザーを管理できるユーザーには、さまざまなポリシーを定義できます。
homeURL=ホームURL
contentSecurityPolicyReportOnly=Content-Security-Policy-Report-Only
firstBrokerLoginFlowAlias=初回ログインフロー
clientScopeList=クライアント・スコープ
usernameLdapAttribute=ユーザー名のLDAP属性
evaluate=評価
status=ステータス
clients=クライアント
clientName=名前
syncModes.force=強制
maxDeltaTimeSeconds=ログイン失敗回数のリセット時間
backchannelLogoutHelp=外部IDPがバックチャンネル・ログアウトをサポートするどうかを設定します。
usermodel.realmRoleMapping.rolePrefix.tooltip=各レルムロールのプレフィックスを設定します（オプション）。
fromDisplayName=差出人の表示名
affirmative=Affirmative
maxFailureWaitSecondsHelp=ユーザーがロックアウトされる最大待機時間を設定します。
userInfoSignedResponseAlgorithm=署名付きUserInfoレスポンスのアルゴリズム
maxDeltaTimeSecondsHelp=いつ失敗回数がリセットされるか設定します。
contentSecurityPolicy=Content-Security-Policy
off=オフ
frontchannelLogoutHelp=有効の場合は、ログアウトはクライアントへのブラウザー・リダイレクトが必要になります。無効の場合は、サーバーはログアウトのバックグラウンド呼び出しを行います。
forwardParameters=転送されるクエリー・パラメーター
oAuthMutualHelp=これにより、OAuth 2.0相互TLS証明書バインド・アクセストークンがサポートされます。つまり、Keycloakは、Keycloakのトークン・エンドポイントとこのクライアントの間で相互TLSにより交換されるクライアントのX.509証明書と、アクセストークンおよびリフレッシュ・トークンをバインドします。これらのトークンは、ベアラートークンの代わりにHolder-of-Keyトークンとして扱うことができます。
scopes=スコープ
principalType=プリンシパル・タイプ
flowType=フロータイプ
policyEnforcementModes.PERMISSIVE=許容
auth=認証
accessTokenLifespanImplicitFlow=インプリシット・フローにおけるアクセストークン生存期間
subject=サブジェクトDN
defaultAdminInitiated=デフォルトの管理者起動アクションの有効期間
remainingCount=残りのカウント
download=ダウンロード
authScopes=認可スコープ
host=ホスト
optimizeLookupHelp=Keycloakアダプターによって保護されたSPのREDIRECTバインディングでSAMLドキュメントに署名する際、署名鍵のIDを<Extensions>要素のSAMLプロトコルメッセージに含める必要があるかどうかを設定します。これにより、検証のために既知のすべてのキーを試行する代わりに単一のキーを使用するため、署名の検証が最適化されます。
supportedApplications=現在のOTPポリシーで動作することが分かっているアプリケーション
resourceAttribute=リソース属性
addressClaim.region.label=都道府県のユーザー属性名
ipAddress=IPアドレス
included.custom.audience.tooltip=「含まれるクライアント・オーディエンス」が空の場合のみ使用されます。指定された値はトークンのオーディエンス（aud）フィールドに含まれます。トークンに既にオーディエンスが含まれている場合、指定された値はそれらを上書きせずに追加されます。
includeInIdToken.label=IDトークンに追加
browserFlow=ブラウザーフロー
anyScope=任意のスコープ
serverInfo=サーバー情報
emailThemeHelp=サーバーから送信されるEメールのテーマを選択します。
principalTypeHelp=アサーションから外部ユーザーを識別し、追跡する方法。デフォルトではSubject NameIDを使用しますが、識別属性を設定することもできます。
Wednesday=水
consents=同意
canonicalization=正規化方式
SSOSessionMax=SSOセッション最大
minimumQuickLoginWaitSecondsHelp=クイックログイン失敗後にどれくらいの時間待機するか設定します。
policyEnforcementModes.DISABLED=無効
code=コード
allowedClockSkewHelp=アイデンティティー・プロバイダーのトークンの検証時に許容されるクロックスキュー（秒単位）。デフォルト値は0です。
keys=鍵
defaultSigAlg=デフォルトの署名アルゴリズム
signatureKeyName=SAML署名鍵名
certificate=証明書
selectRole.label=ロールの選択
prompts.consent=consent
webAuthnPolicyRpEntityName=リライング・パーティー・エンティティー名
hour=時
connectionTimeoutHelp=LDAP接続タイムアウト（ミリ秒単位）
defaultSigAlgHelp=このレルムでトークンの署名に使用されるデフォルトのアルゴリズム
save-admin-eventsHelp=有効の場合は、管理イベントがデータベースに保存され、管理コンソールで使用可能になります。
forwardParametersHelp=最初のアプリケーションへのリクエストから取得し、外部IDPの認可エンドポイントへ転送されるOpenID Connect/OAuth標準以外のクエリー・パラメーター。複数のパラメーターをカンマ（,）で区切って入力できます。
on=オン
webAuthnPolicyRpId=リライング・パーティー・エンティティーID
serviceAccount=サービスアカウントロール
assertionConsumerServiceRedirectBindingURL=アサーション・コンシューマー・サービスのRedirectバインディングURL
acceptsPromptNone=クライアントから転送されるprompt\=noneを受け入れる
loginThemeHelp=ログイン、OTP、グラント、登録、およびパスワード忘れに使用するページのテーマを選択します。
userManagedAccess=User-Managed Access
excludeSessionStateFromAuthenticationResponseHelp=これがオンの場合、パラメーター「session_state」はOpenID Connect認証レスポンスに含まれません。クライアントが「session_state」パラメーターをサポートしていない古いOIDC / OAuth2アダプターを使用している場合に便利です。
initialAccessToken=初期アクセストークン
evictionDay=エビクションの日
vendorHelp=LDAPベンダー（プロバイダー）
addressClaim.country.label=国のユーザー属性名
clustering=クラスタリング
applyToResourceType=リソースタイプに適用
selectRole.tooltip=左側にあるテキストボックスにロールを入力するか、ブラウズして必要なロールを選択するためにこのボタンをクリックしてください。
setPassword=パスワードを設定
editModeLdapHelp=READ_ONLYの場合、LDAPストアに読み取り専用でアクセスします。WRITABLEは、必要に応じてデータをLDAPに同期させることを意味します。UNSYNCEDは、ユーザーデータをインポートするが、LDAPに同期しないことを意味します。
SSOSessionMaxRememberMe=SSOセッション最大リメンバーミー
Saturday=土
save-user-eventsHelp=有効の場合は、ログインイベントがデータベースに保存され、管理コンソールとアカウント管理で使用することができます。
composite=複合
hourHelp=ポリシーが許可される時を定義します。2番目のフィールドに値を入力して範囲を指定することもできます。この場合、現在の時が指定した2つの値の間にあるか、等しい場合のみ許可されます。
generatedAccessToken=生成されたアクセストークン
executeActions=アクションの実行
edit=編集
testConnection=接続テスト
archiveFormat=アーカイブ形式
associatedRolesText=関連ロール
defaultLocale=デフォルトロケール
clientIdHelp=アイデンティティー・プロバイダーで登録されているクライアント識別子を設定します。
aggregate.attrs.label=属性値の集約
flow-type.basic-flow=generic
webauthnPasswordlessPolicy=WebAuthnパスワードレス・ポリシー
allowPasswordAuthenticationHelp=Kerberosデータベースに対するユーザー名/パスワード認証の有効/無効を設定します。
includeInAccessToken.tooltip=クレームをアクセストークンに追加すべきかどうかを設定します。
includeOneTimeUseCondition=OneTimeUse条件を含める
clientsClientScopesHelp=このリソースに関連付けるスコープを設定します。
envelopeFromHelp=バウンスに使用されるEメールアドレス（オプション）。
masterSamlProcessingUrl=SAMLを処理するマスターURL
samlIdentityProviderMetadata=SAML 2.0アイデンティティープロバイダーメタデータ
key=キー
email=メールアドレス
identityProviders=アイデンティティープロバイダー
importUsers=ユーザーのインポート
scopeParameterHelp=このスコープ・パラメーターの値をコピー/ペーストし、このクライアント・アダプターから送信された最初のOpenID Connect認証リクエストで使用できます。このクライアントに発行されたトークンを生成するときは、デフォルトのクライアント・スコープと選択されたオプションのクライアント・スコープが使用されます
idTokenEncryptionKeyManagementAlgorithm=IDトークン暗号化鍵管理アルゴリズム
clientAuthentications.client_secret_basic=基本認証で送信されたクライアント・シークレット
ssoSessionIdle=セッションの有効期限が切れるまでのアイドル時間です。セッションの有効期限が切れると、トークンとブラウザー・セッションは無効化されます。
userManagedAccessHelp=有効にすると、ユーザーはアカウント管理コンソールを使用してリソースとパーミッションを管理できます。
policyType.totp=タイムベース
emailTheme=メールテーマ
scopePermissions.users.impersonate-description=管理者が他のユーザーを偽装できるかどうかを決定するポリシー
registerNodeManually=ノードを手動で登録
redirectURI=リダイレクトURI
publicKeys=公開鍵
periodicFullSync=定期的なフル同期
assertionLifespanHelp=SAMLアサーション条件に設定された有効期限。その後、アサーションは無効になります。「SessionNotOnOrAfter」属性は変更されず、レルムレベルで定義された「SSOセッション最大」時間を引き続き使用します。
createdAt=作成日
editUsername=有効の場合はユーザー名フィールドが編集可能になり、そうでない場合は読み取り専用になります。
lastRegistration=最終登録
rolesHelp=選択されたユーザーに関連付けたいロールを選択してください。
requireSsl=SSLの要求
samlEntityDescriptor=SAMLエンティティーディスクリプター
reevaluate=再評価
syncMode=同期モード
details=詳細
strictTransportSecurity=HTTP Strict Transport Security（HSTS）
offlineSessionMaxLimited=オフライン・セッション最大制限
periodicChangedUsersSync=定期的な変更ユーザーの同期
principalAttribute=プリンシパル属性
searchScope=スコープの検索
userRegistrationHelpText=登録ページの有効/無効。ログインページに登録のリンクも表示されるようになります。
realmRoles=レルムロール
firstName=名
expirationHelp=イベントの有効期限を設定します。期限切れのイベントはデータベースから定期的に削除されます。
webAuthnPolicySignatureAlgorithmsHelp=認証アサーションに使用すべき署名アルゴリズム。
nameIdFormat=Name IDフォーマット
validRedirectUri=有効なリダイレクトURI
wantAssertionsEncryptedHelp=このサービス・プロバイダーが暗号化されたアサーションを期待するかどうかを設定します。
permissionName=このパーミッションの名前を設定します。
expires=有効期限
userAttribute=ユーザー属性
kid=Kid
revoke=無効化
webAuthnPolicyAcceptableAaguidsHelp=登録可能なオーセンティケーターのAAGUIDのリスト。
clientSignatureHelp=クライアントがSAMLリクエストとレスポンスを署名するか、そしてそれらを検証すべきどうかか設定します。
keyPasswordHelp=アーカイブ内の秘密鍵にアクセスするためのパスワード
frontchannelLogout=フロントチャンネル・ログアウト
titleRoles=レルムロール
frontendUrl=フロントエンドURL
sectorIdentifierUri.tooltip=pairwise sub値を使用し、かつ動的クライアント登録をサポートするプロバイダーは、sector_identifier_uriパラメーターを使用すべきです（SHOULD）。これは、共通の管理下にあるWebサイト群に対し、個々のドメイン名とは独立してparwise sub値の一貫性を保持する方法を提供します。また、クライアントに対し、すべてのユーザーを再登録させることなしにredirect_uriを変更する方法も提供します。
rdnLdapAttribute=RDN LDAP属性
replyToDisplayName=返信先の表示名
xRobotsTag=X-Robots-Tag
bindType=バインドタイプ
aliasHelp=エイリアスは一意にアイデンティティー・プロバイダーを識別するもので、リダイレクトURIの構築にも使用されます。
contextualInfo=コンテキスト情報
syncModeHelp=すべてのマッパーのデフォルトの同期モード。同期モードは、マッパーを使用してユーザーデータを同期するタイミングを決定します。可能な値は次のとおりです。このオプションが導入される前の動作を維持する「レガシー」、このアイデンティティー・プロバイダーを使用したユーザーの初回ログイン時に一度だけユーザーをインポートする「インポート」、このアイデンティティー・プロバイダーでログインするたびにユーザーを常に更新する「強制」。
applyPolicyHelp=このポリシーやパーミッションで定義されたスコープに適用するすべてのポリシーを設定します。
temporaryPassword=一時的
sslType.none=none
clientsPermissionsHint=このクライアントを管理したり、このクライアントによって定義されたロールを適用したりする管理者のきめ細かいパーミッションです。
consentScreenText=同意画面のテキスト
bruteForceDetection=ブルートフォースの検出
archiveFormatHelp=JavaキーストアまたはPKCS12アーカイブ形式
xContentTypeOptions=X-Content-Type-Options
keyAlias=キーエイリアス
none=none
type=タイプ
seconds=秒
otpPolicyDigits=桁数
ownerManagedAccess=User-Managed Accessの有効
permissions=パーミッション
accountThemeHelp=ユーザー・アカウント管理画面のテーマを選択します。
displayOnConsentScreenHelp=オンで、同意が必要なクライアントにこのクライアント・スコープが追加された場合、「同意画面のテキスト」で指定されたテキストが同意画面に表示されます。オフの場合、このクライアント・スコープは同意画面に表示されません
requirements.DISABLED=無効
clientSessionIdle=クライアント・セッション・アイドル
push=プッシュ
titleUsers=ユーザー
scopePermissions.users.user-impersonated-description=どのユーザーを偽装するかを決定するポリシー。これらのポリシーは、偽装されているユーザーに適用されます。
forceAuthenticationHelp=アイデンティティー・プロバイダーが以前のセキュリティー・コンテキストに頼るのではなく、プレゼンターを直接認証すべきかどうかを設定します。
testClusterAvailability=クラスターの可用性をテスト
forceNameIdFormat=Name IDフォーマットを強制
scopePermissions.users.manage-description=管理者がレルム内のすべてのユーザーを管理できるかどうかを決定するポリシー
included.client.audience.tooltip=指定されたオーディエンス・クライアントのクライアントIDが、トークンのオーディエンス（aud）フィールドに含まれます。トークンに既存のオーディエンスが存在する場合は、指定された値が単にそれらに追加されます。既存のオーディエンスを上書きすることはありません。
addRole=ロールの追加
addressClaim.locality.tooltip=「address」トークンクレーム内の「locality」サブクレームにマップするために使用されるユーザー属性の名前。デフォルトは「locality」です。
keyForCodeExchangeHelp=PKCEのどのコードチャレンジ方式を使用するかを選択します。指定しない場合、Keycloakは、クライアントが適切なコードチャレンジとコード交換の方式で認可リクエストを送信しない限り、クライアントにPKCEを適用しません。
userInfoSignedResponseAlgorithmHelp=署名付きUserInfoエンドポイントのレスポンスに使用するJWAアルゴリズムを設定します。「unsigned」に設定した場合は、UserInfoレスポンスは署名されず、application/json形式で返されます。
lastName=姓
otpPolicyDigitsHelp=OTPの桁数を設定します。
clientAuthentications.client_secret_post=POSTで送信されたクライアント・シークレット
authenticationAliasHelp=この設定の名前を設定します。
SSOSessionIdle=SSOセッション・アイドル
ssoServiceUrlHelp=認証リクエスト（SAML AuthnRequest）の送信に使用するURLを設定します。
copy=コピー
credentialData=データ
connectionTimeout=接続タイムアウト
passLoginHintHelp=アイデンティティー・プロバイダーにlogin_hintを渡します。
monthHelp=ポリシーが許可される月を定義します。2番目のフィールドに値を入力して範囲を指定することもできます。この場合、現在の月が指定した2つの値の間にあるか、等しい場合のみ許可されます。
webAuthnPolicyAvoidSameAuthenticatorRegisterHelp=すでに登録されているオーセンティケーターの登録を避けるかどうかを設定します。
registrationAccessToken=登録用アクセストークン
supportedLocales=サポートされるロケール
showPasswordDataValue=値
issuerHelp=レスポンス内の発行者の識別子（Issuer Identifier）を設定します。未設定の場合は、検証は実行されません。
webAuthnPolicyAttestationConveyancePreference=期待する構成証明伝達
titleSessions=セッション
rootURL=相対URLに追加するルートURLを設定します。
evictionMinute=エビクションの分
nodeReRegistrationTimeoutHelp=登録されたクライアントをクラスターノードへ再登録する際の最大時間間隔を設定します。クラスターノードがこの時間内にKeycloakに再登録リクエストを送信しない場合は、Keycloakから登録解除されます。
logoutServicePostBindingURLHelp=シングル・ログアウト・サービスのSAMLPOSTバインディングURLを設定します。異なるBindingを使用している場合は空でよいです。
clientAuthentication=クライアント認証
validatePasswordPolicy=パスワード・ポリシーの検証
registrationEmailAsUsername=メールアドレスをユーザー名として使用
passCurrentLocale=現在のロケールを渡す
webAuthnPolicyFormHelp=WebAuthn認証のポリシー。これは、「WebAuthn Register」必須アクションと「WebAuthn Authenticator」オーセンティケーターで使用されます。一般的な用途は、2要素認証にWebAuthnを使用する場合です。
identityInformation=アイデンティティー情報
usermodel.clientRoleMapping.rolePrefix.label=クライアント・ロールのプレフィックス
syncModeOverrideHelp=このマッパーのIDPのデフォルトの同期モードをオーバーライドします。値は次のとおりです。このオプションが導入される前の動作を維持する「レガシー」、このアイデンティティー・プロバイダーを使用したユーザーの初回ログイン時に一度だけユーザーをインポートする「インポート」、このアイデンティティー・プロバイダーでログインするたびにユーザーを常に更新する「強制」、このマッパーのアイデンティティー・プロバイダーで定義された同期モードを使用する「継承」。
partialImport=部分インポート
includeInTokenScopeHelp=オンの場合、このクライアント・スコープの名前がアクセストークン・プロパティーの「scope」と同様にトークン・イントロスペクション・エンドポイントのレスポンスに追加されます。オフの場合、このクライアント・スコープはトークンとトークン・イントロスペクション・エンドポイントのレスポンスから除外されます。
signatureKeyNameHelp=署名されたSAML文書には、KeyName要素の署名鍵の識別情報が含まれています。Keycloak / RH-SSOカウンター・パーティーの場合は、KEY_IDを使用し、MS AD FSの場合はCERT_SUBJECTを使用します。他のオプションが動作しない場合はNONEをチェックして使用します。
clientAssertionSigningAlgHelp=クライアント認証でJWTアサーションを利用するときの署名アルゴリズム。クライアント認証が 秘密鍵で署名されたJWT もしくは JWTでクライアント・シークレット の場合に設定します。アルゴリズムの指定をしなかった場合、 秘密鍵で署名されたJWT ではRS256 JWTでクライアント・シークレット ではHS256のアルゴリズムが使用されます。
tokenClaimName.label=トークンクレーム名
create=作成
from=差出人
decisionStrategyHelp=決定戦略は、パーミッションの評価方法と最終的な判定の取得方法を決定します。「Affirmative」とは、リソースおよびそのスコープへのアクセスを許可するために、少なくとも1つのパーミッションが肯定的な判定に評価される必要があることを意味します。「Unanimous」とは、最終的な判定も肯定的であるために、すべてのパーミッションが肯定的な判定に評価される必要があることを意味します。
hideOnLoginPage=ログインページで非表示
resource=リソース
userSession.modelNote.tooltip=UserSessionModel.noteマップ内のユーザー・セッション・ノート名です。
maxLifespan=最大生存期間
clientsClientTypeHelp=「OpenID Connect」により、クライアントは認可サーバーによって実行される認証に基づいてエンドユーザーのアイデンティティーを検証できます。「SAML」は、クロスドメインのシングル・サインオン（SSO）を含むWebベースの認証および認可のシナリオを可能にし、アサーションを含むセキュリティー・トークンを使用して情報を渡します。
webOriginsHelp=許可されるCORSオリジンを設定します。有効なリダイレクトURIのすべてのオリジンを許可するには「+」を追加してください。ただし、これには「*」ワイルドカードは含まれません。すべてのオリジンを許可するには、明示的に「*」を追加してください。
logoutUrl=ログアウトURL
webAuthnPolicyPasswordlessFormHelp=パスワードレスWebAuthn認証のポリシー。これは、「Webauthn Register Passwordless」必須アクションおよび「WebAuthn Passwordless Authenticator」オーセンティケーターによって使用されます。一般的な使用法は、WebAuthnが一要素認証として使用される場合です。「WebAuthnポリシー」と「WebAuthnパスワードレス・ポリシー」の両方を使用すると、WebAuthnを同じレルムの第1要素オーセンティケーターと第2要素オーセンティケーターの両方として使用できます。
storedTokensReadable=読み取り可能なトークンを格納
admin-clearEventsHelp=データベース内のすべての管理イベントを削除します。
usermodel.prop.label=プロパティー
authenticationOverrides=認証フローのオーバーライド
clientSessionIdleHelp=クライアント・セッションが期限切れになるまでアイドル状態にできる時間。トークンは、クライアント・セッションが期限切れになると無効になります。設定しない場合、標準のSSOセッション・アイドルの値が使用されます。
scopesSelect=このパーミッションは1つまたは複数のスコープに適用されるように指定してください。
clientAuthenticationHelp=クライアント認証方法（参照：https\://openid.net/specs/openid-connect-core-1_0.html\#ClientAuthentication）。秘密鍵で署名されたJWTの場合、レルム秘密鍵が使用されます。
clientSecretHelp=アイデンティティー・プロバイダーで登録されているクライアント・シークレットを設定します。このフィールドは、ボールトから値を取得できます。${vault.ID}形式を使用します。
value=値
offlineSessionMax=オフライン・セッション最大
times.seconds=秒
webAuthnPolicyExtraOriginsHelp=非 Web アプリケーションの追加オリジンのリスト。
resources=リソース
groupsHelp=メンバーであるグループです。グループから外すには、グループを選択して「外す」ボタンをクリックしてください。
groups=グループ
permanentLockoutHelp=最大ログイン失敗回数を超えたときに、ユーザーを永久にロックします。
logicType.positive=Positive
accountTheme=アカウントテーマ
forceAuthentication=認証を強制
webAuthnPolicyAvoidSameAuthenticatorRegister=オーセンティケーターの重複登録回避
assertionConsumerServiceRedirectBindingURLHelp=アサーション・コンシューマー・サービス（ログイン・レスポンス）のSAML RedirectバインディングURLを設定します。このBindingのためのURLがない場合は空でよいです。
selectARole=ロールを選択してください
titleAuthentication=認証
category=カテゴリー
times.days=日
providers=プロバイダー
loginWithEmailAllowed=メールアドレスでログイン
eventListenersHelpTextHelp=どのリスナーがレルムのイベントを受け取るか設定します。
registrationAccessTokenHelp=登録用アクセストークンにより、クライアントはクライアント登録サービスにアクセスできます。
topLevelFlowTypeHelp=どの種類のトップレベル・フローを作成するか設定します。「client」タイプは、クライアント（アプリケーション）の認証で使用します。「generic」はユーザーと他のすべてで使用します。
policyCodeHelp=このポリシーに対する条件を提供するJavaScriptコード。
addIdpMapperNameHelp=マッパーの名前です。
resourceNameHelp=このリソースの一意な名前。この名前は、リソースを一意に識別するために使用でき、特定のリソースを照会するときに便利です。
duplicateEmailsAllowed=メールアドレスの重複
policyClientHelp=このポリシーで許可されるクライアントを指定します。
clientAuthenticatorTypeHelp=Keycloakサーバーに対してこのクライアントの認証に使用するクライアント認証方式を設定します。
policyGroupsHelp=どのユーザーがこのポリシーで許可されるか指定してください。
internationalizationHelp=有効にすると、このレルムでサポートするロケールとデフォルトのロケールを選択できます。
realmSettingsExplain=レルムの設定画面では、現在のレルムのユーザー、アプリケーション、ロール、グループのオプションを設定します。
internationalization=国際化
realmRolesList=レルムロール
flowName=フロー名
eventTypes.LOGIN.name=ログイン
createClientScope=クライアントスコープの作成
registrationAllowed=ユーザー登録
createClientProfile=クライアントプロファイルの作成
newClientProfile=クライアントプロファイルの作成
createClient=クライアントの作成
editUsernameAllowed=ユーザー名の編集
clientRegistration=クライアント登録
createClientPolicy=クライアントポリシーの作成
idpType.social=ソーシャルログイン
addStep=ステップの追加
eventTypes.REFRESH_TOKEN_ERROR.description=トークンリフレッシュエラー
createAGroup=グループの作成
searchAdminEventsBtn=管理イベントの検索
editFlow=フローの編集
editAttribute=属性の編集
eventTypes.TOKEN_EXCHANGE_ERROR.name=トークンエクスチェンジエラー
deleteConfirmUsers=ユーザーを削除しますか？
searchInitialAccessToken=トークンの検索
editProvider=プロバイダーの編集
eventTypes.TOKEN_EXCHANGE.description=トークンエクスチェンジ
searchForSession=セッションの検索
searchProfile=プロファイルの検索
eventTypes.RESET_PASSWORD_ERROR.name=パスワードのリセットエラー
showMetaData=メタデータの表示
validatorDialogColNames.colDescription=説明
searchForUser=ユーザーの検索
allGroups=すべてのグループ
eventTypes.UPDATE_PASSWORD.name=パスワードの更新
createUser=ユーザーの作成
searchForGroups=グループの検索
eventTypes.REGISTER_ERROR.name=登録エラー
addSubFlowTitle=サブフローの追加
deleteConfirmTitle=レルムを削除しますか？
eventTypes.SEND_RESET_PASSWORD.description=パスワードリセットの送信
createToken=初期アクセストークンの作成
logoutAllSessions=すべてのセッションのログアウト
createFlow=フローの作成
addTypes=タイプの追加
eventTypes.REGISTER_NODE.description=ノードの登録
searchUserEventsBtn=イベントの検索
eventTypes.RESET_PASSWORD_ERROR.description=パスワードのリセットエラー
eventTypes.REGISTER_NODE_ERROR.name=ノードの登録エラー
createNewUser=新しいユーザーの作成
createNewMapper=新しいマッパーの作成
searchClientAuthorizationPolicy=ポリシーの検索
searchMember=メンバーの検索
darkModeEnabled=ダークモード
cancel=キャンセル
searchAttributes=属性の検索
userID=ユーザーID
eventTypes.REFRESH_TOKEN_ERROR.name=トークンリフレッシュエラー
deleteClientProfileConfirmTitle=プロファイルを削除しますか？
deleteCredentialsConfirmTitle=クレデンシャルを削除しますか？
eventTypes.SEND_VERIFY_EMAIL.name=確認メールの送信
deleteConfirmFlow=フローを削除しますか？
welcomeTabTitle=ようこそ
eventTypes.REGISTER.description=登録
searchForUserEvent=ユーザーイベントの検索
searchForRole=ロールの検索
search=検索
createAuthorizationScope=認可スコープの作成
searchClientAuthorizationResource=リソースの検索
createOrganization=組織の作成
eventTypes.UPDATE_CREDENTIAL.description=クレデンシャルの更新
eventTypes.REGISTER_NODE_ERROR.description=ノードの登録エラー
pkceEnabled=PKCEの使用
addSamlProvider=SAMLプロバイダーの追加
searchForProtocol=プロトコルマッパーの検索
createRealm=レルムの作成
eventTypes.RESET_PASSWORD.description=パスワードのリセット
protocolTypes.saml=SAML
eventTypes.UPDATE_EMAIL.name=メールアドレスの更新
providerInfo=プロバイダー情報
deleteConfirmTitle_one=グループを削除しますか？
delete=削除
policiesConfigTypes.jsonEditor=JSONエディター
eventTypes.REFRESH_TOKEN.description=トークンリフレッシュ
createGroupText=属性グループの作成
searchMembers=メンバーの検索
authenticatorAttachment.platform=プラットフォーム
eventTypes.SEND_VERIFY_EMAIL_ERROR.description=確認メールの送信エラー
deleteConfirmTitle_other=グループを削除しますか？
eventTypes.REGISTER_ERROR.description=登録エラー
createAttributeSubTitle=新しい属性の作成
searchGroup=グループの検索
eventTypes.SEND_VERIFY_EMAIL.description=確認メールの送信
eventTypes.REFRESH_TOKEN.name=トークンリフレッシュ
addSubFlow=サブフローの追加
addRoles=ロールの追加
addUri=URIの追加
deleteClientPolicy=クライアントポリシーの削除
credentialReset=クレデンシャルのリセット
createAttribute=属性の作成
eventTypes.REGISTER_NODE.name=ノードの登録
searchForAdminEvent=管理イベントの検索
createRole=ロールの作成
eventTypes.TOKEN_EXCHANGE_ERROR.description=トークンエクスチェンジエラー
createResource=リソースの作成
data=データ
eventTypes.SEND_VERIFY_EMAIL_ERROR.name=確認メールの送信エラー
createChildGroup=子グループの作成
eventTypes.LOGOUT_ERROR.name=ログアウトエラー
eventTypes.LOGOUT.description=ログアウト
eventTypes.LOGOUT_ERROR.description=ログアウトエラー
eventTypes.LOGIN.description=ログイン
eventTypes.LOGIN_ERROR.name=ログインエラー
eventTypes.LOGIN_ERROR.description=ログインエラー
claims=クレーム
userProfile=ユーザープロファイル
unmanagedAttributePolicy.DISABLED=無効
eventTypes.DELETE_ACCOUNT_ERROR.description=アカウントの削除エラー
eventTypes.VERIFY_PROFILE_ERROR.name=プロファイルの検証エラー
sessionsType.directGrant=ダイレクトグラント
eventTypes.VERIFY_EMAIL.description=メールアドレスの検証
eventTypes.PERMISSION_TOKEN.description=パーミッショントークン
eventTypes.VERIFY_EMAIL.name=メールアドレスの検証
selectLocales=ロケールの選択
eventTypes.VERIFY_EMAIL_ERROR.description=メールアドレスの検証エラー
eventTypes.VERIFY_PROFILE_ERROR.description=プロファイルの検証エラー
selectFlowType=フロータイプの選択
permissionsDisable=パーミッションを無効にしますか？
eventTypes.PERMISSION_TOKEN.name=パーミッショントークン
selectALocale=ロケールの選択
selectAdminTheme=アドミンテーマの選択
selectVendor=ベンダーの選択
bruteForceMode.Disabled=無効
VERIFY_EMAIL=メールアドレスの検証 (VERIFY_EMAIL)
disableConfirmTitle=レルムを無効にしますか？
permission=パーミッション
eventTypes.VERIFY_EMAIL_ERROR.name=メールアドレスの検証エラー
selectAttributes=属性の選択
eventTypes.VERIFY_PROFILE.description=プロファイルの検証
userVerify.required=必須
updateUserLocale=ユーザーロケールの更新
selectResource=リソースの選択
selectEventsListeners=イベントリスナーの選択
selectLoginTheme=ログインテーマの選択
selectClients=クライアントの選択
selectAccountTheme=アカウントテーマの選択
selectFilterType=フィルタータイプの選択
selectCachePolicy=キャッシュポリシーの選択
trusted-hosts.label=信頼できるホスト
locales=ロケール
unmanagedAttributePolicy.ENABLED=有効
root=ルート
disableConfirmClientTitle=クライアントを無効にしますか？
eventTypes.VERIFY_PROFILE.name=プロファイルの検証
spinnerLoading=ロード中
searchByRoleName=ロール名で検索
invalidRealmName=レルム名は特殊文字を含むことが出来ません
realmNameTitle={{name}} レルム
subjectNameId=Subject NameID
userId=ユーザーID
eventTypes.UPDATE_EMAIL.description=メールアドレスの更新
eventTypes.VALIDATE_ACCESS_TOKEN.description=アクセストークンの検証
exportSuccess=レルムのエクスポートに成功しました。
resourceDeletedSuccess=リソースの削除に成功しました
importResourceSuccess=リソースのインポートに成功しました
deleteUser=ユーザーの削除
addedNodeSuccess=ノードの追加に成功しました
generateSuccess=新しいキーペアと証明書の生成に成功しました
copySuccess=クリップボードへのコピーに成功しました！
updateCredentialUserLabelSuccess=ユーザーラベルの変更に成功しました。
updateCibaSuccess=CIBAポリシーの更新に成功しました
realmName=レルム名
createIdentityProviderSuccess=アイデンティティープロバイダーの作成に成功しました
testSuccess=LDAPへの接続に成功しました
syncUsersSuccess=ユーザーの同期に成功しました。
roleDeletedSuccess=ロールは削除されました
addMapper=マッパーの追加
eventTypes.DELETE_ACCOUNT.description=アカウントの削除
updateScopeSuccess=認可スコープの更新に成功しました
attributeValue=属性値
mappingUpdatedSuccess=マッピングの更新に成功しました
memory=メモリー
eventTypes.CLIENT_LOGIN.name=クライアントのログイン
saveProviderSuccess=プロバイダーの保存に成功しました。
userList=ユーザーリスト
mapperCreateSuccess=マッパーの作成に成功しました。
configSaveSuccess=設定の保存に成功しました
clearAllFilters=すべてのフィルターのクリア
deleteNode=ノードを削除しますか？
mapperSaveSuccess=マッパーの保存に成功しました。
eventTypes.CLIENT_DELETE.name=クライアントの削除
clearUserEvents=ユーザーイベントのクリア
eventTypes.DELETE_ACCOUNT_ERROR.name=アカウントの削除エラー
eventTypes.CLIENT_DELETE_ERROR.name=クライアントの削除エラー
realmInfo=レルムの情報
realmCache=レルムキャッシュ
clearButtonTitle=クリア
clearCachesTitle=キャッシュのクリア
userCache=ユーザーキャッシュ
keysCache=鍵キャッシュ
deletedSuccess=プロバイダーの削除に成功しました。
disableSuccess=プロバイダーの無効化に成功しました
editGroupText=属性グループの編集
close=閉じる
deleteMappingTitle=マッピングを削除しますか？
deleteAttributeConfirmTitle=属性を削除しますか？
deleteBtn=削除
deleteGroup=グループの削除
welcomeTo={{realmDisplayInfo}}へようこそ
deleteClientPolicyConfirmTitle=ポリシーを削除しますか？
eventTypes.CLIENT_DELETE_ERROR.description=クライアントの削除エラー
updateExecutorSuccess=エグゼキューターの更新に成功しました
learnMore=詳細
eventTypes.CLIENT_REGISTER_ERROR.name=クライアントの登録エラー
version=バージョン
freeMemory=空きメモリー
revert=元に戻す
showLess=表示を減らす
noClientPolicies=クライアントポリシーがありません
refresh=更新
searchForRoles=ロール名でロールを検索
otpSupportedApplications.totpAppMicrosoftAuthenticatorName=Microsoft Authenticator
used.DEFAULT=デフォルト
realmSaveSuccess=レルムの更新に成功しました
enabledFeatures=有効な機能
refreshTokens=リフレッシュトークン
userEvents=ユーザーイベント
showMore=表示を増やす
displayOrder=表示順
supported=サポート
experimental=試験的
usedMemory=使用中メモリー
infoEnabledFeatures=有効なプレビュー機能と試験的な機能を表示します。
enableHelpMode=ヘルプモードの有効化
resetPasswordBtn=パスワードのリセット
resetPasswordConfirm=パスワードをリセットしますか？
addProvider_other={{provider}} プロバイダーの追加
emptyUserEvents=ユーザーイベントがありません
emptyUserEventsInstructions=このレルムにはユーザーイベントがありません。
organizationsEnabled=組織
organizationsList=組織
addDomain=ドメインの追加
inviteMember=メンバーの招待
clientPolicies=クライアントポリシー
emptyUserOrganizations=組織がありません
helpToggleInfo=このトグルは、UIのヘルプ情報の一部を有効化/無効化します。ヘルプテキスト、リンク、ポップオーバーが含まれます。
addDefaultGroups=デフォルトグループの追加
documentation=ドキュメント
realmId=レルムID
otpSupportedApplications.totpAppFreeOTPName=FreeOTP
userEventsSettings=ユーザーイベントの設定
realmNameField=レルム名
includeInLightweight.label=lightweightアクセストークンに追加
viewDocumentation=ドキュメントの参照
organizations=組織
organizationSaveSuccess=組織の保存に成功しました。
clientScopeTypes.optional=オプショナル
localization=ローカライゼーション
otpSupportedApplications.totpAppGoogleName=Google Authenticator
viewGuides=ガイドの表示
joinCommunity=コミュニティーへの参加
readBlog=ブログを読む
eventTypes.UPDATE_CONSENT_ERROR.name=同意の更新エラー
totalMemory=合計メモリー
preview=プレビュー
bruteForceMode=ブルートフォースモード
domains=ドメイン
domain=ドメイン
loggedInAsTempAdminUser=一時的な管理者ユーザーとしてログインしています。セキュリティーを強化するには、永続的な管理者アカウントを作成し、一時的なアカウントを削除してください。
valueLabel=値
global=グローバル
addClientScopes=クライアントスコープの追加
includeInIntrospection.label=トークンイントロスペクションに追加
infoDisabledFeatures=無効になっているすべての機能を表示します。
useRefreshTokens=リフレッシュトークンの使用
addCustomProvider=カスタムプロバイダーの追加
welcomeText=Keycloakは、ユーザーフェデレーション、強力な認証、ユーザー管理、きめ細かな認可などを提供します。最小限の労力でアプリケーションに認証を追加し、サービスを保護します。アプリケーションでユーザーの保存や認証を行う必要はありません。
resetPasswordAllowed=パスワード忘れ
loginScreenCustomization=ログイン画面のカスタマイズ
acrToLoAMapping=ACRとLoAのマッピング
emailSettings=メールアドレスの設定
savingUserEventsOff=ユーザーイベントの保存がオフになっています
savingAdminEventsOff=管理イベントの保存がオフになっています
userInfoSettings=ユーザー情報の設定
sessionsType.allSessions=全てのセッションタイプ
emptyAdminEventsInstructions=このレルムには管理イベントがありません。
resetBtn=リセット
sessionsType.serviceAccount=サービスアカウント
clientProfileSearch=検索
signOutAllActiveSessionsQuestion=すべてのアクティブなセッションをサインアウトしますか？
signOutAllActiveSessions=すべてのアクティブなセッションをサインアウト
sessionsType.offline=オフライン
searchForClient=クライアントの検索
sessionsType.regularSSO=通常のSSO
searchForClientScope=クライアントスコープの検索
started=開始
emptyAdminEvents=管理イベントがありません
profiles=プロファイル
noGroupsInThisRealm=このレルムにはグループがありません
addMultivaluedLabel={{fieldLabel}}の追加
role=ロール
eventTypes.UPDATE_TOTP.name=TOTPの更新
deleteConfirm_other=これらのグループを削除してもよいですか？
sync-ldap-roles-to-keycloak=LDAPロールをKeycloakに同期させる
addLdapWizardTitle=LDAPユーザー・フェデレーション・プロバイダーの追加
secretHasExpired=シークレットの有効期限が切れているため、上の「再生成」ボタンをクリックして新しいシークレットを作成してください
eventTypes.IDENTITY_PROVIDER_FIRST_LOGIN_ERROR.name=アイデンティティー・プロバイダーの初回ログイン・エラー
managePriorityOrder=優先順位の管理
emptyMappers=マッパーはありません
artifactBindingUrlHelp=HTTP ARTIFACTメッセージを送信するURL。別のバインディングを使用している場合は、空白のままにすることができます。この値は、IdP起点のログインでARTIFACTバインディングを強制する場合に設定する必要があります。
artifactBindingUrl=アーティファクトバインディングURL
clientsList=クライアント一覧
eventTypes.CLIENT_UPDATE_ERROR.description=クライアント更新エラー
dedicatedScopeExplain=これは専用のマッパーとスコープを含むクライアントスコープです
updateOtpError=OTPポリシーを更新できませんでした: {{error}}
clearFileExplain=このファイルを本当に消去してもよろしいですか?
userModelAttribute=ユーザーモデル属性
eventTypes.UPDATE_CONSENT.name=同意の更新
forceArtifactBinding=アーティファクトバインディングの強制
ldapAttributeHelp=LDAPオブジェクトにマッピングされる属性の名前。例えば、'cn'、'sn'、'mail'、'street'など。
claimFilterNameHelp=必須クレームの名称
eventTypes.CODE_TO_TOKEN_ERROR.description=コードとトークンの交換時のエラー
termsOfServiceUrl=サービスの利用規約のURL
requestObject.request_uri\ only=リクエストURIのみ
rolesScope=定義されたロールスコープマッピングがない場合、各ユーザーは、このクライアントスコープを使うことができます。定義されたロールスコープマッピングがある場合、ユーザーは少なくとも1つのロールのメンバーでなければなりません.
client-updater-trusted-hosts.label=信頼できるホスト
syncRegistrationsHelp=新しく作成されたユーザーをLDAPストア内に作成する必要があるかどうか。 優先順位は、新しいユーザーを同期するために選択したプロバイダーに影響を与えます。この設定は、WRITABLE編集モードでのみ有効です。
userInitiatedActionLifespanHelp=ユーザーが送信するアクション許可（パスワードを忘れたメールなど）が期限切れになるまでの最大時間。ユーザーは自ら開始したアクションに素早く反応すると予想されるため、この値が短くなることが推奨されます.
editIdPMapper=アイデンティティープロバイダーのマッパーの編集
unmanagedAttributes=管理されていない属性
unmanagedAttributePolicy.ADMIN_EDIT=管理者だけが書き込み可能
unmanagedAttributePolicy.ADMIN_VIEW=管理者だけが参照可能
passwordPoliciesHelp.length=パスワードの最小文字数。
removeImportedUsersSuccess=インポートされたユーザーは削除されました.
authnContextClassRefsHelp=要求されたAuthnContextのClassRefの順序付きリスト。
useLowerCaseBearerType=トークンレスポンスで小文字のベアラータイプを使用する
confirmPasswordDoesNotMatch=パスワードとパスワード確認が一致しません。
unmanagedAttributesHelpText=管理されていない属性は、ユーザープロファイルの設定で明示的に定義されていないユーザー属性です。 デフォルトでは、管理されていない属性は `Disabled` であり、登録、アカウント、管理コンソールなどの任意のコンテキストから利用できません。 `有効` を設定することで、管理されていない属性はサーバーに完全に認識され、すべてのコンテキストからアクセスできるようになります。既存のレルムを宣言型ユーザープロファイルに移行し始めていて、ユーザープロファイルの設定ですべてのユーザー属性がまだ定義されていない場合に役立ちます。 `管理者だけが書き込み可能` を設定することで、管理コンソールとAPIだけで管理できない属性は、既にユーザーが管理できる任意のカスタム属性を定義している場合に便利ですが、管理者が管理するべき他の属性を追加することを保証していません。 `管理者だけが参照可能` を設定することで、管理コンソールとAPIでのみ、管理対象の属性は読み取り専用でのみ利用できます。
validateBindDn=LDAP管理者のDNを入力する必要があります
useRefreshTokensHelp=これがonの場合、resh_tokenが作成され、トークンレスポンスに追加されます。これがoffの場合、resh_tokenは作成されません。
getStarted=開始するには、以下の一覧からプロバイダーを選択します.
signedJWTConfirm=キータブからクライアント用の秘密鍵と証明書を生成します。
deleteDialogDescription=属性グループ <1>{{group}}</1>を永続的に削除しますか？
deleteNodeBody=ノード"{{node}}"を完全に削除してもよろしいですか？
disableTypeClaimCheck=タイプクレームチェックの無効化
overrideActionTokens=アクション・トークンの上書き
deleteGrantsError=グラント削除エラー: {{error}}
defaultGroupAdded_other=デフォルトグループに{{count}}個のグループを追加しました
used.SPECIFIC_CLIENTS=特定のクライアント
userFedDeleteConfirm=このユーザー・フェデレーション・プロバイダーを削除した場合、関連するすべてのデータが削除されます。
unlockUsersSuccess=一時的にロックされたユーザーは、ロックを解除されます
emptyPrimaryAction=事前定義済みのマッパーを追加
enableClientSignatureRequired=「クライアントの署名が必要」を有効にしますか？
addAssociatedRolesError=ロールの関連付けに失敗しました: {{error}}
diagramView=ダイアグラム表示
removeImportedUsers=インポートされたユーザーを削除しますか？
conditionsHelpItem=条件に関するヘルプ項目
anyClient=この条件は、すべてのクライアント、すべてのイベントにおいて常に真となります。
tokenSaveSuccess=新しい初期アクセストークンが作成されました
eventTypes.USER_DISABLED_BY_PERMANENT_LOCKOUT.name=永続的なロックアウトによって無効にされるユーザー
eventTypes.USER_DISABLED_BY_PERMANENT_LOCKOUT_ERROR.name=永続的なロックアウトエラーによって無効にされるユーザー
eventTypes.USER_DISABLED_BY_TEMPORARY_LOCKOUT.name=一時的なロックアウトによって無効なユーザー
eventTypes.USER_DISABLED_BY_TEMPORARY_LOCKOUT_ERROR.name=一時的なロックアウトエラーによって無効なユーザー
eventTypes.INTROSPECT_TOKEN_ERROR.description=トークンイントロスペクションエラー
realmSaveError=Realmは更新できませんでした: {{error}}
authDataDescription=認可リクエストの処理結果として生成される、認可データを含むトークンを示します。これは、Keycloakがアクセス許可を要求するクライアントに発行するものです。現在の認可リクエストに基づいて付与されたパーミッションは、 `authorization` クレームで確認できます。
generatedAccessTokenIsDisabled=ユーザーが選択されていないときにアクセストークンを生成することは無効になっています。
userDeletedSuccess=ロールが削除されました
revokeClientScopesTitle=与えられたクライアント・スコープをすべて取り消しますか？
allow-default-scopes.label=デフォルトスコープの許可
mapperTypeFullNameLdapMapper=full-name-ldap-mapper
searchUserByAttributeMissingKeyError=属性キーを指定する
eventTypes.INVALID_SIGNATURE.name=無効な署名
authDetailsHelp=このリソース・サーバーのすべてのリソース設定をエクスポートし、ダウンロードします。
policyProvider.regex=パーミッションの正規表現条件を定義します。
clientImportError=クライアントをインポートできません: {{error}}
realmCertificateAliasHelp=レルム証明書もアーカイブに保存されます。これはそのエイリアスです。
createIdentityProviderError=アイデンティティー・プロバイダーを作成できません: {{error}}
deleteClientPolicyConfirm=このアクションは、{{policyName}}ポリシーを永続的に削除します。これは元に戻すことができません。
cibaAuthRequestedUserHint=認証リクエスト・ユーザー特定ヒント
comparison=比較
passwordPoliciesHelp.digits=パスワード文字列に必要な数字の数。
deletedSuccessClientScope=クライアント・スコープが削除されました
columnDisplayName=表示名
lookAround=表示期間
dependentPermission=依存パーミッション
disableNonce=nonceの無効化
clientPoliciesPoliciesHelpText=クライアントポリシーは、クライアントプロファイルと様々な条件を組み合わせることで、特定のクライアントプロファイルの実行者によって強制される動作を、いつ適用するかを指定できます。
noDefaultGroupsInstructions=デフォルトグループを使用すると、新規ユーザーの作成時または<1>アイデンティティブローカリング</1>によるインポート時に、グループメンバーシップを自動的に割り当てることができます。開始するには、デフォルトグループを追加してください。
removeUserText={{numSelected}}人のユーザーを削除しますか？これらのユーザーは、{{role}}ロールおよびその関連ロールのパーミッションを失います。
attributeConsumingServiceNameHelp=SPメタデータで公開するAttribute Consuming Serviceのプロファイル名。
supportedApplicationsHelp=現在のOTPポリシーで動作することが分かっているアプリケーション。
eventTypes.IDENTITY_PROVIDER_RETRIEVE_TOKEN.description=アイデンティティプロバイダからのトークン取得
notAllowedToDeleteAllClientScopes=すべてのクライアント・スコープを削除することはできません。
noUsersFoundErrorStorage=ユーザーが見つかりませんでした。連携された外部アイデンティティー・プロバイダーの設定に誤りがある可能性があります: {{error}}
clientDelete={{clientId}}を削除しますか？
contentSecurityPolicyReportOnlyHelp=コンテンツ・セキュリティー・ポリシーのテストについての <1>詳細はこちら</1>
newRoleNameHelp=新しいロールの名前。ロール名の形式によって、アクセストークン内でロールがマッピングされる場所が変わります。「myapp.newname」とすると、アクセストークン内の特定のクライアント・アプリケーション領域にロールがマッピングされ、「newname」とすると、トークン内のレルムロールにマッピングされます。
samlKeysExportError=次の理由で、キーをエクスポートできません: {{error}}
scopePermissions.roles.map-role-client-scope-description=管理者がクライアント・スコープにこのロールを適用できるかどうかを決定するポリシー
artifactBindingResponseHelp=リクエストへの応答にARTIFACTバインディングを使用するかどうかを指定します。falseに設定した場合、HTTP-POSTバインディングの設定が適用されます。
eventTypes.IMPERSONATE.description=代理操作
kerberosWizardDescription=ここに説明文を入力してください。
importResources=次の設定とデータがインポートされます：
removeImportedUsersError=インポートされたユーザーを削除できませんでした: '{{error}}'
webAuthnPolicyCreateTimeoutHint=タイムアウトは0秒から8時間の間で設定する必要があります。
addValidator=バリデーターの追加
attributeImporter=SAMLアサーションに宣言された属性が存在する場合、指定されたユーザーのプロパティーまたは属性にインポートします。
forbidden_other=アクセスが拒否されました。必要な権限：
removeMappingConfirm_other={{count}}個のロールを削除してもよろしいですか？
validateConnectionUrl=接続URLを入力する必要があります。
attributeConsumingServiceIndexHelp=認証中にリクエストするAttribute Consuming Serviceのプロファイルのインデックス。
clientSessionSettings=クライアント・セッションの設定
mapperTypeHardcodedAttributeMapper=hardcoded-attribute-mapper
welcome=ようこそ
createTokenHelp=初期アクセストークンはクライアントを作成するためにのみ使用できます。
linkedIdPs=リンクされたアイデンティティー・プロバイダー
identityProvidersPermissionsHint=このロールの管理において、きめ細かいパーミッション設定を有効にするかどうかを決定します。無効にすると、現在設定されているすべてのパーミッションが削除されます。
createAttributeError=エラーが発生しました。ユーザー・プロファイルの設定が保存されませんでした: {{error}}。
eventTypes.OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR.description=OAuth2のデバイスコードとトークンの交換時のエラー
cibaAuthRequestedUserHintHelp=認証が要求されるエンドユーザーを識別する方法。現在「login_hint」のみがサポートされています。
importHelp=このリソースサーバーの認可設定を含むJSONファイルをインポートします。
leaveGroupConfirmDialog_other={{count}}個選択したグループから{{username}}を削除したいですか？
updatedCredentialMoveError=ユーザー・クレデンシャルの設定が保存されていません: {{error}}
searchClientByName=名前でクライアントを検索する
noTokens=初期アクセストークンがありません
defaultAdminInitiatedActionLifespanHelp=管理者がユーザーに送信するアクション許可の有効期限の最大時間。管理者が現在オフラインのユーザーにメールを送信できるように、この値は長く設定することが推奨されます。デフォルトのタイムアウトは、トークンの発行直前に上書きできます。
detailsHelp=詳細はこちらを参照してください。
enableRefreshRequestedTokenTypeHelp=標準トークン交換V2 がリフレッシュトークンを要求できるかどうかを制御します（パラメーター "requested_token_type" の値が "urn:ietf:params:oauth:token-type:refresh_token" に設定されている場合）。このオプションが"No"の場合（デフォルト）、リフレッシュトークン要求のタイプは許可されず、エラーが返されます。このオプションが"Same session"の場合、返されるリフレッシュトークンはサブジェクトトークンと同じセッションを使用するように強制され、そのセッションが利用できない場合（例えば、サブジェクトトークンが一時的な場合）はエラーが返されます。
clientTypeHelp=「OpenID Connect」により、クライアントは認可サーバーによって実行される認証に基づいてエンドユーザーのアイデンティティーを検証できます。「SAML」は、クロスドメインのシングル・サインオン（SSO）を含むWebベースの認証および認可のシナリオを可能にし、アサーションを含むセキュリティー・トークンを使用して情報を渡します。
updateError=プロバイダーを更新できません {{error}}
policyProvider.client-scope=オブジェクトへのアクセスを許可する1つ以上のクライアント・スコープのセットを使用して、パーミッションの条件を定義します。
friendlyName=アサーション内で検索する属性のユーザーフレンドリーな名前。空白のままにして、代わりに名前を指定することもできます。
serviceAccountHelp=このクライアントをKeycloakで認証し、このクライアント専用のアクセストークンを取得できるようにします。つまり、OAuth2の仕様における「クライアント・クレデンシャル・グラント」のサポートを有効にします。
eventTypes.RESTART_AUTHENTICATION_ERROR.description=認証再開中のエラー
onDragFinish=ドラッグが完了しました {{list}}
bindDnHelp=KeycloakがLDAPサーバーにアクセスするために使用するLDAP管理者のDN
newClientProfileName=クライアント・プロファイル名
eventTypes.OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR.name=OAuth2のデバイスコードとトークンの交換時のエラー
addOpenIdProvider=OpenID Connectプロバイダーの追加
eventTypes.UPDATE_PROFILE.description=プロファイルの更新
assignRolesTo={{client}} にロールを割り当てる
policyProvider.js=JavaScriptを使用してパーミッションの条件を定義します。これは、Keycloakがサポートするルールベースのポリシータイプの1つで、評価 API に基づいてポリシーを記述する柔軟性を提供します。
krbPrincipalAttribute=Kerberosプリンシパル属性
emptyClientProfilesInstructions=クライアント・プロファイルがない場合、「クライアント・プロファイルの作成」を選択し、新しいクライアント・プロファイルを作成してください
noSessionsDescription=現在、このレルムでアクティブなセッションはありません.
otpPolicyCodeReusable=再使用可能なトークン
addRedirectUri=有効なリダイレクトURIの追加
exportWarningDescription=レルムに多数のグループ、ロール、またはクライアントが含まれている場合、操作によってサーバーがしばらく応答しなくなる可能性があります。
eventTypes.IDENTITY_PROVIDER_RESPONSE.name=アイデンティティー・プロバイダーのレスポンス
displayDescription=説明文の表示
confirmClientSecretTitle=このクライアントのシークレットを再生成しますか?
userAttributeName=SAML属性を保存するユーザー属性名。メール、姓、名を、これらの事前定義されたユーザー・プロパティーにマッピングするために使用します。
orderChangeError=アイデンティティー・プロバイダーの表示順を変更できません {{error}}
socialProfileJSONFieldPathHelp=ソーシャル・プロバイダーのユーザー・プロファイルJSONデータから値を取得するフィールドのパス。ネストにはドット記法、配列インデックスには角括弧を使用できます。例：'contact.address[0].country'。
sameSession=同じセッション
standardTokenExchangeEnabledHelp=このクライアントに対して、標準トークン交換V2を有効にします。
deleteConfirmGroup_one=このグループ '{{groupName}}' を削除してもよろしいですか。
secretExpiresOn=シークレットは {{time}} で期限が切れます
attributeName=属性 [Name]
importUsersHelp=Trueの場合、LDAPユーザーは、Keycloakのデータベースにインポートされ、設定された同期ポリシーによって同期されます。
yes=はい
showRemaining=${remaining}を表示
eventTypes.UPDATE_EMAIL_ERROR.name=メールアドレス更新エラー
removeConfirm_other=これらのグループを削除してもよろしいですか？
renameGroup=グループ名の変更
searchScopeHelp=1階層の場合、検索はユーザーDNで指定されたDN内のユーザーにのみ適用されます。サブツリーの場合、検索はサブツリー全体に適用されます。詳細については、LDAPドキュメントを参照してください。
jumpToSection=セクションへのジャンプ
noUsersEmptyStateDescription=このロールを直接割り当てたユーザーだけがこのタブの下に表示されます。 このロールに割り当てられたユーザーを見つける必要がある場合は、
temporaryLockedHelp=ユーザーは、ログインに複数回失敗したため、ロックされている可能性があります。
useEntityDescriptorHelp=リモートIDPのSAMLエンティティー・ディスクリプターからメタデータをインポートします。
decisionStrategies.CONSENSUS=コンセンサス
mapperTypeRoleLdapMapperHelp=LDAP DNのロールを、レルムロールまたは特定のクライアントのクライアントロールにマッピングするために使用します。
disableSigningExplain=「{{key}}」を無効にすると、Keycloakのデータベースが更新され、このクライアントの新しいアダプターをダウンロードする必要があります。
authenticationCreateFlowHelp=フローを作成します。
credentialResetEmailSuccess=ユーザーに送信されたメール。
discoveryEndpointHelp=リモートIDPディスカバリー・ディスクリプターからメタデータをインポートします。
required=必須項目
userModelAttributeHelp=LDAP属性をマップしたいUserModelプロパティーまたは属性の名前。たとえば、'firstName'、'lastName、'email'、'street'など。
linkedIdPsText=既にこのユーザーアカウントにリンクしているアイデンティティー・プロバイダー
dedicatedScopes=専用スコープ
eventTypes.UPDATE_CONSENT.description=同意の更新
eventTypes.IDENTITY_PROVIDER_LOGIN_ERROR.description=アイデンティティー・プロバイダー・ログイン・エラー
groupRemove_one=グループが削除されました
validRequestURIsHelp=OpenID Connectの認証リクエストで「request_uri」パラメーターの値として使用できる有効なURIのリスト。有効なリダイレクトURIのような機能（例：ワイルドカードや相対パス）はサポートされていません。
eventTypes.UPDATE_EMAIL_ERROR.description=メールアドレス更新エラー
userCredentialsHelpText=トップレベルのハンドラーで、ユーザーのクレデンシャルの優先順位を変更できます。一番上のクレデンシャルが最優先となります。展開可能なパネル内のハンドラーでは、クレデンシャルの表示順序を変更できます。最上位のクレデンシャルが最も左側に表示されます。
addAaguids=AAGUIDの追加
useDiscoveryEndpoint=ディスカバリー・エンドポイントを使用する
rdnLdapAttributeHelp=一般的なユーザーDNのRDN（最上位属性）として使用されるLDAP属性の名前。通常、Username LDAP属性と同じ属性ですが、必須ではありません。たとえば、Active Directoryでは、ユーザー名属性が「sAMAccountName」の場合、「cn」をRDN属性として使用するのが一般的です。
secretSizeHelp=生成されたシークレットのサイズ（バイト単位）
inputType=入力タイプ
regexClaimValues=正規表現クレーム値
displayOnClient=画面上にクライアントを表示する
certSubject=CERT_SUBJECT
requestObject.request\ only=リクエストのみ
oidcAttributeImporter=IDトークン、アクセストークン、またはユーザー・プロファイル・エンドポイントから返されたクレームセットに宣言されたクレームが存在する場合、指定されたユーザー・プロパティーまたは属性にインポートします。
requiredForLabel.admins=管理者のみ
disablePolicyConfirm=ポリシーを無効にすると、ユーザーとクライアントはそのポリシーにアクセスできなくなります。続行してよろしいですか？
noRolesAssociatedInstructions=このロールにロールを追加するには、「ロールを追加」をクリックします。
executorTypeTextHelpText=エグゼキューター・タイプのヘルプテキスト
validatingPublicKeyId=公開鍵IDの検証
relativeUserCreateDn=相対的なユーザー作成DN
ldapAdvancedSettingsDescription=このセクションには、LDAPサーバーとの連携を細かく制御するためのオプションが含まれています。
max-clients.label=レルムあたりの最大クライアント数
relativeUserCreateDnHelp=ユーザーが作成される「Users DN」からの相対DN。例えば、サブツリー検索スコープを使用する場合、「Users DN」の親とは異なるDNにユーザーを作成できます。
eventTypes.IDENTITY_PROVIDER_POST_LOGIN_ERROR.name=アイデンティティー・プロバイダーのログイン後エラー
noRolesAssociated=関連するロールがありません
clientPolicySearch=クライアントポリシーの検索
emptyStateMessage=属性グループがありません
clientScopeSuccess=スコープマッピングが更新されました
generateKeys=鍵を生成しますか？
claimHelp=トークン内で検索するクレームの名前。ドット（.）を使用してネストされたクレームを参照できます。例：'address.locality'。ドットを文字通りに使用するには、バックスラッシュ（\\.）でエスケープします。
allowed-protocol-mappers.label=許可されたプロトコル・マッパー
group=グループ
emptyAddClientScopesInstructions=追加するクライアント・スコープは残っていません
changeTypeIntro=選択された{{count}}個のクライアント・スコープが変更されます
addAssociatedRolesText=関連するロールを追加
secretSize=シークレットのサイズ
savePasswordError=パスワードの保存に失敗しました: {{error}}
client-updater-source-groups.label=グループ
kc.identity.authc.method=認証方法
keyProviderMapperNameHelp=管理者コンソールでリンクされたときにプロバイダーの名前を表示します。
maxTemporaryLockoutsHelp=ユーザーが永久にロックアウトされる前に許可される一時的なロックアウトの回数。
maxTemporaryLockouts=一時的なロックアウトの最大数
rowSaveBtnAriaLabel={{messageBundle}}の編集を保存
mapperTypeLdapAttributeMapper=hardcoded-ldap-attribute-mapper
providerIdHelp=プロバイダーID
deleteProviderError=プロバイダーの削除中にエラーが発生しました：{{error}}
otpPolicyPeriodErrorHint=値が1秒～2分の間である必要があります。
bruteForceStrategyHelp=「倍数」は、失敗回数が「{{failureFactor}}」の倍数である場合にのみ待機時間を増加させます。「線形」は、「{{failureFactor}}」から始まる新しい失敗ごとに待機時間を増加させます。
setAsDefaultAction=デフォルトアクションとして設定
overwritten=上書きされました
path=パス
mapperNameHelp=マッパーの名前
bruteForceStrategy=待機時間の増加方式
unlockUsersConfirm=一時的にロックアウトされたすべてのユーザーのロックが解除されます。
idpType.custom=カスタム
deletedErrorClientScope=クライアントスコープを削除できません： {{error}}
bruteForceStrategy.MULTIPLE=倍数
clientProfiles=クライアント・プロファイル
frontchannelLogoutUrlHelp=このレルムにログアウト・リクエストが送信された際に（end_session_endpoint経由）、クライアントが自身をログアウトするためのURL。指定がない場合は、ベースURLがデフォルトになります。
roleMappingUpdatedError=ロールマッピングをアップデートできませんでした： {{error}}
requiredAction=必須アクション
unlockAllUsers=ユーザーのロックの解除
noGroupsText=このユーザーはまだどのグループにも追加されていません。開始するにはグループに参加してください。
eventTypes.EXECUTE_ACTIONS_ERROR.name=アクション実行時のエラー
supportedLocalesHelp=このレルムでサポートするロケール。ユーザーはログイン画面でこれらのロケールのいずれかを選択します。
introduction=このページを離れ、このレルムを管理したい場合は、左側のナビゲーション・バーにある対応するメニュー項目をクリックしてください。
bruteForceStrategy.LINEAR=線形
requiredActionConfig={{name}}の設定
createClientPolicyError=次の理由でポリシーを作成できません： {{error}}
regexAttributeValues=正規表現属性値
samlCapabilityConfig=SAML機能
derFormatted=DER形式
editUSernameHelp=有効にするとユーザー名は編集可能になり、そうでない場合は読み取り専用になります。
emailVerification=Eメール検証
configSaveError=設定を保存できません：{{error}}
unitLabel=時間単位を選択してください
eventTypes.GRANT_CONSENT_ERROR.name=同意付与エラー
shortVerificationUri=デバイス認可フローのverification_uriの短縮化
authDefaultActionTooltip=有効にすると、新規ユーザーがこのアクションを割り当てる必要があります。
validateBindCredentials=LDAP管理者のパスワードを入力する必要があります。
samlAttributeToRole=属性が存在する場合は、ユーザーに指定されたレルムロールやクライアントロールを付与します。
dragInstruction=クリックしてドラッグすると優先順位が変わります
noTranslationsInstructions=まず翻訳を追加してください。
createClientProfileSuccess=新しいクライアントプロファイルが作成されました。
explainBearerOnly=これは特殊なOIDCタイプです。このクライアントはベアラートークンによるリクエストのみを受け付け、ブラウザーを使ったログインはできません。
scopeParameterPlaceholder=スコープ・パラメーターの選択
mapperTypeHardcodedLdapGroupMapper=hardcoded-ldap-group-mapper
removeConfirm_one=このグループを削除してもよろしいですか?
externalRoleToRole=Keycloakのアクセストークン内で外部ロールを探します。外部ロールが存在する場合、ユーザーに指定されたレルムロールまたはクライアントロールを付与します。
attributeGroup=属性グループ
flow.reset\ credentials=リセット・クレデンシャルズ・フロー
addProvider_one={{provider}}プロバイダーを追加
noPasswordPoliciesInstructions=このレルムに対してパスワードポリシーが一つもありません。まずポリシーを追加してください。
notFound=探しているリソースを見つけることができません
userLdapFilter=ユーザーLDAPフィルター
createPermissionSuccess=パーミッションが正常に作成されました。
providerUpdatedError={{error}}のためクライアント・ポリシーを更新できませんでした。
clearFile=このファイルをクリアする
allowCreate=作成を許可する
flowCreatedSuccess=フローが作成されました
addExecutionHelp=Executionは、リセットメールの送信からOTPの検証まで、広範囲にわたるアクションを持つことができます。
periodicChangedUsersSyncHelp=変更または新しく作成したLDAPユーザーのKeycloakへの定期的な同期が有効になっているか否か。
helpFileUpload=JSONファイルのアップロード
resetCredentialsSuccess=パスワードが正常にリセットされました。
votedToStatus={{status}}に投票しました
credentialResetConfirmText=このユーザーにメールを送信してもよろしいですか？
bindFlow=バインドフロー
mapperTypeMsadUserAccountControlManagerHelp=MSADに特化したマッパーです。MSADのユーザーアカウントの状態（アカウント有効、パスワード有効期限切れなど）をKeycloakのアカウントの状態に統合できます。そのために、MSADの属性のuserAccountControlとpwdLastSetを使用します。例えば、pwdLastSetが0の場合、Keycloakユーザーはパスワードの更新を求められます。別の例として、userAccountControlが514（アカウント無効）の場合、Keycloakユーザーも無効化されます。このマッパーは、LDAPユーザー認証からの例外コードも処理できます。
enableLdapv3Password=LDAPv3のパスワード変更拡張操作を有効にする
attestationPreference.direct=ダイレクト
cachePolicyHelp=このストレージ・プロバイダーのキャッシュポリシー。「DEFAULT」はグローバル・キャッシュのデフォルト設定を使用します。「EVICT_DAILY」は毎日指定された時刻にキャッシュを無効化します。「EVICT_WEEKLY」は毎週指定された曜日と時刻にキャッシュを無効化します。「MAX_LIFESPAN」はキャッシュ・エントリーの寿命をミリ秒単位で指定します。
deleteCredentialsError=ユーザー・クレデンシャルの削除中にエラーが発生しました: {{error}}
disableConfirmClient=このクライアントを無効にしてもよろしいですか？
tokenLifespan.never=無期限
linkAccount=アカウントのリンク
passMaxAge=max_ageの提供
disablePolicyConfirmTitle=ポリシーを無効化しますか？
validatorType=バリデーターのタイプ
orderChangeErrorUserFed=ユーザー・フェデレーション・プロバイダーの優先順位を変更できませんでした：{{error}}
added=追加されました
authnContextDeclRefs=AuthnContext DeclRefs
deleteExecutionError=Executionを削除できませんでした: {{error}}
hideInheritedRoles=継承されたロールを隠す
noRolesInstructions-client=このクライアントに対してロールが一つもありません。まずはロールを作成してください。
test=テスト
leaveGroup_one={{name}}のグループから離脱しますか？
custom=カスタム属性...
userAttributeValue=ユーザー属性値
eventTypes.OAUTH2_DEVICE_AUTH_ERROR.description=OAuth2デバイス認証エラー
eventTypes.CUSTOM_REQUIRED_ACTION_ERROR.description=カスタム必須アクションエラー
eventTypes.SEND_RESET_PASSWORD.name=リセットパスワードの送信
requiredFor=必須
deleteMappingConfirm=このマッピングを削除してもよろしいですか？
usersAddedError=ユーザーをグループに追加できません：{{error}}
evictionMinuteHelp=エントリーが無効になる時間（分）
clientScopesRolesScope=ロール・スコープ・マッピングが定義されていない場合、すべてのユーザーはこのクライアント・スコープを使用できます。ロール・スコープ・マッピングが定義されている場合、ユーザーは少なくとも1つのロールのメンバーである必要があります。
passwordPoliciesHelp.notUsername=パスワードはユーザー名と同一にできません。
createUserProviderSuccess=ユーザー・フェデレーション・プロバイダーが正常に作成されました。
clientAssertionAudienceHelp=クライアント・アサーションに使用するオーディエンス。デフォルト値はIDPのトークン・エンドポイントURLです。
keyTab=キータブ
saveEventListeners=イベントリスナーの保存
capabilityConfig=機能設定
home=ホーム
signatureAlgorithmHelp=ドキュメントに署名するために使用する署名アルゴリズム。「SHA1」ベースのアルゴリズムは非推奨であり、将来的に削除される可能性があります。「*_SHA1」の代わりに、より安全なアルゴリズムを使用することを推奨します。
placeholderText=1つを選択
allow-default-scopes.tooltip=オンの場合、新しく登録されたクライアントは、レルムのデフォルト・クライアント・スコープまたはレルムのオプション・クライアント・スコープに記載されているクライアント・スコープを持つことが許可されます。
clientPoliciesPolicies=クライアント・ポリシー・ポリシー
missingAttributes={{label}}はまだ定義されていません。{{label}}を追加するには、下のボタンをクリックしてください。キーペアにはキーと値が必要です。
testConnectionError=エラー！{{error}}
passwordPoliciesHelp.notContainsUsername=パスワードにユーザー名を含めることはできません。
firstBrokerLoginFlowAliasOverride=最初ログインフローのオーバーライド
reGenerateSigningExplain=クライアントの署名鍵を再作成すると、Keycloakのデータベースが更新されます。このクライアントを使用している場合は、新しいアダプターのダウンロードが必要になることがあります。
attributesHelp=トークンで検索する属性の名前と（正規表現の）値。設定された属性の名前は、SAML属性名と属性フレンドリー名フィールドで検索されます。ロールを設定するには、指定されたすべての属性の説明を満たす必要があります。属性が配列の場合、値は配列に含まれている必要があります。属性が複数回見つかった場合は、1つの一致で十分です。
roleAuthentication=ロール認証
eventTypes.REVOKE_GRANT_ERROR.name=付与取り消しエラー
authenticatedAccessPoliciesHelp=これらのポリシーは、クライアント登録サービスが認証後のリクエストによって呼び出された際に使用されます。これは、リクエストに初期アクセストークンまたはベアラートークンが含まれていることを意味します。
deleteClientPolicyProfileSuccess=プロファイルはポリシーから正常に削除されました。
eventTypes.CLIENT_LOGIN_ERROR.description=クライアント・ログイン・エラー
tokenDeleteConfirm=初期アクセストークン{{id}}を完全に削除してもよろしいですか？
flowCreateError=フローを作成できません： {{error}}
steps=ステップ
applyToResourceTypeFlagHelp=このパーミッションを、指定されたタイプのすべてのリソースに適用するかどうかを指定します。有効にした場合、このパーミッションは、指定されたリソースタイプのすべてのインスタンスに対して評価されます。
backchannelLogoutRevokeOfflineSessions=バックチャネル・ログアウト時にオフライン・セッションを無効化する
deletedErrorIdentityProvider=プロバイダーを削除できません。{{error}}
shortVerificationUriTooltipHelp=設定すると、この値がデバイス認可フローにおいてverification_uriとして返されます。このURIは{server-root}/realms/{realm}/deviceへリダイレクトする必要があります。
kerberosPrincipal=Kerberosプリンシパル
host-sending-registration-request-must-match.tooltip=オンの場合、クライアント登録サービスへのすべてのリクエストは、信頼されたホストまたはドメインから送信された場合にのみ許可されます。
managePriorityInfo=優先順位は、ユーザー検索を行う際のプロバイダーの順序です。行のハンドルをドラッグして優先順位を変更できます。
readTimeoutHelp=LDAP読み取りタイムアウト時間（ミリ秒）。このタイムアウト時間はLDAPの読み取り操作に適用されます。
standardTokenExchangeEnabled=標準トークン交換
enableRefreshRequestedTokenType=標準トークン交換におけるリフレッシュトークンの許可
providerUpdatedSuccess=クライアントポリシーが正常に更新されました。
createClientScopeError=クライアントスコープを作成できません。{{error}}
mapperAttributeName=属性名
pkceMethod=PKCEメソッド
publicKey=公開鍵
removeConfirmTitle_other=グループを削除しますか？
setToNowError=エラー! notBeforeを現在の日付と時刻に設定できませんでした： {{error}}
primaryColorHover=プライマリー・カラー・ホバー
backgroundColorHeader=背景色ヘッダー
iconColor=アイコンカラー
lightTextColor=ライトテキスト・カラー
inputBackgroundColor=入力背景色
inputTextColor=入力テキストカラー
eventTypes.CLIENT_INFO.name=クライアント情報
chooseResources=インポートしたいリソースを選択してください。
selectOne=オプションを選択する
noKeys=鍵がありません。
repeat=繰り返し
downloadType=ダウンロードの種類についての情報です。
clientDeletedSuccess=クライアントが削除されました。
addPostLogoutRedirectUri=有効なポスト・ログアウト・リダイレクトURIの追加
deleteClientSuccess=クライアント・プロファイルを削除しました。
deleteResourceWarning=以下のパーミッションは、他のリソースで使用されなくなった場合に削除されます。
descriptionLanding=これはユーザー・フェデレーションのランディング・ページの説明です。
batchSizeHelp=1回のトランザクションでLDAPからKeycloakにインポートされるLDAPユーザーの数
kerberosKeyTab=Kerberosキータブ
fineGrainOpenIdConnectConfigurationHelp=このセクションは、OpenID Connectプロトコルに関連するこのクライアントの詳細設定を設定するために使用されます。
eventTypes.UNREGISTER_NODE_ERROR.description=ノード登録解除エラー
webauthnIntro=この画面は何に使用されますか？
syncLDAPGroupsError={{error}}のため、データが同期できません。
oidcCibaGrant=OIDC CIBAグラント
ldapRolesDnHelp=このツリーのロールが保存されているLDAPのDN。例：'ou=finance,dc=example,dc=org'。
unlockError={{error}}によりユーザーのロックを解除できませんでした。
unlockSuccess=ユーザーのロックが正常に解除されました。
saveSuccess=ユーザー・フェデレーション・プロバイダーが正常に保存されました。
searchKey=検索キー
emptyClientScopesPrimaryAction=クライアント・スコープの追加
moveHere=ここへ移動
enableServiceAccount=サービス・アカウント・ロールを有効にする
eventTypes.REVOKE_GRANT_ERROR.description=付与無効化エラー
OVERWRITE=上書き
addStepTo={{name}}にステップを追加する
deleteAttributeConfirm={{attributeName}}属性とそれに対応する翻訳を完全に削除してもよろしいですか？
deleteConfirmExecutionMessage=Execution「<1>{{name}}</1>」を完全に削除してもよろしいですか？
offlineSessionMaxLimitedHelp=オフラインセッションの最大有効期間を有効にする
userGroupsRetrieveStrategyHelp=ユーザーのグループを取得する方法を指定します。「LOAD_GROUPS_BY_MEMBER_ATTRIBUTE」は、「member」属性に現在のユーザーが設定されているすべてのグループをLDAPクエリーで検索し、ユーザーのロールを取得します。「GET_GROUPS_FROM_USER_MEMBEROF_ATTRIBUTE」は、ユーザーの「memberOf」属性、または「Member-Of LDAP属性」で指定された別の属性から、ユーザーのグループ情報を取得します。
eventTypes.AUTHREQID_TO_TOKEN_ERROR.description=認証リクエストIDからトークンへの変換エラー
mapperTypeLdapAttributeMapperHelp=このマッパーは、syncRegistrationsが有効な場合にのみサポートされます。Keycloak に登録された新しいユーザーは、指定された属性のハードコードされた値を使用してLDAPに書き込まれます。
activeHelp=鍵を署名に使用できるかどうかを設定します。
createClientConditionSuccess=条件が正常に作成されました。
createSuccess=アイデンティティープロバイダーの作成に成功しました。
SSOSessionSettings=SSOセッションの設定
eventConfigSuccessfully=設定が正常に保存されました
moveTo=移動
emptyEventsInstructions=追加できるイベントタイプはもうありません。
selectATheme=テーマを選択する
permissionsList=パーミッション・リスト
themeColors=テーマカラー
defaults=デフォルトへのリセット
themeColorsLight=テーマカラー [light]
themeColorsDark=テーマカラー [dark]
themePreviewInfo=テーマの色をプレビューするには、現在のテーマをプレビューしたいテーマに設定する必要があるため、プレビューしたいテーマに自動的に切り替えました。
errorColor=エラーカラー
successColor=成功カラー
activeColor=アクティブカラー
backgroundColor=背景色
backgroundColorNav=背景色ナビゲーション
directAccessHelp=オンにすると、ダイレクト・アクセス・グラントのサポートが有効になります。これは、クライアントがユーザーのユーザー名/パスワードにアクセスし、それをアクセストークンと引き換えるためにKeycloakサーバーと直接交換できることを意味します。OAuth2の仕様においては、このクライアントに対する「リソース・オーナー・パスワード・クレデンシャル・グラント」のサポートを有効にすることに相当します。
moveGroupEmptyInstructions=サブグループはありません。「ここに移動」を選択すると、選択したグループがこのグループのサブグループとして移動します。
client-updater-source-groups.tooltip=チェックするグループの名前。クライアントを作成または更新するエンティティーが、指定されたグループの1つ以上に所属している場合、条件は真と評価されます。設定されたグループは、Keycloakのグループの単純名と完全に一致する必要があります。ここではグループ階層は考慮されていません。
favicon=ファビコン
client-updater-source-roles.tooltip=この条件は、クライアントの登録または更新のリクエストの際にチェックされます。クライアントを作成または更新するエンティティー（通常はユーザー）が、指定されたロールのメンバーである場合にtrueと評価されます。レルムロールを参照するには、「my_realm_role」のようにレルムロール名を使用できます。クライアントロールを参照するには、client_id.role_nameの形式を使用します。例えば、「my_client.my_client_role」は、クライアント「my_client」のクライアント・ロール「my_client_role」を指します。
tokenSaveError=初期アクセストークンを作成できません：{{error}}
deleteRole=このロールを削除
resetPasswordConfirmation=新しいパスワード（確認）
noTokensInstructions=初期アクセストークンが作成されていません。「作成」をクリックして初期アクセストークンを作成してください。
addMapperExplain=きめ細かい制御が必要な場合は、このクライアントでプロトコル・マッパーを作成できます。
addTranslationSuccess=成功しました。翻訳が追加されました。
linkColor=リンクカラー
linkColorHover=リンクカラー・ホバー
secondaryColor=セカンダリーカラー
backgroundColorAccent=背景色のアクセント
ldapAttributeValueHelp=登録時に新しいユーザーに追加されるLDAP属性の値。「foo」のような任意の値をハードコードすることもできますが、特別なトークンを使用することもできます。現在サポートされているトークンは「${RANDOM}」のみで、これはランダムに生成された文字列に置き換えられます。
roleObjectClasses=ロール・オブジェクト・クラス
deleteClientScope_other={{count}}個のクライアント・スコープを削除します。
displayDescriptionHintHelp=ユーザー向けのフォームを表示する際に、ツールチップとして使用されるテキスト。
advancedSettingsOpenid-connect=このセクションは、OpenID Connectプロトコルに関連するこのクライアントの詳細設定を設定するために使用されます。
user-clearEventsHelp=データベース内のすべてのユーザーイベントを削除します。
eventTypes.UPDATE_TOTP_ERROR.name=TOTP更新エラー
eventTypes.OAUTH2_DEVICE_CODE_TO_TOKEN.description=OAuth2のデバイスコードをトークンに変換
eventTypes.UPDATE_PASSWORD.description=パスワードの更新
permissionScopesHelp=このパーミッションは、一つ以上のスコープに適用されなければなりません。
clientOfflineSessionMax=クライアント・オフライン・セッション最大時間
searchForUserDescription=このレルムにはフェデレーション・プロバイダーが存在する可能性があります。「*」を検索することですべてのユーザーを表示できますが、システムの応答性能が低下する可能性があります。上記のユーザーを検索してください。
textColor=テキストカラー
backgroundImage=ログインの背景画像
primaryColor=プライマリーカラー
clientPolicyNameHelp=ポリシーの表示名
groupHelp=ユーザーを追加するグループ。パスを含むグループのフルパスを入力してください。例: /root-group/child-group。
eventTypes.IDENTITY_PROVIDER_RESPONSE_ERROR.description=アイデンティティー・プロバイダーの応答エラー
showInheritedRoles=継承されたロールを表示
noRoles-users=このユーザーのロールがありません
hmacGenerated=hmac-generated
emptyBuiltInMappersInstructions=すべての組み込みマッパーがこのクライアントに追加されました。
clientAccesstypeTooltip=条件が適用されるクライアントのアクセスタイプ。
admin=管理者
syncUsersError=ユーザを同期させることはできません：{{error}}
updateCibaError=CIBAポリシーを更新できませんでした: {{error}}
policyUrl=ポリシーURL
passwordPoliciesHelp.regexPattern=パスワードが1つ以上の定義済みJava正規表現パターンと一致する必要があります。
oAuthDPoP=トークン・リクエストに所有証明（DPoP）ヘッダーを要求する
serviceProviderEntityId=サービス・プロバイダー・エンティティーID
permissionPoliciesHelp=パーミッションに適用する必要があるすべてのポリシーを指定します。
userInfoResponseEncryptionContentEncryptionAlgorithm=ユーザー情報レスポンスの暗号化コンテンツ暗号化アルゴリズム
eventTypes.CLIENT_UPDATE.name=クライアント更新
notRepeat=繰り返さない
secretRotated=シークレットがローテーションされました
userFedDeleteConfirmTitle=ユーザー・フェデレーション・プロバイダーを削除しますか？
userCredentialsHelpTextLabel=ユーザー・クレデンシャルのヘルプテキスト
emptyClientScopes=このクライアントにはクライアントスコープが追加されていません。
rolesPermissionsHint=このロールの管理において、きめ細かいパーミッション設定を有効にするかどうかを決定します。無効にすると、現在設定されているすべてのパーミッションが削除されます。
whoCanEditHelp=有効にすると、ユーザーまたは管理者は属性を表示および編集できます。有効にしない場合は、ユーザーまたは管理者は属性への書き込み権限を持ちません。
invalidateRotatedSecret=ローテーションされたシークレットを無効にしますか？
emptyExecution=ステップがありません
importAdded_zero=レコードは追加されませんでした。
persistent=永続的
eventTypes.FEDERATED_IDENTITY_LINK_ERROR.description=フェデレーション・アイデンティティー・リンク・エラー
noDirectUsers=ダイレクト・ユーザーはいません
openIdConnectCompatibilityModesHelp=このセクションでは、古いOpenID Connect / OAuth 2アダプターとの後方互換性を確保するための設定を行います。特に、クライアントが古いバージョンのKeycloak / RH-SSOアダプターを使用している場合に便利です。
cibaIntervalHelp=CD（Consumption Device）がトークン・エンドポイントへ送信するポーリング・リクエストの最小待機時間（秒単位）。0に設定されている場合、CDはCIBAの仕様に従ってデフォルト値として5を使用する必要があります。
policyRolesHelp=「ロールの追加」をクリックして、このポリシーに承認済みのロールを追加します。ロールの「必須フィールド」チェックボックスをオンにすると、他のロールに関係なく、選択したロールがポリシーの評価時に必ず存在することを確認します。ポリシーに関連するすべてのロールのチェックを外しておくと、決定戦略が「肯定的」に設定されているのと同じになります。
disableConfirm=「{{name}}」を無効にしてもよろしいですか？
eventTypes.CUSTOM_REQUIRED_ACTION.description=カスタム必須アクション
validRedirectURIsHelp=ログインまたはログインの成功後にブラウザーがリダイレクト可能とする、有効なURIパターンを設定します。「http://example.com/*」のような単純なワイルドカードが使用可能です。相対パス、つまり「/my/relative/path/*」も指定可能です。相対パスはクライアントのルートURLを基準とします。または、未指定の場合は認証サーバーのルートURLが使用されます。SAMLでは、ログイン・リクエストに埋め込まれたコンシューマー・サービスのURLに依存している場合は、有効なURIパターンを設定する必要があります。
credentialsList=クレデンシャル・リスト
samlSignatureKeyNameHelp=署名されたSAML文書には、KeyName要素の署名鍵の識別情報が含まれています。Keycloak / RH-SSOカウンター・パーティーの場合は、KEY_IDを使用し、MS AD FSの場合はCERT_SUBJECTを使用します。他のオプションが動作しない場合はNONEをチェックして使用します。
noConsentsText=同意は、ユーザーが同意を必要とするように設定されているクライアントにアクセスしようとした場合にのみ、記録されます。その場合、ユーザーにはクライアントへのアクセスを許可するかどうかを求める同意ページが表示されます。
clientAssertionAudience=クライアント・アサーション・オーディエンス
eventTypes.UPDATE_TOTP.description=TOTPの更新
executorTypeSwitchHelpText=エグゼキューター・タイプのスイッチのヘルプテキスト
helpFileUploadClient=JSONファイルまたはXMLファイルをアップロードする
eventTypes.IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR.name=アイデンティティー・プロバイダー・リンク・アカウント・エラー
addedNodeFail=ノードを追加できませんでした：'{{error}}'
maxLength=最大長{{length}}
buildIn=ビルトイン
roleCreateExplain=これは説明です。
authnContextDeclRefsHelp=要求されたAuthnContext DeclRefsの順序付きリスト。
validateRealm=レルムを入力する必要があります。
resetCredentialsError=ユーザーのクレデンシャルをリセット中にエラーが発生しました：{{error}}
evictionDayHelp=エントリーが無効になる曜日。
actionTokens=アクション・トークン
addGroupsToGroupPolicy=グループポリシーにグループを追加する
deniedScopes=拒否されるスコープ
updateClientProfilesSuccess=クライアント・プロファイルの設定が更新されました。
flow.docker\ auth=Docker認証フロー
keySize=鍵サイズ
revokeClientScopes={{clientId}}に付与されたすべてのクライアント・スコープを取り消してもよろしいですか？
cibaBackhannelTokenDeliveryModes.poll=ポーリング
noSearchResultsInstructions=もう一度検索するには、上の検索バーをクリックしてください。
addMessageBundle=メッセージバンドの追加
eventTypes.REMOVE_TOTP_ERROR.description=TOTP削除エラー
samlEndpointsLabel=SAML 2.0サービス・プロバイダー・メタデータ
associatedRolesModalTitle={{name}}にロールを追加する
maxLifespanHelp=キャッシュ・エントリーの有効時間（ミリ秒）
expirationValueNotValid=値は1以上である必要があります。
passwordPolicyHintsEnabledHelp=書き込み可能なMSADにのみ適用されます。オンにすると、MSADユーザーのパスワード更新時にLDAP_SERVER_POLICY_HINTS_OID拡張機能が使用されます。つまり、「パスワード履歴」や「パスワードの最小有効期間」といった高度なMSADパスワードポリシーが適用されます。この拡張機能は、MSAD 2008 R2以降でのみ機能します。
flowUsedBy=このフローを使用する
updateFirstLogin=初回ログインの更新
columnDisplayDescription=説明文の表示
applyToResourceTypeFlag=リソースタイプに適用
groupObjectClassesHelp=グループ・オブジェクトのオブジェクト・クラス（複数可）。クラスが複数必要な場合は、カンマで区切ります。一般的なLDAP環境では「groupOfNames」のように指定します。Active Directoryでは通常「group」です。
filterByClients=クライアントによるフィルター
createPolicyOfType={{policyType}}ポリシーを作成する
flowUsedByDescription=このフローは次の{{value}}によって使用されます。
expireTimeHelp=ポリシーを許可しない日時を定義します。現在日時がこの値より前か、等しい場合にのみ許可されます。
noRolesInstructions-roles=このレルムにはまだロールが作成されていません。はじめにロールを作成してください。
ldapAttributeNameHelp=登録時に新しいユーザーに追加されるLDAP属性の名前。
scopePermissions.groups.manage-description=管理者がこのグループを管理できるかどうかを決定するポリシー
addedGroupMembership=グループ・メンバーシップを追加しました。
signingKeysConfig=署名鍵の設定
permit=許可
userInfoResponseEncryptionKeyManagementAlgorithm=ユーザー情報レスポンス暗号化鍵管理アルゴリズム
whoCanViewHelp=有効にすると、ユーザーまたは管理者は属性を表示できます。有効にしない場合は、ユーザーまたは管理者は属性にアクセスできません。
eventTypes.IDENTITY_PROVIDER_LOGIN.description=アイデンティティー・プロバイダー・ログイン
clientProfilesHelp=このポリシーに適用されたクライアント・プロファイル。
deleteClientPolicyError=ポリシーを削除できませんでした：{{error}}
selectAttribute=属性の選択
resourceAttributeHelp=リソースに関連付けられた属性。
product=プロダクト
whoWillAppearPopoverText=グループは階層構造になっています。「ダイレクト・メンバーシップ」を選択すると、ユーザーが参加している子グループのみが表示されます。祖先グループは表示されません。
membershipLdapAttribute=メンバーシップLDAP属性
effectiveRoleScopeMappingsHelp=選択したオプションのクライアントスコープ。このクライアントのアクセストークンを発行する際に使用されます。クライアント・アダプターから最初のOpenID Connect認証リクエストが送信される際に、これらのオプションのクライアント・スコープを適用するには、上記のOAuthスコープ・パラメーターの値を使用する必要があります。
availableIdPs=利用可能なアイデンティティー・プロバイダー
updateClientConditionSuccess=条件が正常に更新されました。
roleDeleteConfirmDialog=この操作により、ロール「{{selectedRoleName}}」が完全に削除されます。元に戻すことはできません。
addAssociatedRolesSuccess=関連ロールが追加されました。
updateTranslationSuccess=成功しました！翻訳を更新しました。
jwtX509HeadersEnabled=JWTにX.509ヘッダーを追加する
flow.firstBrokerLogin=初回ブローカー・ログイン・フロー
connectionAndAuthenticationSettings=接続と認証の設定
unlinkAccountConfirm=このアカウントを{{provider}}から永久にリンク解除してもよろしいですか？
x509CertificateHelp=PEM形式でエンコードされたX509証明書
lessThan={{value}}未満である必要があります。
userInfoResponseEncryptionKeyManagementAlgorithmHelp=ユーザー情報エンドポイントのレスポンスを暗号化する際の鍵管理に使用されるJWAアルゴリズム。このオプションは、ユーザー情報エンドポイントのレスポンスを暗号化する場合に必要です。空のままにした場合、ユーザー情報エンドポイントのレスポンスは暗号化されません。
inherent=継承
requestObject.request\ or\ request_uri=リクエストまたはリクエストURI
policyProvider.user=1 人以上のユーザーのセットがオブジェクトにアクセスできるようにするパーミッションの条件を定義します。
comparisonHelp=要求されたコンテキスト・クラスまたはステートメントを評価するために使用する比較方法を指定します。デフォルトは「Exact」です。
editableRowsTable=編集可能な行テーブル
saveRealmError=レルムを作成できませんでした：{{error}}
UPDATE_PROFILE=プロファイルの更新（UPDATE_PROFILE）
roleSaveError=ロールを保存できませんでした：{{error}}
reorder=並べ替える
queryExtensions=サポートされている拡張機能の問い合わせ
inputTypeCols=入力列
useRfc9068AccessTokenType=アクセストークンのヘッダータイプとして「at+jwt」を使用する
resourcesAndScopes=リソースとスコープ
keystoreHelp=キーファイルへのパス
subtree=サブツリー
groupDeleted_one=グループが削除されました。
exportWarningTitle=警告とともにエクスポートが完了しました。
duplicateFlow=重複するフロー
prompts.unspecified=未定義
backchannelLogoutSessionRequired=バックチャネル・ログアウト・セッションが必要です。
unlinkUsersSuccess=ユーザーのリンク解除が正常に完了しました。
groupObjectClasses=グループ・オブジェクト・クラス
requiredActionPlaceholder=アクションの選択
searchEventType=保存されたイベントの種類を検索する
eventTypes.CLIENT_UPDATE.description=クライアント更新
joinGroup=グループに参加
unlock=ロックの解除
protocolTypes.oid4vc=OpenID for Verifiable Credentials
protocolTypes.openid-connect=OpenID Connect
importRole=ロールのインポート
generatedIdTokenIsDisabled=ユーザーが選択されていない場合、生成されたIDトークンは無効になります。
advancedSettingsSaml=このセクションでは、このクライアントの詳細設定を設定します。
updateClientPolicySuccess=クライアントポリシーが更新されました。
executorName=名前
realmCertificateAlias=レルム証明書エイリアス
deleteClientError=プロフィールを削除できませんでした：{{error}}
testError=LDAPへの接続中にエラーが発生しました： '{{error}}'
bindTypeHelp=LDAPバインド操作中に使用される認証方式のタイプ。LDAPサーバーに送信されるほとんどのリクエストで使用されます。現在利用可能な認証方式は、「none」（匿名LDAP認証）または「simple」（バインド・クレデンシャル + バインド・パスワード認証）のみです。
testClusterFail={{failedNodes}}の可用性の検証に失敗しました。失敗したクラスタノードを修正するか登録解除して、もう一度試しください。
passwordPoliciesHelp.passwordBlacklist=ブラックリスト・ファイルにあるパスワードの使用を禁止します。
partialImportHeaderText=部分インポートを使用すると、以前にエクスポートされたJSONファイルからユーザー、クライアント、その他のリソースをインポートできます。
usersAdded_one={{count}}人のユーザーがグループに追加されました。
validatingPublicKeyIdHelp=上記で指定した検証用公開鍵の鍵IDを明示的に指定します。外部IDPで指定した鍵IDに関係なく、上記の鍵を常に使用する場合は空白のままにし、外部IDPの鍵IDが一致するかどうかを検証するためにのみ使用する場合は設定してください。
revocationDescription=これは、すべてのアクティブなセッションとアクセストークンを取り消す方法です。「Not before」を選択すると、その日付より前に発行されたトークンをすべて取り消すことができます。
eventExplain=イベントは、このレルムにおけるユーザーおよび管理者のイベントの記録です。これらのイベントの追跡を設定するには、<1>イベント設定</1>に移動してください。
includeClients=クライアントを含む
overrideActionTokensHelp=特定のアクションに対して、ユーザーが送信したアクション許可（パスワード忘れのメールなど）の有効期限が切れるまでの最大時間に関するデフォルト設定を上書きします。ユーザーが自分で作成したアクションには迅速に対応すると予想されるため、この値は短く設定することをお勧めします。
logoutSettings=ログアウト設定
eventTypes.UPDATE_CONSENT_ERROR.description=同意の更新エラー
clientScopesHelp=クライアントに事前に要求または割り当てられたスコープを使用して、ポリシーがクライアントに適用されるかどうかを判断します。条件は、OpenID Connect認証リクエストおよび／またはトークン・リクエスト中に評価されます。
searchByName=名前で検索
loadingRealms=レルムをロードしています…
eventTypes.SEND_RESET_PASSWORD_ERROR.description=リセットパスワードの送信エラー
addNewProvider=新規プロバイダーの追加
userAttributeValueHelp=ハードコードしたい値
policiesConfigType=以下を介して設定します。
scopePermissions.identityProviders.token-exchange-description=このアイデンティティー・プロバイダーによって作成された外部トークンとトークンを交換できるクライアントを決定するポリシー。
logoUrlHelp=クライアント・アプリケーションのロゴを参照する URL
bindCredentials=バインド・クレデンシャル
emptyMappersInstructions=マッパーを追加する場合は、下のボタンをクリックして、定義済みのマッパーを追加するか、新しいマッパーを構成してください。
clientRolesHelp=この条件は、指定されたクライアント・ロールのいずれかがクライアント上に存在するかどうかを確認し、ポリシーを適用するかどうかを判断します。この条件により、クライアント管理者はクライアント上に指定された名前のクライアント・ロールを作成し、そのクライアントのリクエストに特定のクライアント・ポリシーを適用することができます。この条件は、ほとんどのOpenID Connectリクエスト（認可リクエスト、トークン・リクエスト、イントロスペクション・リクエストなど）でチェックされます。
backchannelLogoutUrlHelp=このレルムに（end_session_endpoint経由で）ログアウト・リクエストが送信された際に、クライアントがログアウトするURLです。ログアウトは、OIDCバックチャネル・ログアウトの仕様で指定されているログアウト・トークンを送信することで実行されます。省略した場合、ログアウト・リクエストはKeycloak/RH-SSOアダプター固有の形式で、指定された「管理URL」（設定されている場合）に送信される可能性があります。「管理URL」が設定されていない場合、ログアウト・リクエストはクライアントに送信されません。
validateServerPrincipal=サーバー・プリンシパルを入力する必要があります。
advancedClaimToRole=すべてのクレームが存在する場合は、指定されたレルムロールまたはクライアント・ロールをユーザーに付与します。
eventTypes.PUSHED_AUTHORIZATION_REQUEST_ERROR.name=プッシュされた認可リクエストのエラー
tableTitle=属性グループ
eventTypes.EXECUTE_ACTION_TOKEN_ERROR.description=アクション・トークン実行時のエラー
windowsDomainQN=Windowsドメイン修飾名
permissionResources=このパーミッションが適用されるリソース・インスタンスを指定します。
eventTypes.INTROSPECT_TOKEN.name=イントロスペクト・トークン
generateKeysDescription=新しい鍵を生成する場合、秘密鍵を含むキーストアを自動的にダウンロードし、クライアント側に保存できます。Keycloakサーバーは証明書と公開鍵のみを保存し、秘密鍵は保存しません。
membershipUserLdapAttributeHelp=メンバーシップ属性タイプがUIDの場合にのみ使用されます。これは、メンバーシップ・マッピングに使用されるユーザーのLDAP属性の名前です。通常は「uid」です。例えば、「メンバーシップ・ユーザーLDAP属性」の値が「uid」で、LDAPグループが「memberUid: john」の場合、そのLDAPユーザーには「uid: john」という属性が付与されると想定されます。
useTruststoreSpiHelp=LDAP接続で、コマンドライン・オプションで設定されたトラストストアを使用してトラストストアSPIを使用するかどうかを指定します。「Always」は常に使用することを意味します。「Never」は使用しないことを意味します。Keycloakトラストストアが設定されていない場合でも、デフォルトのJava CA証明書または「javax.net.ssl.trustStore」プロパティーで指定された証明書が使用されることに注意してください。
testConnectionHint.withoutEmail=接続をテストするには、まず現在のユーザー({{userName}})の電子メールアドレスを設定する必要があります。
availableIdPsText=このレルムで設定されているすべてのアイデンティティー・プロバイダーがここにリストされます。ユーザー・アカウントを任意のIdPアカウントにリンクできます。
partialExportHeaderText=部分エクスポートを使用すると、レルム設定やその他の関連リソースをJSONファイルにエクスポートできます。
claimFilterValue=必須クレームの値
eventTypes.SEND_IDENTITY_PROVIDER_LINK_ERROR.name=アイデンティティー・プロバイダーのリンクの送信エラー
eventTypes.FEDERATED_IDENTITY_LINK.description=連携されたアイデンティティーのリンク
eventTypes.FEDERATED_IDENTITY_OVERRIDE_LINK.name=連携されたアイデンティティーのリンクの上書き
eventTypes.UPDATE_PROFILE_ERROR.description=プロファイルの更新エラー
allowed-protocol-mappers.tooltip=許可されたプロトコル・マッパー・プロバイダーのホワイトリスト。ホワイトリストに登録されていないプロトコル・マッパーを含むクライアントを登録しようとすると、登録リクエストは拒否されます。
userSessionAttributeHelp=ハードコードするユーザー・セッション属性の名前
webAuthnUpdateSuccess=正常にWebAuthnポリシーが更新されました。
onDragMove=アイテム{{item}}をドラッグしています。
validateRdnLdapAttribute=RDN LDAP属性を入力する必要があります。
clientRoles=クライアント・ロール
removeRoles=ロールの削除
tableOfGroups=グループのテーブル
policyProvider.role=1つ以上のロールのセットがオブジェクトにアクセスできるようにするパーミッションの条件を定義します。
webAuthnUpdateError={{error}}のため、WebAuthn ポリシーを更新できませんでした。
targetOptions.brokerId=BROKER_ID
searchUserByAttributeKeyAlreadyInUseError=属性キーはすでに使用されています。
executorClientAuthenticator=エグゼキューター・クライアント・オーセンティケーター
eventTypes.EXECUTE_ACTION_TOKEN.description=アクショントークンの実行
socialUserAttributeName=情報を保存するユーザー属性名。
resourceTypeHelp=このパーミッションが適用されるリソースタイプを指定します。
addedGroupMembershipError=グループメンバーシップの追加中にエラーが発生しました：{{error}}
exportAuthDetailsSuccess=認可の詳細が正常にエクスポートされました。
eventTypes.IDENTITY_PROVIDER_RESPONSE.description=アイデンティティー・プロバイダーのレスポンス
idpInitiatedSsoUrlNameHelp=IDP Initiated SSOを行う際にクライアントを参照するためのURLフラグメント名を設定します。空にするとIDP Initiated SSOは無効になります。ブラウザーから参照するURLは「{server-root}/realms/{realm}/protocol/saml/clients/{client-url-name}」になります。
useKerberosForPasswordAuthenticationHelp=ディレクトリー・サービス APIを使用してLDAPサーバーに対して認証する代わりに、Kerberosサーバーに対してユーザー名/パスワードを認証するには、Kerberosログイン・モジュールを使用します。
policyDeletedSuccess=ポリシーが正常に削除されました。
addClientProfileSuccess=新しいクライアント・プロファイルが追加されました。
anyAlgorithm=任意のアルゴリズム
emptyPolicies=ポリシーはありません
manageOrderTableAria=ログインページに記載されている順序でのアイデンティティー・プロバイダーのリスト
disableError=プロバイダーを無効化できません：{{error}}
eventTypes.FEDERATED_IDENTITY_OVERRIDE_LINK_ERROR.description=連携されたアイデンティティーのリンクの上書きエラー
eventTypes.OAUTH2_EXTENSION_GRANT.name=OAuth2拡張付与
eventTypes.OAUTH2_EXTENSION_GRANT_ERROR.description=OAuth2拡張付与エラー
userProviderSaveSuccess=ユーザー・フェデレーション・プロバイダーが正常に保存されました。
deleteError=プロバイダーを削除できません：{{error}}
residentKey.No=いいえ
deleteAttributeError=属性は削除されませんでした：{{error}}
policiesConfigTypes.formView=フォーム表示
selectGroup=グループの選択
addWebOrigins=Webオリジンの追加
clientScopeExplain=クライアント・スコープは、複数のクライアント間で共有されるプロトコル・マッパーとロールの共通セットです。
attributeNameHelp=アサーション内で検索する属性の名前。空白のままにして、代わりにユーザーフレンドリーな名前を指定することもできます。
frontchannelLogoutSessionRequired=フロントチャネル・ログアウトのセッションが必要
signServiceProviderMetadataHelp=プロバイダーSAMLメタデータの署名を有効/無効にします。
ignoreMissingGroups=欠落しているグループを無視する
requestObjectEncoding=リクエスト・オブジェクトのコンテンツの暗号化アルゴリズム
shouldBeANumber=数字である必要があります。
updateClientPoliciesSuccess=クライアント・ポリシーの設定が更新されました。
advancedSettings=高度な設定
eventTypes.FEDERATED_IDENTITY_OVERRIDE_LINK_ERROR.name=連携されたアイデンティティーのリンクの上書きエラー
updateOtpSuccess=OTPポリシーの更新に成功しました。
deleteProviderTitle=キープロバイダーを削除しますか？
authorizationSignedResponseAlg=認可レスポンス署名アルゴリズム
eventTypes.IDENTITY_PROVIDER_LINK_ACCOUNT.name=アイデンティティー・プロバイダー・リンク・アカウント
startTimeHelp=ポリシーを許可しない日時を定義します。現在日時がこの値より後か、等しい場合にのみ許可されます。
deleteMessageBundleSuccess=バンドルからメッセージを正常に削除しました。
chooseAMapperType=マッパーの種類を選択する
invalidateRotatedSuccess=ローテーションされたシークレットが正常に削除されました
syncLDAPGroupsSuccessful=データが正常に同期されました：{{result}}
upAttributeNameHelp=属性を一意に識別するために使用されるユーザー属性の名前。
updateSuccessIdentityProvider=プロバイダーは正常に更新されました。
reloadKeys=鍵をリロードする
useMetadataDescriptorUrl=メタデータ記述子URLを使用する
validateCustomUserSearchFilter=フィルターは括弧で囲む必要があります。例：(filter)
fineGrainSamlEndpointConfigHelp=このセクションでは、アサーション・コンシューマーとシングル・ログアウト・サービスの正確なURLを設定します。
eventTypes.FEDERATED_IDENTITY_LINK_ERROR.name=フェデレーション・アイデンティティー・リンク・エラー
updateClientProfilesError=クライアント プロファイルを更新できませんでした：{{error}}
eventTypes.CLIENT_INFO.description=クライアント情報
authorizationHelp=きめ細かい認可のサポートを有効/無効にします。
groupRemoveError=グループを削除中にエラーが発生しました：{error}
top-level-flow-type.basic-flow=基本フロー
requestObjectEncryption=リクエスト・オブジェクトの暗号化アルゴリズム
eventTypes.IMPERSONATE_ERROR.description=なりすましエラー
attributeFriendlyName=属性 [フレンドリー名]
emptyAddClientScopes=クライアント・スコープがありません。
changeTypeTo=タイプを変更する
logoutAllDescription=すべてのアクティブなセッションをサインアウトすると、このレルム内のアクティブなサブジェクトもサインアウトされます。
manageServiceAccountUser=詳細とグループのマッピングを管理するには、ユーザー名 <1>{{link}></1> をクリックします。
helpDisabled=ヘルプオフ
deleteResource=リソースを完全に削除しますか？
inputTypePlaceholder=入力プレースホルダー
eventTypes.OAUTH2_EXTENSION_GRANT.description=OAuth2拡張付与
eventTypes.OAUTH2_EXTENSION_GRANT_ERROR.name=OAuth2拡張付与エラー
addKerberosWizardTitle=Kerberos ユーザー・フェデレーション・プロバイダーを追加する
noPasswordPolicies=パスワードポリシーがありません
retry=更新して続行するにはここを押してください。
executorAuthenticatorMultiSelectHelpText=エグゼキューター・オーセンティケーターの複数選択のヘルプテキスト
useRealmRolesMappingHelp=trueの場合、LDAPロールマッピングはKeycloakのレルム・ロール・マッピングにマッピングされます。それ以外の場合は、クライアント・ロール・マッピングにマッピングされます。
testConnectionHint.withoutEmailAction=Eメールアドレスの設定
columnName=名前
use=使用
importKeys=鍵をインポートする
priorityHelp=プロバイダーの優先順位
identityProviderEntityId=アイデンティティー・プロバイダー・エンティティーID
useRealmRolesMapping=レルムロールマッピングを使用する
groupsPath=グループパス
deleteClientProfileConfirm=このアクションは、{{profileName}}プロファイルを永続的に削除します。これは元に戻すことができません。
deleteScopeConfirm=この認可スコープを削除すると、一部のパーミッションが影響を受けます。
credentialResetEmailError=失敗: {{error}}
eventTypes.FEDERATED_IDENTITY_OVERRIDE_LINK.description=連携されたアイデンティティーのリンクの上書き
encryptionAlgorithmHelp=SAML IDPがSAMLドキュメント、アサーション、またはIDの暗号化に使用する暗号化アルゴリズム。SAMLドキュメントの各部分を復号するための対応する復号鍵は、この設定されたアルゴリズムに基づいて選択され、暗号化（ENC）用のレルム鍵で利用可能である必要があります。アルゴリズムが設定されていない場合は、サポートされている任意のアルゴリズムが許可され、SAMLドキュメントで設定されたアルゴリズムに基づいて復号鍵が選択されます。
dropNonexistingGroupsDuringSyncHelp=このフラグがtrueの場合、LDAPからKeycloakへのグループ同期時に、LDAPにまだ存在するKeycloakグループのみを保持し、残りは削除されます。
regenerate=再生成
guiOrderHelp=GUI（同意ページのような）でのプロバイダーの順序を整数で指定します。
groupNameLdapAttributeHelp=グループ・オブジェクトでグループ名とRDNを表すために使用されるLDAP属性の名前。通常は「cn」です。この場合、典型的なグループ/ロールオブジェクトのDNは「cn=Group1,ouu=groups,dc=example,dc=org」のようになります。
userInfoResponseEncryptionContentEncryptionAlgorithmHelp=ユーザー情報レスポンスの暗号化におけるコンテンツ暗号化に使用されるJWAアルゴリズム。ユーザー情報レスポンスの暗号化キー管理アルゴリズムが指定されている場合、この値のデフォルトはA128CBC-HS256です。
roleObjectClassesHelp=グループ・オブジェクトのオブジェクト・クラス（複数可）。クラスが複数必要な場合は、カンマで区切ります。一般的なLDAP環境では「groupOfNames」のように指定します。Active Directoryでは通常「group」です。
attributeValueHelp=属性が持つ必要のある値。属性がリストの場合、値はリストに含まれている必要があります。
attributeDisplayName=表示名
mapperTypeFullNameLdapMapperHelp=LDAP の単一属性（通常は 'cn' 属性）からユーザーのフルネームを Keycloak データベースのUserModelのfirstName属性とlastName属性にマッピングするために使用されます。
enableClientSignatureRequiredExplain=「クライアント署名が必要」を有効にすると、このクライアントのアダプターが更新されます。このクライアント用に新しいアダプターをダウンロードする必要がある場合があります。このクライアント用の鍵を生成またはインポートする必要があります。そうしなければ、認証が機能しません。
policyUrlHelp=プロファイル・データの使用方法について読み込むために、依存パーティー・クライアントがエンドユーザーに提供するURL。
flowNameDescriptionHelp=新しいフローの名前の説明のヘルプテキスト
paginationHelp=LDAPサーバーがページネーションをサポートしているかどうか
scopePermissions.groups.view-members-description=管理者がこのグループのメンバーを表示できるかどうかを決定するポリシー。
frontchannelLogoutSessionRequiredHelp=フロントチャネル・ログアウトURLが使用されるときに、 sid（セッションID）およびiss（発行者）パラメーターがログアウト・リクエストに含まれるかどうかを指定します。
linkAccountTitle=アカウントを{{provider}}にリンクする
eventTypes.EXECUTE_ACTIONS.name=アクションの実行
frontchannelLogoutUrl=フロントチャンネル・ログアウトURL
isAccessTokenJWTHelp=アイデンティティー・プロバイダーから受信したアクセストークンはJWTであり、そのクレームはマッパーがアクセス可能になります。
accessTokens=アクセストークン
