storePassword=Contraseña del almacén
logoutServiceRedirectBindingURLHelp=URL de enlace SAML de redirección para la desconexión única del cliente. Puedes dejar esto en blanco si estás usando un enlace distinto.
themes=Temas
password=Contraseña
clientType=''OpenID connect'' permite a los clientes verificar la identidad del usuario final basado en la autenticación realizada por un servidor de autorización. ''SAML'' habilita la autenticación y autorización de escenarios basados en web incluyendo cross-domain y single sign-on (SSO) y utiliza tokens de seguridad que contienen afirmaciones para pasar información.
composite=Compuesto
clientSignature=Firma de Cliente requerida
waitIncrementSecondsHelp=Cuando se ha alcanzado el umbral de fallo, ¿cuanto tiempo debe estar un usuario bloqueado?
nodeHost=Host del nodo
mapperType=Tipo de asignador
quickLoginCheckMilliSeconds=Si ocurren errores de forma concurrente y muy rápida, bloquear al usuario.
edit=Editar
unspecified=no especificado
archiveFormat=Formato de Archivo
validatorDialogColNames.colName=Nombre de rol
associatedRolesText=Roles Asociados
certificateHelp=Certificado de cliente para validar los JWT emitidos por este cliente y firmados con la clave privada del cliente de tu almacén de claves.
credentialType=Tipo
defaultLocale=Idioma por defecto
clientIdHelp=El identificador del cliente registrado con el proveedor de identidad.
forcePostBindingHelp=Usar siempre POST para las respuestas
authorizationUrl=URL de autorización
roleName=Nombre de rol
httpPostBindingAuthnRequestHelp=Indica si AuthnRequest debe ser enviada usando HTTP-POST. Si no está activado se hace HTTP-REDIRECT.
securityDefences=Defensas de seguridad
accessTokenLifespanHelp=Tiempo máximo antes de que un token de acceso expire. Se recomienda que este valor sea corto en relación al tiempo máximo de SSO
includeInAccessToken.tooltip=¿Debería añadirse la identidad reclamada al token de acceso?
redirectURIHelp=La URI de redirección usada para configurar el proveedor de identidad.
idpInitiatedSsoRelayStateHelp=Estado de retransmisión que quieres enviar con una petición SAML cuando se inicia un SSO iniciado por el IDP
attestationPreference.none=ninguno
revocation=Revocación
clientDescriptionHelp=Indica la descripción del cliente. Por ejemplo ''My Client for TimeSheets''. También soporta claves para valores localizados. Por ejemplo\: ${my_client_description}
clientAuthenticator=Cliente autenticador
useEntityDescriptor=Importar metadatos desde un descriptor de entidad remoto de un IDP de SAML
logoutServiceRedirectBindingURL=URL de enlace SAML de redirección para la desconexión
loginActionTimeout=Tiempo máximo de acción en el inicio de sesión
idpInitiatedSsoRelayState=Estado de retransmisión de un SSO iniciado por el IDP
validatingX509Certs=Validando certificado X509
masterSamlProcessingUrl=URL principal de procesamiento SAML
key=Clave
validRedirectURIs=Patrón de URI válida para la cual un navegador puede solicitar la redirección tras un inicio o cierre de sesión completado. Se permiten comodines simples p.ej. ''http\://example.com/*''. También se pueden indicar rutas relativas p.ej. ''/my/relative/path/*''. Las rutas relativas generarán una URI de redirección usando el host y puerto de la petición. Para SAML, se deben fijar patrones de URI válidos si quieres confiar en la URL del servicio del consumidor indicada en la petición de inicio de sesión.
userInfoUrl=URL de información de usuario
assertionConsumerServicePostBindingURL=Assertion Consumer Service POST Binding URL
usermodel.clientRoleMapping.clientId.label=ID Cliente
identityProviders=Proveedores de identidad
clientId=ID Cliente
nameIdPolicyFormat=Formato de política NameID
idpInitiatedSsoUrlName=Nombre del fragmento de la URL para referenciar al cliente cuando quieres un SSO iniciado por el IDP. Dejando esto vacío deshabilita los SSO iniciados por el IDP. La URL referenciada desde el navegador será\: {server-root}/realms/{realm}/protocol/saml/clients/{client-url-name}
validatingX509CertsHelp=El certificado en formato PEM que debe usarse para comprobar las firmas.
importFile=Archivo de Importación
clientLoginTimeoutHelp=Tiempo máximo que un cliente tiene para finalizar el protocolo de obtención del token de acceso. Debería ser normalmente del orden de 1 minuto.
lastAccess=Último Acceso
ssoSessionIdle=Tiempo máximo que una sesión puede estar inactiva antes de que expire. Los tokens y sesiones de navegador son invalidadas cuando la sesión expira.
xFrameOptions=X-Frame-Options
prompts.none=ninguno
emailTheme=Tema de email
times.minutes=Minutos
nameIdFormatHelp=El formato de NameID que se usará para el título
forcePostBinding=Forzar enlaces POST
discoveryEndpoint=Importar metadatos desde un descriptor de un proveedor de identidad (IDP) remoto.
registerNodeManually=Registrar nodo manualmente
redirectURI=URI de redirección
signDocuments=Firmar documentos
tokenUrl=Token URL
consentRequired=Si está habilitado, los usuarios tienen que consentir el acceso del cliente.
notBefore=No antes de
editUsername=Editar nombre de usuario
lastRegistration=Último registro
requireSsl=Solicitar SSL
samlEntityDescriptor=Te permite cargar metadatos de un proveedor de identidad (IDP) externo de un archivo de coniguración o descargarlo desde una URL.
addIdpMapperName=Nombre del asignador.
wantAuthnRequestsSigned=Firmar AuthnRequests
usermodel.attr.tooltip=Nombre del atributo de usuario almacenado que es el nombre del atributo dentro del map UserModel.attribute.
export=Exportar
generateNewKeys=Generar nuevas claves
offlineSessionIdle=Inactividad de sesión sin conexión
backchannelLogout=Backchannel Logout
userRegistrationHelpText=Habilitar/deshabilitar la página de registro. Un enlace para el registro se mostrará también en la página de inicio de sesión.
revokeRefreshToken=Revocar el token de actualización
minimumQuickLoginWaitSeconds=Tiempo mínimo entre fallos de conexión rápidos
prompts.login=login
offlineSessionIdleHelp=Tiempo máximo inactivo de una sesión sin conexión antes de que expire. Necesitas usar un token sin conexión para refrescar al menos una vez dentro de este periodo, en otro caso la sesión sin conexión expirará.
forceNameIdFormatHelp=Ignorar la petición de sujeto NameID y usar la configurada en la consola de administración.
realmRoles=Roles de dominio
port=Puerto
adminThemeHelp=Selecciona el tema para la consola de administración.
nameIdFormat=Formato de NameID
validRedirectUri=URIs de redirección válidas
clientList=Clientes
userSession.modelNote.label=Nota sesión usuario
logoutServicePostBindingURL=URL de enlace SAML POST para la desconexión
assertionConsumerServicePostBindingURLHelp=SAML POST Binding URL for the client''s assertion consumer service (login responses).  You can leave this blank if you do not have a URL for this binding.
singleLogoutServiceUrl=URL de servicio de desconexión único
userAttribute=Atributo de usuario
roles=Roles
description=Descripción
validateSignatureHelp=Habilitar/deshabilitar la validación de firmas de proveedores de identidad (IDP) externos
clientSignatureHelp=¿Firmará el cliente sus peticiones y respuestas SAML? ¿Y deberían ser validadas?
title=Sesiones
keyPasswordHelp=Contraseña para acceder a la clave privada contenida en el archivo
verifyEmail=Verificar email
frontchannelLogout=Desonexión en primer plano (Front Channel)
formatOption=Formato
loginTheme=Tema de inicio de sesión
provider=Proveedor
providerId=ID
titleRoles=Roles de dominio
nodeReRegistrationTimeout=Tiempo de espera de re-registro de nodo
loginTimeout=Tiempo máximo de desconexión
accessTokenLifespan=Duración del token de acceso
setToNow=Fijar a ahora
signAssertionsHelp=¿Deberían firmarse las aserciones en documentos SAML? Este ajuste no es necesario si el documento ya está siendo firmado.
validateSignature=Validar firmas
headers=Cabeceras
fineGrainSamlEndpointConfig=Fine Grain SAML Endpoint Configuration
hours=Horas
encryptAssertions=Cifrar afirmaciones
keyAliasHelp=Alias del archivo de tu clave privada y certificado.
aliasHelp=El alias que identifica de forma única un proveedor de identidad, se usa también para construir la URI de redirección.
tokenClaimName.tooltip=Nombre del reclamo a insertar en el token. Puede ser un nombre completo como ''address.street''. En este caso, se creará un objeto JSON anidado.
maxFailureWaitSeconds=Espera máxima
userName=Usuario
clientProfileDescription=Descripción
ssoSessionMax=Tiempo máximo antes de que una sesión expire. Los tokens y sesiones de navegador son invalidados cuando una sesión expira.
protocolMapper=Protocolo.
times.hours=Horas
sslType.none=ninguno
webOrigins=Orígenes web
realm=Dominio
prompt=Prompt
username=Usuario
importConfig=Importar metadatos desde un descriptor de un proveedor de identidad (IDP) descargado.
bruteForceDetection=Detección de ataques por fuerza bruta
archiveFormatHelp=Formato de archivo Java keystore o PKCS12
keyAlias=Alias de clave
revokeRefreshTokenHelp=Si está activado los tokens de actualización solo pueden usarse una vez. En otro caso los tokens de actualización no se revocan cuando se utilizan y pueden ser usado múltiples veces.
storedTokensReadableHelp=Habilitar/deshabilitar si los nuevos usuarios pueden leer los tokens almacenados. Esto asigna el rol ''broker.read-token''.
none=ninguno
sslType.all=todas las peticiones
type=Tipo
httpPostBindingResponse=HTTP-POST enlace de respuesta
issuer=Emisor
seconds=Segundos
editUsernameHelp=Si está habilitado, el nombre de usuario es editable, en otro caso es de solo lectura.
id=ID
accountThemeHelp=Selecciona el tema para las páginas de gestión de la cuenta de usuario.
fullScopeAllowedHelp=Permite deshabilitar todas las restricciones.
canonicalizationHelp=Método de canonicalización para las firmas XML
sessions=Sesiones
includeAuthnStatement=Incluir AuthnStatement
jsonType.tooltip=El tipo de JSON que debería ser usado para rellenar la petición de JSON en el token. long, int, boolean y String son valores válidos
multivalued.tooltip=Indica si el atributo soporta múltiples valores. Si está habilitado, la lista de todos los valores de este atributo se fijará como reclamación. Si está deshabilitado, solo el primer valor será fijado como reclamación.
enableStartTLS=Habilitar StartTLS
enableStartTls=Habilitar StartTLS
addIdPMapper=Añadir asignador de proveedor de identidad
trustEmail=Confiar en el email
jsonType.label=Tipo JSON de reclamación
fullScopeAllowed=Permitir todos los ámbitos
push=Push
homeURL=URL por defecto para usar cuando el servidor de autorización necesita redirigir o enviar de vuelta al cliente.
masterSamlProcessingUrlHelp=Si está configurada, esta URL se usará para cada enlace al proveedor del servicio del consumidor de aserciones y servicios de desconexión únicos. Puede ser sobreescrito de forma individual para cada enlace y servicio en el punto final de configuración fina de SAML.
usermodel.attr.label=Atributo de usuario
claimJsonType=El tipo de JSON que debería ser usado para rellenar la petición de JSON en el token. long, int, boolean y String son valores válidos
forceAuthenticationHelp=Indica si el proveedor de identidad debe autenticar al presentar directamente las credenciales en lugar de depender de un contexto de seguridad previo.
testClusterAvailability=Probar disponibilidad del cluster
forceNameIdFormat=Forzar formato NameID
rememberMeHelpText=Muestra la casilla de selección en la página de inicio de sesión para permitir al usuario permanecer conectado entre reinicios del navegador hasta que la sesión expire.
sslType.external=peticiones externas
multiValued=Indica si el atributo soporta múltiples valores. Si está habilitado, la lista de todos los valores de este atributo se fijará como reclamación. Si está deshabilitado, solo el primer valor será fijado como reclamación.
addRole=Añadir rol
ssoServiceUrl=URL de servicio de conexión único (SSO)
clients=Clientes
clientName=Nombre
userRegistration=Registro de usuario
save=Guardar
wantAuthnRequestsSignedHelp=Indica si el proveedor de identidad espera recibir firmadas las AuthnRequest.
login=login
enabled=Habilitado
maxDeltaTimeSeconds=Reinicio del contador de errores
keyPassword=Contraseña de la clave
backchannelLogoutHelp=Does the external IDP support backchannel logout?
SSOSessionIdle=Sesiones SSO inactivas
ssoServiceUrlHelp=La URL que debe ser usada para enviar peticiones de autenticación (SAML AuthnRequest).
trustEmailHelp=Si está habilitado, el email recibido de este proveedor no se verificará aunque la verificación esté habilitada para el dominio.
supportedLocales=Idiomas soportados
maxFailureWaitSecondsHelp=Tiempo máximo que un usuario quedará bloqueado.
issuerHelp=El identificador del emisor para el emisor de la respuesta. Si no se indica, no se realizará ninguna validación.
titleSessions=Sesiones
clientNameHelp=Indica el nombre visible del cliente. Por ejemplo ''My Client''. También soporta claves para valores localizados. Por ejemplo\: ${my_client}
maxDeltaTimeSecondsHelp=¿Cuando se debe reiniciar el contador de errores?
adminURLHelp=URL a la interfaz de administración del cliente. Fija este valor si el cliente soporta el adaptador de REST. Esta API REST permite al servidor de autenticación enviar al cliente políticas de revocación y otras tareas administrativas. Normalment se fija a la URL base del cliente.
contentSecurityPolicy=Content-Security-Policy
rootUrl=URL raíz
rootURL=URL raíz añadida a las URLs relativas
storePasswordHelp=Contraseña para acceder al archivo
frontchannelLogoutHelp=Cuando está activado, la desconexión require una redirección del navegador hacia el cliente. Cuando no está activado, el servidor realiza una invovación de desconexión en segundo plano.
clientLoginTimeout=Tiempo máximo de autenticación
nodeReRegistrationTimeoutHelp=Indica el máximo intervalo de tiempo para que los nodos del cluster registrados se vuelvan a registrar. Si el nodo del cluster no envía una petición de re-registro a Keycloak dentro de este intervalo, será desregistrado de Keycloak
logoutServicePostBindingURLHelp=URL de enlace SAML POST para la desconexión única del cliente. Puedes dejar esto en blanco si estás usando un enlace distinto.
registrationEmailAsUsername=Email como nombre de usuario
scopes=Los ámbitos que se enviarán cuando se solicite autorización. Puede ser una lista de ámbitos separados por espacios. El valor por defecto es ''openid''.
signDocumentsHelp=¿Debería el dominio firmar los documentos SAML?
requireSslHelp=¿Es HTTP obligatorio? ''ninguna'' significa que HTTPS no es obligatorio para ninguna direcicón IP de cliente, ''peticiones externas'' indica que localhost y las direcciones IP privadas pueden acceder sin HTTPS, ''todas las peticiones'' significa que HTTPS es obligatorio para todas las direcciones IP.
userInfoUrlHelp=La URL de información de usuario. Opcional.
includeAuthnStatementHelp=¿Debería incluirse una declaración especificando el método y la marca de tiempo en la respuesta de inicio de sesión?
client-authenticator-type=Cliente autenticador usado para autenticar este cliente contra el servidor Keycloak
kc.realm.name=Dominio
download=Descargar
protocol=Protocolo
tokenClaimName.label=Nombre de reclamo del token
host=Host
create=Crear
clientSecret=Secreto de Cliente
from=De
httpPostBindingAuthnRequest=HTTP-POST para AuthnRequest
includeInAccessToken.label=Añadir al token de acceso
adminURL=URL de administración
settings=Ajustes
failureFactorHelp=Indica cuantos fallos se permiten antes de que se dispare una espera.
minutes=Minutos
storeTokensHelp=Habilitar/deshabilitar si los tokens deben ser almacenados después de autenticar a los usuarios.
singleLogoutServiceUrlHelp=La URL que debe usarse para enviar peticiones de desconexión.
userSession.modelNote.tooltip=Nombre de la nota almacenada en la sesión de usuario dentro del mapa UserSessionModel.note
clientsClientTypeHelp=''OpenID connect'' permite a los clientes verificar la identidad del usuario final basado en la autenticación realizada por un servidor de autorización. ''SAML'' habilita la autenticación y autorización de escenarios basados en web incluyendo cross-domain y single sign-on (SSO) y utiliza tokens de seguridad que contienen afirmaciones para pasar información.
storeTokens=Almacenar tokens
includeInIdToken.label=Añadir al token de ID
webOriginsHelp=Orígenes CORS permitidos. Para permitir todos los orígenes de URIs de redirección válidas añade ''+''. Para permitir todos los orígenes añade ''*''.
emailThemeHelp=Selecciona el tema para los emails que son enviados por el servidor.
logoutUrl=URL de desconexión
canonicalization=Método de canonicalización
storedTokensReadable=Tokens almacenados legibles
SSOSessionMax=Tiempo máximo sesión SSO
minimumQuickLoginWaitSecondsHelp=Cuanto tiempo se debe esperar tras un fallo en un intento rápido de identificación
mappers=Asignadores
waitIncrementSeconds=Incremento de espera
usermodel.prop.label=Propiedad
name-id-format=Formato de NameID
addNode=Añadir Nodo
credentials=Credenciales
certificate=Certificado
importClient=Importar Cliente
selectRole.label=Selecciona rol
prompts.consent=consentimiento
enableSSL=Habilitar SSL
general=General
failureFactor=Número máximo de fallos de inicio de sesión
signAssertions=Firmar aserciones
adminTheme=Tema de consola de administración
alias=Alias
tokens=Tokens
encryptAssertionsHelp=¿Deberían cifrarse las afirmaciones SAML con la clave pública del cliente usando AES?
clientSecretHelp=El secreto del cliente registrado con el proveedor de identidad.
validateSignatures=Habilitar/deshabilitar la validación de firma en respuestas SAML.
on=Activado
descriptionHelp=Indica la descripción del cliente. Por ejemplo ''My Client for TimeSheets''. También soporta claves para valores localizados. Por ejemplo\: ${my_client_description}
logoutUrlHelp=Punto de cierre de sesión para usar en la desconexión de usuarios desde un proveedor de identidad (IDP) externo.
times.seconds=Segundos
clear=Limpiar
serviceAccount=Permitir autenticar este cliente contra Keycloak y recibir un token de acceso dedicado para este cliente.
assertionConsumerServiceRedirectBindingURL=Assertion Consumer Service Redirect Binding URL
loginThemeHelp=Selecciona el tema para las páginas de inicio de sesión, OTP, permisos, registro y recordatorio de contraseña.
signatureAlgorithm=El algoritmo de firma usado para firmar los documentos.
multivalued.label=Valores múltiples
accountTheme=Tema de cuenta
forceAuthentication=Forzar autenticación
clustering=Clustering
rememberMe=Seguir conectado
category=Categoría
usermodel.prop.tooltip=Nombre del método de propiedad en la interfaz UserModel. Por ejemplo, un valor de ''email'' referenciaría al método UserModel.getEmail().
times.days=Días
user=Usuario
registeredClusterNodes=Registrar nodos de cluster
selectRole.tooltip=Introduce el rol en la caja de texto de la izquierda, o haz clic en este botón para navegar y buscar el rol que quieres.
