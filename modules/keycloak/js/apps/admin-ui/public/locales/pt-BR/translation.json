{
  "add": "Adicionar",
  "create": "Criar",
  "save": "Salvar",
  "continue": "Continuar",
  "remove": "Remover",
  "key": "Chave",
  "value": "Valor",
  "back": "Voltar",
  "export": "Exportar",
  "action": "Ações",
  "download": "Download",
  "clear": "Limpar",
  "edit": "Editar",
  "enabled": "Habilitado",
  "none": "Nenhum",
  "signOut": "Sign Out",
  "manageAccount": "Administrar a conta",
  "serverInfo": "Informação do servidor",
  "testConnection": "Testar conexão",
  "description": "Descrição",
  "type": "Tipo",
  "category": "Categoria",
  "priority": "Prioridade",
  "allTypes": "Todos os tipos",
  "manage": "Administração",
  "clients": "Clientes",
  "realmRoles": "Roles do Realm",
  "users": "Usuários",
  "sessions": "Sessões",
  "events": "Eventos",
  "mappers": "Mapeamentos",
  "permissions": "Permissões",
  "configure": "Configuração",
  "realmSettings": "Configurações do Realm",
  "authentication": "Autenticação",
  "identityProviders": "Provedores de identificação",
  "userFederation": "Federação de usuários",
  "settings": "Configurações",
  "details": "Detalhes",
  "times": {
    "seconds": "Segundos",
    "minutes": "Minutos",
    "hours": "Horas",
    "days": "Dias"
  },
  "attributes": "Atributos",
  "credentials": "Credenciais",
  "clientId": "ID do cliente",
  "clientName": "Nome",
  "id": "ID",
  "mapperType": "Tipo de mapeamento",
  "leave": "Sair",
  "password": "Senha",
  "passwordConfirmation": "Confirmação de senha",
  "temporaryPassword": "Temporária",
  "temporaryPasswordHelpText": "If enabled user is required to change password on next login",
  "protocol": "Protocolo",
  "copy": "Copiar",
  "clientAuthorization": "Autorização",
  "importClient": "Importar cliente",
  "adminURL": "URL do administrador",
  "formatOption": "Formato",
  "encryptAssertions": "Encriptar Assertions",
  "clientSignature": "Assinatura do cliente requerida",
  "roles": "Roles",
  "addClientScope": "Adicionar modelo de cliente",
  "fullScopeAllowed": "Permitir Escopo completo",
  "selectAUser": "Selecione um usuário",
  "client": "cliente",
  "evaluate": "Avaliar",
  "reevaluate": "Re-avaliar",
  "showAuthData": "Exibir dados da autorização",
  "unanimous": "Unânime",
  "affirmative": "Afirmativa",
  "consensus": "Consensual",
  "authScopes": "Autorização de escopos",
  "anyResource": "Qualquer recurso",
  "anyScope": "Qualquer escopo",
  "selectScope": "Selecione um escopo",
  "applyToResourceType": "Aplicar ao tipo de recurso",
  "contextualInfo": "Informação contextual",
  "contextualAttributes": "Atributos contextuais",
  "kc": {
    "realm": {
      "name": "Realm"
    }
  },
  "policyEnforcementMode": "Modo de execução da política",
  "policyEnforcementModes": {
    "ENFORCING": "Restritiva",
    "PERMISSIVE": "Permissiva"
  },
  "decisionStrategy": "Estratégia de decisão",
  "iconUri": "URI do ícone",
  "allowRemoteResourceManagement": "Administração remota de recursos",
  "resources": "Recursos",
  "resource": "Recurso",
  "scope": "Escopo",
  "owner": "Proprietário",
  "scopes": "Escopos",
  "policies": "Políticas",
  "createPermission": "Criar permissão",
  "identityInformation": "Informação de identidade",
  "resourceType": "Tipo de recurso",
  "createPolicy": "Criar política",
  "applyPolicy": "Aplicar política",
  "code": "Código",
  "logic": "Lógica",
  "logicType": {
    "positive": "Positiva",
    "negative": "Negativa"
  },
  "user": "Usuário",
  "clientList": "Clientes",
  "initialAccessToken": "Token de acesso inicial",
  "expires": "Expira em",
  "count": "Quantidade",
  "remainingCount": "Quantidade restante",
  "expiration": "Duração",
  "clientAuthentication": "Autenticação do cliente",
  "frontchannelLogout": "Front Channel Logout",
  "validRedirectUri": "URIs de redirecionamento válidas",
  "idpInitiatedSsoRelayState": "Estado de relay para SSO iniciado via IDP",
  "masterSamlProcessingUrl": "URL de processamento SAML principal",
  "nameIdFormat": "Formato do NameID",
  "forceNameIdFormat": "Forçar formato do NameID",
  "forcePostBinding": "Forçar Binding via POST",
  "includeAuthnStatement": "Incluir AuthnStatement",
  "signDocuments": "Assinar documentos",
  "signAssertions": "Assinar assertions",
  "canonicalization": "Método de Canonicalization ",
  "loginTheme": "Tema de login",
  "clientAuthenticator": "Autenticador do cliente",
  "clientSecret": "Secret do Cliente",
  "registrationAccessToken": "Token de acesso para registro",
  "revocation": "Revogação",
  "notBefore": "Não antes de",
  "setToNow": "Definir como agora",
  "addNode": "Adicionar nó",
  "push": "Enviar",
  "nodeReRegistrationTimeout": "Tempo limite para re-registro de nó",
  "registeredClusterNodes": "Nós de cluster registrados",
  "nodeHost": "Host",
  "lastRegistration": "Último registro",
  "testClusterAvailability": "Testar disponibilidade do cluster",
  "registerNodeManually": "Registrar nó manualmente",
  "fineGrainSamlEndpointConfig": "Configuração de endpoint para configuração fina do SAML ",
  "assertionConsumerServicePostBindingURL": "URL para conexão post para o serviço consumidor de Assertions",
  "assertionConsumerServiceRedirectBindingURL": "URL para conexão de redirecionamento do serviço consumidor de Assertions",
  "logoutServicePostBindingURL": "URL de conexão POST para o serviço de logout",
  "logoutServiceRedirectBindingURL": "URL de conexão para o redirecionamento do serviço de logout",
  "accessTokenLifespan": "Duração do Token de Acesso",
  "browserFlow": "Fluxo de browser",
  "directGrant": "Fluxo de Direct Grant",
  "certificate": "Certificado",
  "generateNewKeys": "Gerar novas chaves",
  "archiveFormat": "Formato do arquivo",
  "keyAlias": "Alias da chave",
  "keyPassword": "Senha da chave",
  "storePassword": "Salvar senha",
  "importFile": "Importar arquivo",
  "clientType": "'OpenID connect' permite aos Clientes verificarem a identidade do usuário final baseado na autenticação realizada por um servidor de Autorização. 'SAML' permite cenários de autenticação e autorização web-based incluindo cross-domain single sign-on (SSO) e utiliza tokens de segurança contendo assertions para trafegar informações.",
  "serviceAccount": "Permite autenticar este cliente no Keycloak e recuperar tokens de acesso dedicados para este cliente. Em termos da especificações OAuth2, habilita suporte para 'Client Credentials Grants' para este cliente.",
  "authorization": "Enable/Disable fine-grained authorization support for a client",
  "directAccess": "Habilita o suporte para concessões de acesso direto (Direct Access Grants), o que significa que o cliente tem acesso ao nome de usuário/senha e negocia diretamente com o servidor Keycloak pelo token de acesso. Em termos de especificações OAuth2, habilita suporte de \"Resource Owner Password Credentials Grant\" para este cliente.",
  "standardFlow": "Isto habilita a autenticação baseada em redirecionamento com código de autorização padrão do OpenID Connect. Em termos de especificações OpenID Connect ou OAuth2, isto habilita suporte ao 'Fluxo de Código de Autorização' para este cliente.",
  "implicitFlow": "Isto habilita suporte a autenticação baseada em redirecionamento sem código de autorização. Em tempos de especificações OpenID Connect ou OAuth2, isto habilita suporte do 'Fluxo Implícito' para este cliente.",
  "rootURL": "URL raiz adicionada à URLs relativas",
  "validRedirectURIs": "Padrão de URI válido para onde um navegador pode redirecionar depois de um login bem-sucedido ou sair. Wildcards simples são permitidos, por exemplo 'http://example.com/*'. Caminhos relativos podem ser especificados também, ex: /my/relative/path/*. Caminhos relativos são relativos à URL raiz do cliente, ou se nenhum for especificado a URL raiz do servidor é usado. Para SAML, é necessário definir padrões de URI válidos se você está contando com a URL do serviço consumidor incorporada com a solicitação de login.",
  "nameIdFormatHelp": "O formato de Name ID para utilizar como assunto.",
  "forceNameIdFormatHelp": "Ignora o NameID de assunto solicitado e utiliza o configurado no UI de administração.",
  "forcePostBindingHelp": "Sempre utilizar POST para respostas.",
  "includeAuthnStatementHelp": "Deve ser adicionado um statement especificando o método e timestamp nas respostas de login?",
  "signDocumentsHelp": "Devem os documentos SAML serem assinados pelo realm?",
  "signAssertionsHelp": "Devem as asserções dentro dos documentos SAML serem assinadas? Esta configuração não é necessária se o documento já está sendo assinado.",
  "signatureAlgorithm": "O algoritmo de assinatura a ser utilizado para assinar documentos.",
  "canonicalizationHelp": "Canonicalization Method para assinaturas XML.",
  "webOrigins": "Permitir origens CORS. Para permitir todas as URIs de redirecionamento de origem válidas adicionar '+'. Para permitir todas as origens adicionar '*'.",
  "homeURL": "URL padrão para utilizar quando o servidor de autenticação necessita redirecionar ou linkar para o cliente.",
  "adminURLHelp": "URL para a inteface administrativa do cliente. Defina este valor se o cliente suporta a API do adaptador REST. Esta API rest permite que o servidor de autenticação envie políticas de revogação e outras tarefas administrativas. Geralmente este valor é definido apontando para a URL base do cliente.",
  "clientHelp": "Select the client making this authorization request. If not provided, authorization requests would be done based on the client you are in.",
  "clientIdHelp": "O identificador do cliente registrado com o provedor de identificação.",
  "selectUser": "Select an user whose identity is going to be used to query permissions from the server.",
  "rolesHelp": "Select the roles you want to associate with the selected user.",
  "contextualAttributesHelp": "Any attribute provided by a running environment or execution context.",
  "applyToResourceTypeHelp": "Specifies if this permission would be applied to all resources with a given type. In this case, this permission will be evaluated for all instances of a given resource type.",
  "resourcesHelp": "Specifies that this permission must be applied to a specific resource instance.",
  "scopesSelect": "Define que esta permissões deve ser aplicada para um ou mais escopos.",
  "clientNameHelp": "Especifica o nome de exibição do cliente. Por exemplo 'Meu Cliente'. Também aceita chaves para valores localizados. Por exemplo: ${meu_cliente}",
  "descriptionHelp": "Descrição do modelo de cliente.",
  "loginThemeHelp": "Selecione o tema para páginas de login, OTP, grant, cadastro e recuperar senha.",
  "encryptAssertionsHelp": "Devem as asserções SAML serem encriptadas com a chave pública do cliente usando AES?",
  "clientSignatureHelp": "O cliente irá assinar os pedidos e respostas saml? E eles devem ser validados?",
  "expirationHelp": "Sets the expiration for events. Expired events are periodically deleted from the database.",
  "countHelp": "Especifica quantos clientes podem ser criados usando o token",
  "client-authenticator-type": "Autenticador de Cliente usado para autenticar este cliente ao servidor Keycloak",
  "registration-access-token": "O token de acesso para registro provê acesso aos cliente para o serviço de registro cliente.",
  "nodeReRegistrationTimeoutHelp": "Intervalo para especificar o tempo máximo para nós clientes de cluster registrados se re-registrarem. Se os nós do cluster não enviarem solicitações de re-registro dentro deste intervalo eles serão deregistrados do Keycloak.",
  "idpInitiatedSsoUrlName": "Nome do fragmento URL para referenciar o cliente quando você deseja um SSO iniciado por IDP. Deixar este campo vazio irá desabilitar SSO iniciado por IDP. A URL que você irá referenciar do seu browser será: {server-root}/realms/{realm}/protocol/saml/clients/{client-url-name}",
  "idpInitiatedSsoRelayStateHelp": "O estado de Relay que você deseja enviar com um pedido SAML quando você deseja realizar SSO iniciado por IDP.",
  "masterSamlProcessingUrlHelp": "Se configurado, esta URL será utilizada para todos os bindings do \"SP's Assertion Consumer\" e \"Single Logout Services\". Ela pode ser sobreescriva idnvidualmente para cada ligação e serviço na Configuração Detalhada do Endpoint SAML.",
  "accessTokenLifespanHelp": "Tempo máximo antes que um token de acesso expire. Recomenda-se que este valor seja menor em relação ao tempo de inativação do inativação do SSO.",
  "assertionConsumerServicePostBindingURLHelp": "URL de ligação SAML via post para as asserções de consumidor de serviços do cliente (respostas de login). Você pode deixar este campo em branco se você não tiver uma URL para esta ligação.",
  "assertionConsumerServiceRedirectBindingURLHelp": "URL de ligação SAML de redirecionamento para as asserções de consumidor de serviços do cliente (respostas de login). Você pode deixar este campo em branco se você não tiver uma URL para esta ligação.",
  "logoutServiceRedirectBindingURLHelp": "URL de ligação SAML de redirecionamento  para o serviço de logout único do cliente. Voce pode deixar este campo em branco s e estiver usando uma ligação diferente.",
  "frontchannelLogoutHelp": "Quando marcado, o logout requer um redirecionamento do browser para o cliente. Caso contrário o servidor executo uma invocação em background para o logout.",
  "browserFlowHelp": "Select the flow you want to use for browser authentication.",
  "directGrantHelp": "Select the flow you want to use for direct grant authentication.",
  "certificateHelp": "Certificado do cliente para validar JWT emitidos pelo cliente e assinados pela chave privada do cliente da sua keystore.",
  "archiveFormatHelp": "Keystore Java ou arquivo em formato PKCS12.",
  "keyAliasHelp": "Alias do arquivo para sua chave privada e certificado.",
  "keyPasswordHelp": "Senha para acessar a chave privada no certificado.",
  "storePasswordHelp": "Senha para acessar o arquivo em si.",
  "consentRequired": "Se habilitado os usuários devem consentir com o acesso ao cliente.",
  "import": "Import a JSON file containing authorization settings for this resource server.",
  "policyEnforcementModeHelp": "The policy enforcement mode dictates how policies are enforced when evaluating authorization requests. 'Enforcing' means requests are denied by default even when there is no policy associated with a given resource. 'Permissive' means requests are allowed even when there is no policy associated with a given resource. 'Disabled' completely disables the evaluation of policies and allow access to any resource.",
  "allowRemoteResourceManagementHelp": "Should resources be managed remotely by the resource server? If false, resources can only be managed from this Admin UI.",
  "resourceName": "An unique name for this resource. The name can be used to uniquely identify a resource, useful when querying for a specific resource.",
  "typeHelp": "The type of this resource. It can be used to group different resource instances with the same type.",
  "uris": "An URI that can also be used to uniquely identify this resource.",
  "scopesHelp": "Os escopos que serão enviados ao solicitar autorização. Pode ser uma lista de escopos separadas por espaço. Valor padrão é 'openid'.",
  "fullScopeAllowedHelp": "Permite a você desabilitar todas as restrições.",
  "resetActions": "Ações para reiniciar",
  "scopeName": "An unique name for this scope. The name can be used to uniquely identify a scope, useful when querying for a specific scope.",
  "policy-name": "The name of this policy.",
  "policy-description": "A description for this policy.",
  "policyDecisionStagey": "The decision strategy dictates how the policies associated with a given policy are evaluated and how a final decision is obtained. 'Affirmative' means that at least one policy must evaluate to a positive decision in order to the overall decision be also positive. 'Unanimous' means that all policies must evaluate to a positive decision in order to the overall decision be also positive. 'Consensus' means that the number of positive decisions must be greater than the number of negative decisions. If the number of positive and negative is the same, the final decision will be negative.",
  "applyPolicyHelp": "Specifies all the policies that must be applied to the scopes defined by this policy or permission.",
  "policyGroups": "Specifies which user(s) are allowed by this policy.",
  "policyRoles": "Especifica quais role(s) do *cliente* são permitidos por esta política.",
  "startTime": "Defines the time before which the policy MUST NOT be granted. Only granted if current date/time is after or equal to this value.",
  "expireTime": "Defines the time after which the policy MUST NOT be granted. Only granted if current date/time is before or equal to this value.",
  "policyCode": "The JavaScript code providing the conditions for this policy.",
  "logicHelp": "The logic dictates how the policy decision should be made. If 'Positive', the resulting effect (permit or deny) obtained during the evaluation of this policy will be used to perform a decision. If 'Negative', the resulting effect will be negated, in other words, a permit becomes a deny and vice-versa.",
  "permissionName": "The name of this permission.",
  "permissionDescription": "A description for this permission.",
  "permissionType": "Specifies that this permission must be applied to all resources instances of a given type.",
  "realmRolePrefix": "Prefixo do Realm Role",
  "name": "Nome do modelo de cliente. Deve ser único neste Realm.",
  "protocolHelp": "Qual configuração de protocolo SSO será provida por este modelo de cliente.",
  "prefix": "Um prefixo para cada Realm Role (opcional).",
  "multiValued": "Indica se um atributo suporta múltiplos valores. Se verdadeiro, então a lista de todos os valores desse atributo será definida como o claim. Se falso, então apenas o primeiro valor será utilizado.",
  "tokenClaimName": {
    "label": "Nome do Token Claim",
    "tooltip": "Nome do claim para inserir no token. Pode ser um nome completo (fully qualified) como 'address.street'. Neste caso, um objeto json aninhado será criado."
  },
  "claimJsonType": "Tipo JSON que deve ser utilizado para popular o claim json no token. Os valores válidos são Long, int boolean e String.",
  "protocolMapper": "Protocolo...",
  "createGroup": "Criar grupo",
  "members": "Membros",
  "email": "E-mail",
  "lastName": "Sobrenome",
  "firstName": "Primeiro nome",
  "associatedRolesText": "Roles associados",
  "title": "Autenticação",
  "addRole": "Adicionar Role",
  "roleName": "Nome do Role",
  "composite": "Composto",
  "usersInRole": "Usuários no role",
  "addUser": "Adicionar usuário",
  "userName": "Usuário",
  "join": "Participar",
  "groupMembership": "Grupos associados",
  "createdAt": "Criado em",
  "username": "Usuário",
  "emailVerified": "E-mail verificado",
  "requiredUserActions": "Ações necessárias do usuário",
  "impersonate": "Personificar",
  "verifyEmail": "Verificar e-mail",
  "consents": "Consentimentos",
  "identityProvider": "Provedor de identificação",
  "identityProviderLinks": "Links de provedores de identificação.",
  "revoke": "Revogar",
  "credentialType": "Tipo",
  "resetPassword": "Reiniciar senha",
  "showPasswordDataValue": "Valor",
  "hours": "Horas",
  "minutes": "Minutos",
  "seconds": "Segundos",
  "credentialResetConfirm": "Enviar e-mail",
  "temporaryLocked": "The user may have been locked due to failing to login too many times.",
  "emailVerifiedHelp": "Has the user's email been verified?",
  "requiredUserActionsHelp": "Require an action when the user logs in. 'Verify email' sends an email to the user to verify their email address. 'Update profile' requires user to enter in new personal information. 'Update password' requires user to enter in a new password. 'Configure OTP' requires setup of a mobile password generator.",
  "groups": "Groups user is a member of. Select a listed group and click the Leave button to leave the group.",
  "lastAccess": "Último acesso",
  "adminEvents": "Eventos de adminstração",
  "time": "Tempo",
  "eventType": "Tipo de evento",
  "ipAddress": "Endereço IP",
  "realm": "Realm",
  "resourcePath": "Path do recurso",
  "operationType": "Tipo de operação",
  "operationTypes": "Tipos de operações",
  "auth": "Autenticação",
  "representation": "Representação",
  "partialImport": "Importação parcial",
  "general": "Geral",
  "login": "Login",
  "themes": "Temas",
  "eventListeners": "Listeners de eventos",
  "eventListenersHelpText": "Configure what listeners receive events for the realm.",
  "adminEventsSettings": "Configuração de eventos de administração",
  "saveEvents": "Salvar eventos",
  "clearAdminEvents": "Limpar eventos administrativos",
  "includeRepresentation": "Incluir representação",
  "from": "Remetente",
  "host": "Host",
  "port": "Porta",
  "enableSSL": "Habilitar SSL",
  "enableStartTLS": "Habilitar StartTLS",
  "providers": "Provedores",
  "uiDisplayName": "Nome de exibição no UI",
  "providerId": "ID",
  "provider": "Provedor",
  "userRegistration": "Cadastro de usuário",
  "userRegistrationHelpText": "Habilita/desabilita a página de cadastro. Um link para a página de cadastro também será exibido na tela de login.",
  "rememberMe": "Lembrar me",
  "rememberMeHelpText": "Exibe um checkbox na página de login para permitir ao usuário continuar logado entre restarts do browser até que a sessão expire.",
  "registrationEmailAsUsername": "Email como nome de usuário",
  "editUsername": "Editar nome de usuário",
  "htmlDisplayName": "Nome de exibição HTML",
  "requireSsl": "SSL requerido",
  "sslType": {
    "all": "todas requisições",
    "external": "requisições externas",
    "none": "Nenhum"
  },
  "endpoints": "Endpoints",
  "accountTheme": "Tema para conta",
  "adminTheme": "Tema para UI de administração",
  "emailTheme": "Tema de e-mail",
  "SSOSessionIdle": "Sessão SSO inativa",
  "SSOSessionMax": "Sessão SSO Máxima",
  "offlineSessionIdle": "Sessão Offline Inativa",
  "loginTimeout": "Tempo máximo do Login",
  "loginActionTimeout": "Tempo limite da ação de Login",
  "revokeRefreshToken": "Revogar Token de Atualização",
  "accessTokenLifespanImplicitFlow": "Duração do token de acesso para fluxos Implícitos",
  "clientLoginTimeout": "Tempo limite para login do Cliente",
  "clientProfileDescription": "Descrição",
  "tokens": "Tokens",
  "supportedLocales": "Locais disponíveis",
  "defaultLocale": "Local padrão",
  "validatorDialogColNames": {
    "colName": "Nome do Role"
  },
  "validatorColNames": {
    "colConfig": "Configuração"
  },
  "eventTypes": {
    "IMPERSONATE": {
      "name": "Personificar"
    },
    "LOGOUT": {
      "name": "Logout"
    },
    "REGISTER": {
      "name": "Registro"
    },
    "RESET_PASSWORD": {
      "name": "Reiniciar senha"
    }
  },
  "deleteEvents": "Limpar eventos",
  "defaultRoles": "Roles padrão",
  "defaultGroups": "Grupos Padrão",
  "securityDefences": "Defesas",
  "headers": "Cabeçalhos",
  "bruteForceDetection": "Detecção de ataque de Força Bruta",
  "xFrameOptions": "X-Frame-Options",
  "contentSecurityPolicy": "Content-Security-Policy",
  "xContentTypeOptions": "X-Content-Type-Options",
  "failureFactor": "Falhas de login",
  "waitIncrementSeconds": "Incremento de Espera",
  "maxFailureWaitSeconds": "Espera máxima",
  "maxDeltaTimeSeconds": "Tempo para zerar falhas",
  "minimumQuickLoginWaitSeconds": "Espera mínima após Quick Login",
  "requireSslHelp": "É necessário SSL? 'Nunca' significa que HTTPS não é requerido para nenhum endereço IP cliente. 'Requisições externas' significa que localhost e IPs privados podem acessar sem HTTPS. 'Todas requisições' significa que HTTPS é requerido para todos os endereços IPs.",
  "accountThemeHelp": "Selecione o tema para as páginas de administração de conta do usuário.",
  "adminThemeHelp": "Selecione o tema para o UI de administração.",
  "emailThemeHelp": "Selecione o tema para os e-mail que são enviados pelo servidor.",
  "save-user-events": "If enabled login events are saved to the database which makes events available to the Admin and Account management UIs.",
  "save-admin-events": "If enabled admin events are saved to the database which makes events available to the Admin UI.",
  "admin-clearEvents": "Deletes all admin events in the database.",
  "includeRepresentationHelp": "Include JSON representation for create and update requests.",
  "failureFactorHelp": "Quantas falhas de login antes que a espera seja habilitada.",
  "waitIncrementSecondsHelp": "Quando a quantidade de falhas for alcançada, quanto tempo o usuário deve aguardar antes de tentar novamente?",
  "maxFailureWaitSecondsHelp": "Tempo máximo que um usuário deverá aguardar após uma falha de quick login.",
  "maxDeltaTimeSecondsHelp": "Quando o contador de falhas será resetado?",
  "quickLoginCheckMilliSeconds": "Se uma falha ocorre concorrentemente neste período, travar a conta do usuário.",
  "minimumQuickLoginWaitSecondsHelp": "Quanto tempo aguardar após uma falha de quick login.",
  "ssoSessionIdle": "Tempo que uma sessão pode ficar inativa antes de expirar. Tokens e sessões de navegador são invalidados quando uma sessão é expirada.",
  "ssoSessionMax": "Tempo máximo antes que uma sessão seja expirada. Tokens e sessões de navegador são invalidados quando uma sessão é expirada.",
  "offlineSessionIdleHelp": "Tempo que uma sessão offline pode ficar inativa antes de expirar. Você precisa utilizar um token de atualização offline pelo menos uma vez neste período, caso contrário a sessão offline será expirada.",
  "revokeRefreshTokenHelp": "Se habilitado os tokens de atualização podem ser utilizados somente uma vez. Caso contrário os tokens de atualização não são revogados quando utilizados e podem ser utilizados várias vezes.",
  "clientLoginTimeoutHelp": "Tempo máximo que um cliente tem para finalizar o procolo do token de acesso. Normalmente deve ser 1 minuto.",
  "editUsernameHelp": "Se habilitado, o campo nome de usuário é editável, senão será apenas leitura.",
  "flows": "Fluxos",
  "requiredActions": "Ações requeridas",
  "passwordPolicy": "Política de senha",
  "otpPolicy": "Política OTP",
  "otpType": "Tipo OTP",
  "policyType": {
    "totp": "Baseado em tempo",
    "hotp": "Baseado em contador"
  },
  "otpHashAlgorithm": "Algoritmo de hash OTP",
  "otpPolicyDigits": "Quantidade de dígitos",
  "otpPolicyPeriod": "Período de token OTP ",
  "initialCounter": "Contador inicial",
  "attestationPreference": {
    "none": "Nenhum"
  },
  "flow": {
    "browser": "Fluxo de browser",
    "registration": "Fluxo de registro",
    "direct grant": "Fluxo de Direct Grant"
  },
  "flowType": "Flow Type",
  "flow-type": {
    "basic-flow": "genérico",
    "form-flow": "formulário"
  },
  "addExecution": "Adicionar execução",
  "requirement": "Condição",
  "alias": "Alias",
  "flowTypeHelp": "What kind of form is it",
  "topLevelFlowType": "What kind of top level flow is it? Type 'client' is used for authentication of clients (applications) when generic is for users and everything else",
  "aliasHelp": "O alias é o identificador único de um provedor de identidade e também é utilizado para construir a uri de redirecionamento.",
  "otpTypeHelp": "totp is Time-Based One Time Password. 'hotp' is a counter base one time password in which the server keeps a counter to hash against.",
  "otpHashAlgorithmHelp": "What hashing algorithm should be used to generate the OTP.",
  "otpPolicyDigitsHelp": "How many digits should the OTP have?",
  "otpPolicyPeriodHelp": "How many seconds should an OTP token be valid? Defaults to 30 seconds.",
  "vendor": "Vendor",
  "connectionURL": "URL de conexão",
  "enableStartTls": "Habilitar StartTLS",
  "useTruststoreSpi": "Utilizar Truststore SPI",
  "connectionPooling": "Pooling de conexões",
  "bindType": "Tipo de autenticação",
  "bindDn": "Bind DN",
  "editMode": "Modo de edição",
  "usersDN": "Users DN",
  "usernameLdapAttribute": "Atributo LDAP para Username",
  "rdnLdapAttribute": "Atributo LDAP para RDN",
  "uuidLdapAttribute": "Atributo LDAP para UUID",
  "userObjectClasses": "Classes do objeto User",
  "searchScope": "Escopo de pesquisa",
  "pagination": "Paginação",
  "batchSize": "Tamanho do lote",
  "periodicFullSync": "Syncronização completa periódica",
  "fullSyncPeriod": "Período",
  "periodicChangedUsersSync": "Sincronização periódica de usuários alterados",
  "changedUsersSyncPeriod": "Período",
  "kerberosIntegration": "Integração com Kerberos",
  "allowKerberosAuthentication": "Permitir autenticação Kerberos",
  "useKerberosForPasswordAuthentication": "Utilizar Kerberos para autenticação via senha",
  "trustEmail": "Confiar no e-mail recebido",
  "requiredSettings": "Configurações obrigatórias",
  "kerberosRealm": "Realm do Kerberos",
  "serverPrincipal": "Principal do servidor",
  "debug": "Debug",
  "allowPasswordAuthentication": "Permitir autenticação via senha",
  "testAuthentication": "Testar autenticação",
  "ldapFilter": "Filtro do LDAP",
  "selectRole": {
    "label": "Selecione o Role",
    "tooltip": "Entre com o role na caixa à esquerda, ou clique neste botão para navegar e selecionar o role desejado."
  },
  "vendorHelp": "LDAP vendor (provedor)",
  "consoleDisplayConnectionUrlHelp": "Conexão URL para o seu servidor LDAP",
  "bindCredentialsHelp": "Senha do administrador do LDAP",
  "editModeLdapHelp": "READ_ONLY é um LDAP somente leitura. WRITABLE significa que os dados serão sicronizados de volta para o LDAP on demand. UNSYNCED significa que os dados do usuário serão importados, mas não sicronizados de volta para o LDAP.",
  "fullSyncPeriodHelp": "Intervalo para a sincronização completa em segundos.",
  "changedUsersSyncHelp": "Intervalo para sincronização dos usuários alterados ou novos do LDAP em segundos.",
  "trustEmailHelp": "Se habilitado então o e-mail provido por este provedor não será verificado mesmo que a verificação esteja habilitada para este realm.",
  "debugHelp": "Habilita/Desabilita log de nível debug para a saída padrão para Krb5LoginModule.",
  "allowPasswordAuthenticationHelp": "Habilita/Desabilita a possibilidade de autenticação via usuário/senha contra o banco Kerberos",
  "updateFirstLoginHelp": "Atualizar o perfil no primeiro login",
  "addIdPMapper": "Adicionar mapeamento de provedor de identificação",
  "redirectURI": "URI de redirecionamento",
  "ssoServiceUrl": "URL de serviço do Single Sign On",
  "singleLogoutServiceUrl": "URL de serviço de Single Logout",
  "nameIdPolicyFormat": "Política de formato NameID",
  "unspecified": "Não especificado",
  "httpPostBindingResponse": "Responder com HTTP-POST",
  "httpPostBindingAuthnRequest": "Utilizar HTTP-POST binding para AuthnRequest",
  "wantAuthnRequestsSigned": "Esperar AuthnRequests assinados",
  "forceAuthentication": "Forçar autenticação",
  "validatingX509Certs": "Validar certificados X509",
  "authorizationUrl": "URL de autorização",
  "tokenUrl": "URL do Token",
  "logoutUrl": "URL de logout",
  "backchannelLogout": "Backchannel Logout",
  "userInfoUrl": "URL de informações do usuário",
  "issuer": "Emissor",
  "prompt": "Prompt",
  "prompts": {
    "none": "Nenhum",
    "consent": "Consentimento",
    "login": "Login"
  },
  "validateSignature": "Validar assinaturas",
  "storeTokens": "Salvar Tokens",
  "storedTokensReadable": "Leitura de tokens salvos",
  "firstBrokerLoginFlowAlias": "Fluxo do primeiro login",
  "postBrokerLoginFlowAlias": "Fluxo pós login",
  "userAttribute": "Atributo do usuário",
  "redirectURIHelp": "A url de redirecionamento para usar quando da configuração do provedor de identidade.",
  "clientSecretHelp": "A senha do cliente registrado junto ao provedor de identificação.",
  "discoveryEndpoint": "Importar metadata de um descritor de descoberta remoto do IDP.",
  "importConfig": "Importar metadata fr um descritor de descoberta baixado do IDP.",
  "logoutUrlHelp": "'End session endpoint' para utilizar para realizar logour dos usuários do IDP externo.",
  "backchannelLogoutHelp": "O IDP externo suporta logou via backchannel?",
  "userInfoUrlHelp": "A Url de informações de usuário. Opcional.",
  "issuerHelp": "O identificador de emissor para o emissor da resposta. Se não for provido nenhuma validação será realizada.",
  "validateSignatureHelp": "Habilita/Desabilita a validação de assinatura de IDP externo.",
  "storeTokensHelp": "Habilita/desabilita se os tokens deve ser guardados depois de autenticar os usuários.",
  "storedTokensReadableHelp": "Habilita/desabilita se novos usuários podem ler quaisquer tokens salvo. Isto irá adicionar o role broker.read-token.",
  "firstBrokerLoginFlowAliasHelp": "Alias do fluxo de autenticação que será invocado depois do primeiro login com este provedor de identificação. O termo 'Primeiro Login' significa que ainda não existe uma conta no Keycloak ligada a esta conta autenticada neste provedor.",
  "useEntityDescriptor": "Importar metadata de um descritor de entidade IDP SAML remoto.",
  "samlEntityDescriptor": "Permite que vocÊ carregue metadata de IDP externos de um arquivo de configuração ou baixando a partir de uma URL.",
  "ssoServiceUrlHelp": "A Url que deve ser utilizada para enviar solicitações de autenticação (SAML AuthnRequest).",
  "singleLogoutServiceUrlHelp": "A Url que deve ser utilizada para enviar solicitações de logout.",
  "httpPostBindingAuthnRequestHelp": "Indica se o AuthnRequest deve ser enviado utilizando HTTP-POST. Se falso, HTTP-REDIRECT será utilizado.",
  "wantAuthnRequestsSignedHelp": "Indicate se um provedor de identificação deve experar um AuthnRequest assinado.",
  "forceAuthenticationHelp": "Indica se um provedor de identificação deve autenticar o apresentador diretamente ao invés de confiar em um contexto de segurança anterior.",
  "validateSignatures": "Habilita/Desabilita validação de assinaturas de respostas SAML.",
  "validatingX509CertsHelp": "O certificado em formato PEM que deve ser usado para verificar assinaturas.",
  "addIdpMapperName": "Nome do mapeamento",
  "selectARole": "Selecione um role",
  "usermodel": {
    "prop": {
      "label": "Propriedade",
      "tooltip": "Nome do método da propriedade na interface UserModel. Por exemplo, o valor 'email' iria referenciar o método UserModel.getEmail() ."
    },
    "attr": {
      "label": "Atributo do usuário",
      "tooltip": "Nome do atributo do usuário que é uma chave de atributo no mapa UserModel.attribute."
    },
    "clientRoleMapping": {
      "clientId": {
        "label": "ID do cliente",
        "tooltip": "ID do cliente para mapeamentos de roles"
      },
      "rolePrefix": {
        "label": "Prefixo para o role de Cliente",
        "tooltip": "Um prefixo para cada role do cliente (opcional)"
      }
    },
    "realmRoleMapping": {
      "rolePrefix": {
        "label": "Prefixo do Realm Role",
        "tooltip": "Um prefixo para cada Realm Role (opcional)."
      }
    }
  },
  "userSession": {
    "modelNote": {
      "label": "Nota da sessão de usuário",
      "tooltip": "Nome da nota de sessão do usuário salva no mapa UserSessionModel.note."
    }
  },
  "multivalued": {
    "label": "Múltiplos valores",
    "tooltip": "Indica se um atributo suporta múltiplos valores. Se verdadeiro, então a lista de todos os valores desse atributo será definida como o claim. Se falso, então apenas o primeiro valor será utilizado."
  },
  "jsonType": {
    "label": "Tipo JSON do Claim",
    "tooltip": "Tipo JSON que deve ser utilizado para popular o claim json no token. Os valores válidos são Long, int boolean e String."
  },
  "includeInIdToken": {
    "label": "Adicionar ao token de ID",
    "tooltip": "O claim deve ser adicionado ao token de ID?"
  },
  "includeInAccessToken": {
    "label": "Adicionar ao token de acesso",
    "tooltip": "O claim deve ser adicionado ao token de acesso?"
  },
  "includeInUserInfo": {
    "label": "Adicionar à informação do usuário",
    "tooltip": "O claim deve ser adicionado à informação do usuário?"
  },
  "name-id-format": "Formato do NameID",
  "titleAuthentication": "Autenticação",
  "titleEvents": "Eventos",
  "titleRoles": "Roles do Realm",
  "titleUsers": "Usuários",
  "titleSessions": "Sessões",
  "authenticationAliasHelp": "Name of the configuration",
  "authenticationFlowTypeHelp": "What kind of form is it",
  "scopeNameHelp": "Nome do modelo de cliente. Deve ser único neste Realm.",
  "scopeDescriptionHelp": "Descrição do modelo de cliente.",
  "clientDescriptionHelp": "Especifica a descrição do cliente. Por exemplo 'Meu cliente para TimeSheets'. Também aceita chaves para valores localizados. Por exemplo: ${meu_cliente_descricao}",
  "clientsClientTypeHelp": "'OpenID connect' permite aos Clientes verificarem a identidade do usuário final baseado na autenticação realizada por um servidor de Autorização. 'SAML' permite cenários de autenticação e autorização web-based incluindo cross-domain single sign-on (SSO) e utiliza tokens de segurança contendo assertions para trafegar informações.",
  "clientsClientScopesHelp": "The scopes associated with this resource."
}
