{
  "add": "Добавить",
  "create": "Создать",
  "save": "Сохранить",
  "continue": "Продолжить",
  "remove": "Удалить",
  "key": "Ключ",
  "value": "Значение",
  "back": "Назад",
  "export": "Экспорт",
  "action": "Действие",
  "download": "Скачать",
  "clear": "Очистить",
  "on": "Вкл",
  "edit": "Редактировать",
  "enabled": "Включено",
  "disable": "Отключено",
  "none": "нет",
  "signOut": "Выход",
  "manageAccount": "Управление учетной записью",
  "serverInfo": "Информация о сервере",
  "testConnection": "Тест соединения",
  "description": "Описание",
  "type": "Тип",
  "category": "Категория",
  "priority": "Приоритет",
  "allTypes": "Все типы",
  "manage": "Управление",
  "clients": "Клиенты",
  "realmRoles": "Роли Realm",
  "users": "Пользователи",
  "sessions": "Сессии",
  "events": "События",
  "mappers": "Сопоставления",
  "permissions": "Разрешения",
  "configure": "Конфигурация",
  "realmSettings": "Настройки Realm",
  "authentication": "Аутентификация",
  "identityProviders": "Поставщики идентификации",
  "userFederation": "Федерация пользователей",
  "settings": "Настройки",
  "details": "Детали",
  "Sunday": "Воскресенье",
  "Monday": "Понедельник",
  "Tuesday": "Вторник",
  "Wednesday": "Среда",
  "Thursday": "Четверг",
  "Friday": "Пятница",
  "Saturday": "Суббота",
  "times": {
    "seconds": "секунд",
    "minutes": "минут",
    "hours": "часов",
    "days": "дней"
  },
  "attributes": "Атрибуты",
  "credentials": "Учетные данные",
  "clientId": "ID клиента",
  "clientName": "Имя",
  "id": "ID",
  "mapperType": "Тип сопоставления",
  "leave": "Покинуть",
  "password": "Пароль",
  "passwordConfirmation": "Подтверждение пароля",
  "temporaryPassword": "Временный",
  "temporaryPasswordHelpText": "Если включено, пользователю необходимо сменить пароль при следующем входе",
  "disabledFeatures": "Отключенные функции сервера",
  "protocol": "Протокол",
  "copy": "Копировать",
  "clientAuthorization": "Авторизация",
  "importClient": "Импортировать клиента",
  "webOrigins": "Web источники",
  "adminURL": "URL администрирования приложения",
  "formatOption": "Формат",
  "encryptAssertions": "Зашифровка утверждений",
  "clientSignature": "Подпись клиента обязательна",
  "keys": "Ключи",
  "roles": "Роли",
  "addClientScope": "Добавить шаблон клиента",
  "fullScopeAllowed": "Полный доступ к областям",
  "selectAUser": "Выберите пользователя",
  "client": "клиент",
  "evaluate": "Оценка",
  "reevaluate": "Переоценить",
  "showAuthData": "Показать авторизационные данные",
  "unanimous": "Единогласная",
  "affirmative": "Утвердительная",
  "consensus": "Консенсусная",
  "authScopes": "Области авторизации",
  "anyResource": "Любой ресурс",
  "anyScope": "Любая область",
  "selectScope": "Выберите область",
  "applyToResourceType": "Применить к типу ресурса",
  "contextualInfo": "Контекстная информация",
  "contextualAttributes": "Контекстные аттрибуты",
  "kc": {
    "realm": {
      "name": "Realm"
    }
  },
  "policyEnforcementMode": "Режим применения политик",
  "policyEnforcementModes": {
    "ENFORCING": "Обязывающая",
    "PERMISSIVE": "Разрешающая"
  },
  "decisionStrategy": "Стратегия решения",
  "iconUri": "Иконка URI",
  "allowRemoteResourceManagement": "Удаленное управление ресурсами",
  "resources": "Ресурсы",
  "resource": "Ресурс",
  "scope": "Область",
  "owner": "Владелец",
  "scopes": "Области",
  "policies": "Политики",
  "createPermission": "Создать полномочия",
  "identityInformation": "Идентичность данных",
  "resourceType": "Тип ресурса",
  "createPolicy": "Создать политику",
  "applyPolicy": "Применить политику",
  "month": "Месяц",
  "hour": "Час",
  "minute": "Минута",
  "code": "Код",
  "logic": "Логика",
  "logicType": {
    "positive": "Позитивная",
    "negative": "Негитивная"
  },
  "user": "Пользователь",
  "clientList": "Клиенты",
  "initialAccessToken": "Токен первичного доступа",
  "created": "Создано",
  "lastUpdated": "Обновлено",
  "expires": "Истекает",
  "count": "Счетчик",
  "remainingCount": "Счетчик остатка",
  "expiration": "Истечение",
  "clientAuthentication": "Аутентификация клиента",
  "frontchannelLogout": "Выход с переднего канала",
  "rootUrl": "Корневой URL",
  "validRedirectUri": "Валидация URI перенаправления",
  "idpInitiatedSsoRelayState": "Передача состояния SSO инициирующим поставщиком идентификации",
  "masterSamlProcessingUrl": "Основной URL обработчика SAML",
  "nameIdFormat": "Наименование формата ID",
  "forceNameIdFormat": "Принудительно использовать формат ID",
  "forcePostBinding": "Принудительно использовать POST Binding",
  "includeAuthnStatement": "Включать Аутентификационные Заявки",
  "includeOneTimeUseCondition": "Включить условие одноразового использования",
  "optimizeLookup": "Оптимизация REDIRECT поиска подписанного ключа",
  "signDocuments": "Подпись документов",
  "signAssertions": "Sign Assertions",
  "signatureKeyName": "Наименование ключа сигнатуры SAML",
  "canonicalization": "Метод канонизации",
  "loginTheme": "Тема страницы входа",
  "clientAuthenticator": "Проверка подлинности клиента",
  "clientSecret": "Секрет клиента",
  "registrationAccessToken": "Токен доступа к регистрации",
  "revocation": "Отзыв",
  "clustering": "Кластеризация",
  "notBefore": "Не ранее чем",
  "setToNow": "Установить на сейчас",
  "addNode": "Добавить узел",
  "push": "Разослать",
  "nodeReRegistrationTimeout": "Таймаут узла перерегистрации",
  "registeredClusterNodes": "Зарегистрированные узлы кластера",
  "nodeHost": "Хост узла",
  "lastRegistration": "Последняя регистрация",
  "testClusterAvailability": "Протестировать доступность кластера",
  "registerNodeManually": "Зарегистрировать узел вручную",
  "fineGrainOpenIdConnectConfiguration": "Тонкая настройка конфигурации OpenID Connect",
  "fineGrainSamlEndpointConfig": "Тонкая настройка конфигурации конечных точек доступа SAML",
  "userInfoSignedResponseAlgorithm": "Алгоритм подписи ответа информации о пользователе",
  "requestObjectSignatureAlgorithm": "Алгоритм сигнатуры объекта запроса",
  "assertionConsumerServicePostBindingURL": "Привязка URL POST-запроса для сервиса подтверждения потребителей",
  "assertionConsumerServiceRedirectBindingURL": "Привязка URL-адреса переадресации для сервиса подтверждения потребителей",
  "logoutServicePostBindingURL": "URL для выхода из сервиса в привязанном POST-методе",
  "logoutServiceRedirectBindingURL": "URL переадресации для выхода из сервиса",
  "accessTokenLifespan": "Продолжительность жизни токена доступа",
  "browserFlow": "Сценарий браузера",
  "directGrant": "Сценарий Direct Grant Flow",
  "useJwksUrl": "Использовать JWKS URL",
  "certificate": "Сертификат",
  "jwksUrl": "JWKS URL",
  "generateNewKeys": "Сгенерировать новые ключи",
  "archiveFormat": "Формат архивации",
  "keyAlias": "Синоним ключа",
  "keyPassword": "Пароль для ключа",
  "storePassword": "Пароль хранилища",
  "importFile": "Импортировать файл",
  "clientType": "'OpenID connect' разрешает клиентам проверить личность конечного пользователя, основанного на  выполнении аутентификации на Сервере Авторизации.'SAML' включает веб-сценарии аутентификации и авторизации, включая кроссдоменные центры единого управления доступом (SSO) и использующие токены безопасности, содержащие заявления на передачу информации.",
  "serviceAccount": "Разрешает Вам аутентифицировать этого клиента в Keycloak и получить токен доступа специально для этого клиента. В терминах OAuth2 спецификации включает поддержку 'Client Credentials Grant' для этого клиента.",
  "authorization": "Включить/Выключить тонко-настраиваемую поддержку авторизации для клиента",
  "directAccess": "Включает поддержку Direct Access Grants, которая означает, что клиент имеет доступ к имени пользователя и пароля и обменивает их напрямую с сервером Keycloak на токен доступа. В терминах OAuth2 спецификации означает поддержку 'Resource Owner Password Credentials Grant' для этого клиента.",
  "standardFlow": "Включает стандартное OpenID Connect перенаправление, основанное на аутентификации с кодом авторизации. В терминах OpenID Connect или OAuth2 спецификаций включает 'Authorization Code Flow' для этого клиента.",
  "implicitFlow": "Включает поддержку OpenID Connect перенаправления, основанного на аутентификации без кода авторизации. В терминах OpenID Connect или OAuth2 спецификаций включает поддержку 'Implicit Flow' для этого клиента.",
  "rootURL": "Корневой URL добавляется к относительным URL",
  "validRedirectURIs": "Валидирует паттерн URI, на который может быть перенаправлен браузер после успешного входа или выхода. Разрешены простые ссылки, напр. 'http://example.com/*'. Также допускается использовать относительный путь, напр. '/my/relative/path/*'. Относительные пути необходимо указывать относительно корневого URL клиента, или, если он не специфицирован, корневого URL сервера авторизации. Для SAML Вы должны задать валидный паттерн URI, если Вы полагаетесь на URL сервиса потребителя, внедренного в запрос авторизации.",
  "nameIdFormatHelp": "Наименование формата ID для использования в теме.",
  "forceNameIdFormatHelp": "Игнорирует запрошенный формат заголовка NameID и использует сконфигурированный через консоль администратора.",
  "forcePostBindingHelp": "Всегда использовать POST Binding для ответов.",
  "includeAuthnStatementHelp": "Должны ли заявки на методы и временные метки быть включены в ответе на вход?",
  "includeOneTimeUseConditionHelp": "Должно ли условие одноразового использования быть включено в ответе на вход?",
  "optimizeLookupHelp": "При подписи SAML документов при REDIRECT сопоставлении с SP, который обеспечивается безопасностью адаптера Keycloak, должен ли включать ID подписанного ключа в сообщение по протоколу SAML в <Extensions> элемент? Это оптимизирует валидацию сигнатуры, где в качестве проверки используется один ключ вместо попытки проверки каждого ключа во время валидации.",
  "signDocumentsHelp": "Должны ли SAML документы быть подписаны в realm?",
  "signAssertionsHelp": "Должны ли утверждения внутри SAML документов быть подписаны? Устанавливает отсутствие необходимости подписывать уже подписанные документы.",
  "signatureAlgorithm": "Алгоритм, используемый для подписи документов.",
  "signatureKeyNameHelp": "Подписанные SAML документы содержат идентификаторы ключей подписи в элементе KeyName. Для Keycloak / RH-SSO контрагентов, используйте KEY_ID, для MS AD FS используйте CERT_SUBJECT, для остальных установите и используйте NONE если другие опции не работают.",
  "canonicalizationHelp": "Метод канонизации для XML сигнатур.",
  "webOriginsHelp": "Разрешает CORS источникам. Чтобы разрешить всем источники с допустимыми URI-адресами переадресации, добавьте '+'. Чтобы разрешить все источники, добавьте '*'.",
  "homeURL": "Используемый URL по умолчанию. Используется в случае, если серверу требуется перенаправление или обратная ссылка на клиента.",
  "adminURLHelp": "URL для доступа к интерфейсу администратора в заданном клиенте. Необходимо установить, если клиент поддерживает адаптер REST API. Это REST API разрешает серверу авторизации слать политики отзыва и прочие административные задачи. Обычно устанавливается значение, соответствующее базовому URL клиента.",
  "clientHelp": "Выберите клиента, осуществляющего авторизационный запрос. Если не задан, авторизационные запросы будут основаны на том клиенте, в котором вы находитесь.",
  "clientIdHelp": "Идентификатор клиента, зарегистрированный с помощью поставщика идентификации.",
  "selectUser": "Выберите пользователя, идентификационные данные которого будут использованы для запроса разрешений с сервера.",
  "rolesHelp": "Выберите роли, которые вы хотите связать с выбранным пользователем.",
  "contextualAttributesHelp": "Любой аттрибут определяется запущенным окружением или контекстом исполнения.",
  "applyToResourceTypeHelp": "Определяет, будет ли это разрешение будет применено ко всем ресурсам с данным типом. В этом случае это разрешение будет вычисляться для всех экземпляров с заданным типом ресурса.",
  "resourcesHelp": "Определяет, что это разрешение должно быть применено к конкретному экземпляру ресурсов.",
  "scopesSelect": "Определяет, что разрешение должно быть применено к одной или нескольким областям.",
  "clientNameHelp": "Задает отображаемое название клиента. Например 'My Client'. Поддерживает ключи для локализованных значений. Например\\: ${my_client}",
  "descriptionHelp": "Описание шаблона клиента",
  "loginThemeHelp": "Выберите тему для страниц входа, временного одноразового пароля (OTP), выдачи разрешений, регистрации и восстановления пароля.",
  "encryptAssertionsHelp": "Должны ли SAML утверждения быть зашифрованы публичным ключом клиента, используя AES?",
  "clientSignatureHelp": "Будет ли клиент подписывать свои saml запросы и ответы? И должны ли они быть провалидированы?",
  "expirationHelp": "Установить срок истечения для событий. Истекшие события периодически удаляются из базы данных.",
  "countHelp": "Определяет, как много клиентов может быть создано с помощью этого токена",
  "client-authenticator-type": "Проверка подлинности клиента используется для аутентификации этого клиента вместо сервера Keycloak",
  "registration-access-token": "Токен доступа к регистрации обеспечивает доступ для клиентов к сервису регистрации клиентов.",
  "nodeReRegistrationTimeoutHelp": "Интервал, означающий максимальное время для узлов кластера зарегистрированных клиентов для их перерегистрации. Если узел кластера не может послать запрос перерегистрации в Keycloak за указанное время, то он будет разрегистрирован из Keycloak",
  "userInfoSignedResponseAlgorithmHelp": "JWA алгоритм используется для подписи ответа ресурса информации о пользователе. Если установлено в 'unsigned', то ответ инофрмации о пользователе не будет подписан и будет возвращен в формате application/json.",
  "requestObjectSignatureAlgorithmHelp": "JWA алгоритм, который необходим клиенту для использования во время отсылки OIDC запроса объекта, специфицированного по 'request' или 'request_uri' параметрам. Если установлено в 'any', то объект запроса будет подписан любым алгоритмом (включая 'none' ).",
  "idpInitiatedSsoUrlName": "Имя URL фрагмента, обозначающего клиента, если вы хотите, чтобы SSO был проинициирован поставщиком идентификации. Оставьте это поле пустым, чтобы отключить инициирование SSO с помощью поставщика идентификации. URL для ссылки вашего браузера может быть в следующем виде: {server-root}/realms/{realm}/protocol/saml/clients/{client-url-name}",
  "idpInitiatedSsoRelayStateHelp": "Передать состояние, которое вы хотите послать вместе с SAML запросом, которым хотите проиницировать SSO поставщиком идентификации.",
  "masterSamlProcessingUrlHelp": "Если URL сконфигурирован, то он будет каждый раз для связывания SP's Assertion Consumer и Single Logout Services. Может быть переопределен индивидуально для связывания каждого сервиса в тонкой настройке конфигурации конечных точек доступа SAML.",
  "accessTokenLifespanHelp": "Максимальное время действия токена доступа. Значение рекомендуется устанавливать как можно ближе к таймауту SSO.",
  "assertionConsumerServicePostBindingURLHelp": "URL-адрес SAML POST запроса для клиентских сервисов подтверждения потребителей (запросы входа). Вы можете оставить это поле пустым, если не имеете URL для осуществления такой приввязки.",
  "assertionConsumerServiceRedirectBindingURLHelp": "SAML переадресация на привязанный URL для клиентского сервиса подтверждения потребителей (запросы входа). Вы можете оставить это поле пустым, если вы не имеете URL для осуществления такой привязки.",
  "logoutServicePostBindingURLHelp": "SAML POST связанный URL для клиентского сервиса единого выхода. Если Вы используете другие привязки, то можете оставить это поле пустым.",
  "logoutServiceRedirectBindingURLHelp": "SAML переадресует на привязанный URL для единой точки выхода из сервиса для клиентов. Если Вы используете другие привязки, то можете остаавить это поле пустым.",
  "frontchannelLogoutHelp": "Когда правила, выход требует перенаправить браузер на клиента. Если ложь, сервер выполняет фоновый режим для выхода из системы.",
  "browserFlowHelp": "Выберите сценарий, который вы хотите использовать для аутентификации через браузер.",
  "directGrantHelp": "Выберите сценарий, который вы хотите использоваться для аутентификации direct grant.",
  "certificateHelp": "Клиентский сертификат для валидации JWT, выпущенный клиентом и подписанный клиентским приватным ключом из Вашего хранилища ключей.",
  "jwksUrlHelp": "URL, где клиентские ключи хранятся в формате JWK. Для дополнительных деталей смотрите спецификацию JWK. Если Вы будете использовать адаптер клиента keycloak с учетными записями \"jwt\", то Вы можете использовать URL вашего приложения с суффиксом '/k_jwks'. Например 'http://www.myhost.com/myapp/k_jwks' .",
  "archiveFormatHelp": "Формат архивации Java keystore или PKCS12.",
  "keyAliasHelp": "Синоним архива для Вашего приватного ключа и сертификата.",
  "keyPasswordHelp": "Пароль для доступа к приватного ключу в архиве",
  "storePasswordHelp": "Пароль для доступа в сам архив ",
  "consentRequired": "Если включено, пользователи должны дать согласие на доступ клиентскому приложению.",
  "import": "Импорт JSON файла, содержащего авторизационные настройки для этого сервера ресурсов.",
  "policyEnforcementModeHelp": "Режим применения политик диктует, каким образом политики применяются при оценке запросов на авторизацию. «Обязывающая» означает, что запросы запрещены по умолчанию, даже если нет никакой политики, связанной с данным ресурсом. \"Разрешающая\" означает, что запросы разрешены даже если не существует политика, связанная с данным ресурсом. 'Отключено' полностью отключает оценку политики и позволяет получить доступ к любому ресурсу.",
  "allowRemoteResourceManagementHelp": "Должны ли ресурсы управляться удаленно сервером ресурсов? Если нет, то ресурсы могут управляться только через консоль администратора. ",
  "resourceName": "Уникальное имя для этого ресурса. Имя может быть использовано для уникальной идентификации ресурса, используется при запросах конкретных ресурсов.",
  "typeHelp": "Тип этого ресурса. Может быть использовано для группировки различных экземпляров ресурса с тем же типом.",
  "uris": "URI, который также может быть использован для уникальной идентификации этого ресурса.",
  "scopesHelp": "Области, которые будут посланы после запроса авторизации. Это может быть список областей, разделенных пробелом. По умолчанию 'openid'.",
  "fullScopeAllowedHelp": "Отключает все ограничения.",
  "resetActions": "Действия сброса",
  "scopeName": "Уникальное имя для области. Имя может быть использовано для уникальной идентификации области, используется при запросах конкретных областей.",
  "policy-name": "Название этой политики.",
  "policy-description": "Описание этой политики.",
  "policyDecisionStagey": "Стратегия решения диктует как политики связаны с заданными разрешениями и как формируется окончательное решение. 'Утвердительная' означает, что, по крайней мере, одна политика должна дать положительную оценку для того, чтобы окончательное решение также было положительным. 'Единогласная' означает что все политики должны дать положительную оценку для того, чтобы окончательная оценка также была положительной. 'Консенсусная' означает, что количество положительных решений должно превышать количество отрицательных решений. Если количество положительных и отрицательных решений совпадает, окончательное решение будет отрицательным.",
  "applyPolicyHelp": "Определяем все политики, которые должны быть применены к областям, определенным этой политикой или разрешением.",
  "policyClient": "Задайте, какие клиенты допущеный этой политикой.",
  "policyGroups": "Задайте, какие пользователи допущены этой политикой.",
  "policyRoles": "Задайте роли клиента, допущенные этой политикой.",
  "startTime": "Определете время, до наступления которого политика НЕ ДОЛЖНА быть разрешена. Разрешено только если текущее время/дата больше или равны заданному значению.",
  "expireTime": "Определяет время, после которого политика НЕ ДОЛЖНА быть разрешена. Разрешено только если текущее время/дата менеьше или равны заданному значению.",
  "monthHelp": "Определяет месяц, в который политика ДОЛЖНА быть разрешена. Вы также можете определить диапазон, заполнив второе поле. В этом случае разрешение выдается только если текущий месяц равен или находится между заданными значениями.",
  "dayMonth": "Определяет день месяца, в который политика ДОЛЖНА быть разрешена. Вы также можете определить диапазон, заполнив второе поле. В этом случае разрешение выдается только если текущий день месяца равен или находится между заданными значениями.",
  "hourHelp": "Определяет час, в который политика ДОЛЖНА быть разрешена. Вы также можете определить диапазон, заполнив второе поле. В этом случае разрешение выдается только если текущий час равен или находится между заданными значениями.",
  "minuteHelp": "Определяет минуту, в которую политика ДОЛЖНА быть разрешена. Вы также можете определить диапазон, заполнив второе поле. В этом случае разрешение выдается только если текущая минута равна или находится между заданными значениями.",
  "policyCode": "Код JavaScript, предоставляющий условия для этой политики.",
  "logicHelp": "Логика диктует, как политика должна применяться. Если 'Позитивная', результирующий эффект (разрешение или запрещение) полученный в ходе оценки этой политики будет использован для выполнения решения. Если 'Негативная', результирующий эффект будет отрицательным, другими словами, разрешение становится запрещением и наоборот.",
  "permissionName": "Имя этого разрешения.",
  "permissionDescription": "Описание этого разрешения.",
  "permissionType": "Определяет, что это разрешение должно быть применено ко всем экземплярам ресурсов заданного типа.",
  "realmRolePrefix": "Префикс ролей Realm",
  "name": "Наименование шаблона клиента. Должно быть уникально для realm",
  "protocolHelp": "Какая конфигурация протокола SSO будет поддержана шаблоном клиента",
  "prefix": "Префикс для каждой роли Realm (опционально).",
  "multiValued": "Отображается, если атрибут поддерживает несколько значений. Если включен, то список всех значений будет претендовать на этот атрибут. В противном случае выбираться будет только первое значение ",
  "tokenClaimName": {
    "label": "Имя переменной в токене",
    "tooltip": "Имя переменной при добавлении ее в токен. Может быть полное имя, например 'address.street'. В таком случае будет создан вложенный json объект."
  },
  "claimJsonType": "Тип переменной в JSON, который должен использоваться при добавлении ее в токен. Допустимые значения long, int, boolean, и String.",
  "protocolMapper": "Протокол...",
  "createGroup": "Создать группу",
  "members": "Члены",
  "email": "E-mail",
  "lastName": "Фамилия",
  "firstName": "Имя",
  "associatedRolesText": "Ассоциированные роли",
  "title": "Аутентификация",
  "addRole": "Добавить роль",
  "roleName": "Наименование роли",
  "composite": "Составная",
  "addUser": "Добавить пользователя",
  "userName": "Имя пользователя",
  "join": "Присоединиться",
  "groupMembership": "Членство в группах",
  "createdAt": "Создан",
  "username": "Имя пользователя",
  "emailVerified": "Подтверждение E-mail",
  "status": "Статус",
  "requiredUserActions": "Требуемые действия от пользователя",
  "impersonate": "Имперсонировать",
  "verifyEmail": "Подтверждение E-mail",
  "consents": "Согласия",
  "identityProvider": "Поставщик идентификации",
  "identityProviderLinks": "Ссылки поставщика идентификации",
  "revoke": "Отобрать",
  "credentialType": "Тип",
  "resetPassword": "Сброс пароля",
  "showPasswordDataValue": "Значение",
  "credentialResetBtn": "Сброс учетных данных",
  "hours": "часов",
  "minutes": "минут",
  "seconds": "секунд",
  "credentialResetConfirm": "Послать письмо",
  "temporaryLocked": "Пользователь может быть заблокирован в случае многократных неудачных попыток входа.",
  "emailVerifiedHelp": "Должен ли пользователь подтверждать свой E-mail?",
  "requiredUserActionsHelp": "Требует действий от пользователя когда он входит. 'Подтвердить E-mail' высылает письмо пользователю для подтверждения его E-mail. 'Обновить профиль' требует от пользователя ввести новую персональную информацию. 'Обновить пароль' требует от пользователя ввести новый пароль. 'Настроить OTP' требует установить мобильное приложение генерации паролей.",
  "groups": "Пользователь является членом группы. Выберите в списке группу и нажмите кнопку Покинуть, чтобы покинуть группу.",
  "lastAccess": "Последний доступ",
  "adminEvents": "События администратора",
  "time": "Время",
  "eventType": "Тип события",
  "ipAddress": "IP адрес",
  "realm": "Realm",
  "resourcePath": "Путь к ресурсу",
  "resourceTypes": "Типы ресурсов",
  "operationType": "Тип операции",
  "operationTypes": "Типы операций",
  "auth": "Аутентификация",
  "representation": "Представление",
  "partialImport": "Частичный импорт",
  "general": "Главная",
  "login": "вход",
  "themes": "Темы",
  "eventListeners": "Слушатели событий",
  "eventListenersHelpText": "Настройка слушателей, получающих события для realm.",
  "adminEventsSettings": "Настройки событий администратора",
  "saveEvents": "Сохранять события",
  "clearAdminEvents": "Очистить события администратора",
  "includeRepresentation": "Включить представление",
  "from": "От",
  "host": "Сервер",
  "port": "Порт",
  "enableSSL": "Включить SSL",
  "enableStartTLS": "Включить StartTLS",
  "keystore": "Хранилище ключей",
  "providers": "Поставщики",
  "uiDisplayName": "Наименование в консоли",
  "active": "Активные",
  "providerId": "ID",
  "kid": "KID",
  "provider": "Поставщик",
  "publicKeys": "Публичные ключи",
  "userRegistration": "Самостоятельная регистрация пользователей",
  "userRegistrationHelpText": "Включить/выключить страницу регистрации. Ссылка для регистрации будет также показана на странице входа.",
  "rememberMe": "Запомнить меня",
  "rememberMeHelpText": "Показать чекбокс на странице входа, чтобы разрешить пользователю запомнить вход в учетную запись в случае если браузерная сессия устареет.",
  "registrationEmailAsUsername": "E-mail как имя пользователя",
  "loginWithEmail": "Вход по E-mail",
  "loginWithEmailHelpText": "Разрешает пользователям входить с помощью E-mail.",
  "duplicateEmails": "Дублирующиеся E-mail",
  "duplicateEmailsHelpText": "Разрешает разным пользователям иметь один и тот же E-mail. Изменение этой настройки также очистит пользовательский кэш. После выключения поддержки дублирующихся email рекомендуется вручную почистить в базе данных ограничения по E-mail существующим пользователям.",
  "editUsername": "Редактируемое имя пользователя",
  "htmlDisplayName": "Отображаемое название в HTML",
  "requireSsl": "Требует SSL",
  "sslType": {
    "all": "все запросы",
    "external": "внешние запросы",
    "none": "нет"
  },
  "endpoints": "Конечные точки",
  "accountTheme": "Тема учетной записи",
  "adminTheme": "Тема консоли администратора",
  "emailTheme": "Тема для E-mail",
  "SSOSessionIdle": "Таймаут сессии SSO",
  "SSOSessionMax": "Ограничение сессии SSO",
  "offlineSessionIdle": "Таймаут оффлайн сессии",
  "loginTimeout": "Таймаут входа",
  "loginActionTimeout": "Таймаут действий по входу",
  "revokeRefreshToken": "Одноразовые токены обновления",
  "accessTokenLifespanImplicitFlow": "Продолжительность жизни токена доступа для Implicit Flow",
  "clientLoginTimeout": "Таймаут авторизации клиента",
  "clientProfileDescription": "Описание",
  "tokens": "Токены",
  "supportedLocales": "Поддерживаемые языки",
  "defaultLocale": "Язык по умолчанию",
  "validatorDialogColNames": {
    "colName": "Наименование роли"
  },
  "validatorColNames": {
    "colConfig": "Конфигурация"
  },
  "eventTypes": {
    "IMPERSONATE": {
      "name": "Имперсонировать"
    },
    "LOGOUT": {
      "name": "Выход"
    },
    "REGISTER": {
      "name": "Регистрация"
    },
    "RESET_PASSWORD": {
      "name": "Сброс пароля"
    }
  },
  "deleteEvents": "Очистить события",
  "defaultRoles": "Роли по умолчанию",
  "defaultGroups": "Группы по умолчанию",
  "securityDefences": "Защита безопасности",
  "headers": "Заголовки",
  "bruteForceDetection": "Определение Brute Force",
  "xFrameOptions": "X-Frame-Options",
  "contentSecurityPolicy": "Content-Security-Policy",
  "xContentTypeOptions": "X-Content-Type-Options",
  "failureFactor": "Максимальное количество неудачных попыток входа",
  "waitIncrementSeconds": "Порог ожидания",
  "maxFailureWaitSeconds": "Максимальное ожидание",
  "maxDeltaTimeSeconds": "Время сброса неудачных попыток",
  "minimumQuickLoginWaitSeconds": "Минимальное ожидание быстрого входа",
  "requireSslHelp": "Требуется ли HTTPS? 'нет' означает, что HTTPS не требуется для клиентов с любым IP адресом. 'Внешние запросы' означает, что localhost и внутренние IP адреса могут получить доступ без HTTPS. 'Все запросы' означает, что HTTPS требуется вне зависимости от IP адреса.",
  "accountThemeHelp": "Выберите тему для управления учетной записью пользователя.",
  "adminThemeHelp": "Выберите тему для консоли администратора.",
  "emailThemeHelp": "Выберите тему для E-mail, которые будут отсылаться с сервера.",
  "save-user-events": "Если включено, то события будут сохранены в базу данных, что сделает их доступными администратору и консоли управления учетной записью.",
  "save-admin-events": "Если включено, то события администратора будет сохранены в базу данных, что сделает их доступными через консоль администратора.",
  "admin-clearEvents": "Удалить все события администратора из базы данных.",
  "includeRepresentationHelp": "Включить JSON представление для запросов на создание и обновление.",
  "failureFactorHelp": "Количество неудачных попыток входа до блокировки пользователя.",
  "waitIncrementSecondsHelp": "Если порог ошибок превышен, сколько времени пользователь будет заблокирован?",
  "maxFailureWaitSecondsHelp": "Максимальное время, на которое пользователь будет заблокирован.",
  "maxDeltaTimeSecondsHelp": "Через какое время счетчик неудачных попыток будет сброшен?",
  "quickLoginCheckMilliSeconds": "Если попытки аутентификации происходят слишком часто, то пользователя необходимо заблокировать.",
  "minimumQuickLoginWaitSecondsHelp": "Как долго ждать после неудачной попытки быстрого входа.",
  "ssoSessionIdle": "Допустимое время бездействия сессии. По истечении этого времени токены и браузерные сессии становятся невалидными.",
  "ssoSessionMax": "Максимальное время до того, как истечет сессия. По истечении этого времени токены и браузерные сессии становятся невалидными.",
  "offlineSessionIdleHelp": "Допустимое время бездействия оффлайн сессии. Вам необходимо использовать оффлайн токен для обновления хотя бы раз за этот период, иначе сессия истечет.",
  "revokeRefreshTokenHelp": "Если включено, то токены обновления могут быть использованы один раз. Иначе токен отзываться не будет и может использоваться многократно.",
  "clientLoginTimeoutHelp": "Максимальное время клиента для завершения протокола access token. Обычно устанавливается равным 1-ой минуте.",
  "editUsernameHelp": "Если включено,то имя пользователя можно будет отредактировать, иначе оно будет доступным только для чтения.",
  "flows": "Сценарии",
  "requiredActions": "Требуемые действия",
  "passwordPolicy": "Политики пароля",
  "otpPolicy": "Политики OTP",
  "otpType": "Тип одноразового пароля OTP",
  "policyType": {
    "totp": "Основан на времени",
    "hotp": "Основан на счетчике"
  },
  "otpHashAlgorithm": "Алгоритм хеша OTP",
  "otpPolicyDigits": "Количество цифр",
  "otpPolicyPeriod": "Период токена OTP",
  "initialCounter": "Начальное значение счетчика",
  "attestationPreference": {
    "none": "нет"
  },
  "flow": {
    "browser": "Сценарий браузера",
    "registration": "Сценарий регистрации",
    "direct grant": "Сценарий Direct Grant Flow"
  },
  "flowType": "Тип сценария",
  "flow-type": {
    "basic-flow": "общий",
    "form-flow": "форма"
  },
  "addExecution": "Добавить исполнение",
  "requirement": "Требования",
  "alias": "Синоним",
  "flowTypeHelp": "Какого типа эта форма",
  "topLevelFlowType": "Какой это тип сценария верхнего уровня? Тип \"клиент\" используется для аутентификации клиентов (приложений), когда \"общий\" для пользователей и всего остального",
  "aliasHelp": "Синоним уникально идентифицирует поставщика идентификации, а также используется для построения адреса переадресации.",
  "otpTypeHelp": "totp является Временным одноразовым паролем. 'hotp' основанный на счетчике одноразовый пароль в котором сервер хранит счетчик хеша.",
  "otpHashAlgorithmHelp": "Какой алгоритм хеширования должен быть использован для генерации OTP.",
  "otpPolicyDigitsHelp": "Сколько цифр должен иметь OTP?",
  "otpPolicyPeriodHelp": "Сколько секунд токен OTP должен быть действителен? По умолчанию 30 секунд.",
  "unlinkUsers": "Отвязать пользователей",
  "removeImported": "Удалить импортированных",
  "vendor": "Поставщик",
  "connectionURL": "URL соединения",
  "enableStartTls": "Включить StartTLS",
  "useTruststoreSpi": "Использование доверенных сертификатов SPI",
  "connectionPooling": "Пул соединений",
  "connectionTimeout": "Таймаут соединения",
  "bindType": "Тип аутентификации",
  "bindDn": "Сопоставление DN",
  "editMode": "Режим редактирования",
  "usersDN": "Пользователи DN",
  "usernameLdapAttribute": "Атрибут Username в LDAP",
  "rdnLdapAttribute": "Атрибут RDN в LDAP",
  "uuidLdapAttribute": "Атрибут UUID в LDAP",
  "userObjectClasses": "Классы объектов пользователя",
  "searchScope": "Поиск области",
  "readTimeout": "Таймаут чтения",
  "pagination": "Постраничный вывод",
  "importUsers": "Импортировать пользователей",
  "batchSize": "Размер пачки",
  "periodicFullSync": "Периодическая полная синхронизация",
  "fullSyncPeriod": "Период полной синхронизации",
  "periodicChangedUsersSync": "Периодическая синхронизация изменений пользователей",
  "changedUsersSyncPeriod": "Период синхронизации измененных пользователей",
  "kerberosIntegration": "Интеграция с Kerberos",
  "allowKerberosAuthentication": "Разрешить аутентификацию Kerberos",
  "useKerberosForPasswordAuthentication": "Использовать Kerberos для аутентификации по паролю",
  "trustEmail": "Подтверждение E-mail",
  "requiredSettings": "Требуемые настройки",
  "kerberosRealm": "Kerberos Realm",
  "serverPrincipal": "Основной сервер",
  "debug": "Отладчик",
  "allowPasswordAuthentication": "Разрешить аутентификацию по паролю",
  "testAuthentication": "Проверка аутентификации",
  "ldapMappersList": "Сопоставления LDAP",
  "ldapFilter": "LDAP фильтр",
  "selectRole": {
    "label": "Выберите роль",
    "tooltip": "Введите роль в текстовом поле слева, или нажмите на кнопку, чтобы выбрать желаемую роль."
  },
  "vendorHelp": "LDAP поставщик (провайдер)",
  "consoleDisplayConnectionUrlHelp": "URL соединения с вашим сервером LDAP",
  "connectionTimeoutHelp": "Таймаут соединения с LDAP в миллисекундах",
  "bindCredentialsHelp": "Пароль администратора LDAP",
  "editModeLdapHelp": "READ_ONLY означает доступ только на чтение из LDAP. WRITABLE означает, что данные будут обратно синхронизированы в LDAP по заявке. UNSYNCED означает, что данные пользователя будут импортированы, но не синхронизированы обратно в LDAP.",
  "fullSyncPeriodHelp": "Период для полной синхронизации в секундах",
  "changedUsersSyncHelp": "Период для синхронизации измененных или вновь созданных пользователей LDAP в секундах",
  "trustEmailHelp": "Если включено, то E-mail, предоставленный этим поставщиком не будет подтвержденным даже если подтверждение включено для realm.",
  "debugHelp": "Включить/выключить отладочные логи в стандартный вывод для Krb5LoginModule.",
  "allowPasswordAuthenticationHelp": "Включить/выключить возможность аутентификации по имени/пароля вопреки базе данных Kerberos",
  "updateFirstLoginHelp": "Обновить профиль при первом входе",
  "addIdPMapper": "Добавить сопоставление поставщика учетных записей",
  "redirectURI": "URI перенаправления",
  "ssoServiceUrl": "Адрес сервиса единой точки входа",
  "singleLogoutServiceUrl": "Адреса сервиса единого выхода",
  "nameIdPolicyFormat": "Формат политики NameID",
  "unspecified": "неопределенный",
  "principalType": "Тип идентификации",
  "principalAttribute": "Атрибут-идентификатор",
  "httpPostBindingResponse": "Привязанный ответ HTTP-POST",
  "httpPostBindingAuthnRequest": "Привязывание HTTP-POST для AuthnRequest",
  "httpPostBindingLogout": "Привязывание HTTP-POST для выхода",
  "wantAuthnRequestsSigned": "Ожидание подписи AuthnRequests",
  "samlSignatureKeyName": "Наименование ключа сигнатуры SAML",
  "forceAuthentication": "Принудительная аутентификация",
  "validatingX509Certs": "Проверка X509 сертификатов",
  "authorizationUrl": "URL авторизации",
  "tokenUrl": "URL токена",
  "logoutUrl": "URL выхода",
  "backchannelLogout": "Backchannel Logout",
  "disableUserInfo": "Отключить информацию о пользователе",
  "userInfoUrl": "URL информации о пользователе",
  "issuer": "Эмитент",
  "prompt": "Подсказка",
  "prompts": {
    "none": "нет",
    "consent": "согласие",
    "login": "вход"
  },
  "validateSignature": "Проверка подписей",
  "storeTokens": "Хранение токенов",
  "storedTokensReadable": "Сохраненные токены доступны на чтение",
  "accountLinkingOnly": "Только связывание учетной записи",
  "hideOnLoginPage": "Скрыть на странице входа",
  "firstBrokerLoginFlowAlias": "Сценарий первого входа",
  "postBrokerLoginFlowAlias": "Сценарий после входа",
  "userAttribute": "Атрибут пользователя",
  "redirectURIHelp": "Этот uri перенаправления используется в том случае, если сконфигурирован поставщик идентификации.",
  "displayName": "Дружелюбное имя для провайдеров идентификации.",
  "clientSecretHelp": "Секрет клиента, зарегистрированный с помощью поставщика идентификации.",
  "discoveryEndpoint": "Импорт метаданных из дескриптора развертывания удаленного поставщика идентификации.",
  "importConfig": "Импорт метаданных со скачанного дескриптора развертывания удаленного поставщика идентификации.",
  "logoutUrlHelp": "Конечная точка окончания сессии, используемая для выхода пользователя из внешнего IDP.",
  "backchannelLogoutHelp": "Поддерживает ли внешний IDP backchannel logout?",
  "disableUserInfoHelp": "Отключить использование сервиса информации о пользователе, чтобы получить дополнительную информацию о пользователе?  По умолчанию используется сервис OIDC.",
  "userInfoUrlHelp": "Url информации о пользователе. Это поле опционально.",
  "issuerHelp": "Идентификатор эмитента для эмитента ответа. Если не предоставлен, проверка не будет выполняться.",
  "validateSignatureHelp": "Включить/выключить проверку подписей внешних поставщиков идентификации.",
  "useJwksUrlHelp": "Если включено, то публичные ключи поставщиков идентификации будет скачаны с заданного JWKS URL. Это дает дополнительную гибкость, так как новые ключи скачиваются каждый раз когда поставщик идентификации создает новую пару. Если выключено, то будут использованы публичные ключи (или сертификат) из базы данных Keycloak, и в случае изменений пары на поставщике идентификации вам будет необходимо каждый раз импортировать новые ключи в базу данных Keycloak.",
  "storeTokensHelp": "Включено/выключено хранение токенов после аутентификации пользователя.",
  "storedTokensReadableHelp": "Включено/выключено чтение новыми пользователями любых сохраненных токенов. Это назначается ролью broker.read-token.",
  "accountLinkingOnlyHelp": "Если установлено, то пользователи не смогут войти через этого провайдера.  Только устанавливает связь к этому провайдеру. Используется, если вы не хотите разрешать вход через этого провайдера, но хотите с этим провайдером иметь интеграцию.",
  "hideOnLoginPageHelp": "Если скрыто, то вход с этим провайдером возможен только при явном вызове, например при использовании параметра 'kc_idp_hint'.",
  "firstBrokerLoginFlowAliasHelp": "Синоним сценария аутентификации, который срабатывает после первого входа с этого поставщика идентификации. Термин 'First Login' означает, что еще не существует учетной записи Keycloak связанной с аутентифицированной учетной записью поставщика идентификации.",
  "useEntityDescriptor": "Импортировать метаданные из удаленного дескриптора сущностей IDP SAML.",
  "samlEntityDescriptor": "Позволяет вам загрузить метаданные внешнего IDP из файла конфигурации или скачать его из URL.",
  "ssoServiceUrlHelp": "Url, который должен быть использован для отправленных запросов на аутентификацию (SAML AuthnRequest).",
  "singleLogoutServiceUrlHelp": "Url, который должен быть использован для отправленных запросов на выход.",
  "principalTypeHelp": "Определяет, каким образом Keycloak идентифицирует внешних пользователей по SAML-сообщению. По умолчанию идентификация происходит по Subject NameID, в качестве альтернативы можно использовать атрибут-идентификатор.",
  "principalAttributeHelp": "Имя (Name) или \"дружественное имя\" (Friendly Name) атрибута, идентифицирующего внешних пользователей.",
  "httpPostBindingResponseHelp": "Указывает, необходоимо ли отвечать на завпросы, используя привязку HTTP-POST. Если не задано, то будет использован HTTP-REDIRECT.",
  "httpPostBindingAuthnRequestHelp": "Указывает, должны ли AuthnRequest быть посланы, используя привязку HTTP-POST. Если нет, то будет использован HTTP-REDIRECT.",
  "wantAuthnRequestsSignedHelp": "Указывает, ожидает ли поставщик идентификации подписанных AuthnRequest.",
  "forceAuthenticationHelp": "Указывает, должен ли поставщик идентификации аутентифицировать ведущего напрямую, а не использовать предыдущий контекст безопасности.",
  "validateSignatures": "Включает/выключает проверку подписи ответов от SAML.",
  "validatingX509CertsHelp": "Сертификат в формате PEM, который должен быть использован для проверки подписи.",
  "addIdpMapperName": "Наименование сопоставления.",
  "selectARole": "Выберите роль",
  "usermodel": {
    "prop": {
      "label": "Свойство",
      "tooltip": "Имя свойства метода в интерфейсе UserModel. Для примера, значение 'email' будет ссылкой на метод UserModel.getEmail()."
    },
    "attr": {
      "label": "Атрибут пользователя",
      "tooltip": "Имя сохраненного атрибута пользователя, которое является именем атрибута, согласованным с UserModel.attribute."
    },
    "clientRoleMapping": {
      "clientId": {
        "label": "ID клиента",
        "tooltip": "ID клиента для сопоставления ролей"
      },
      "rolePrefix": {
        "label": "Префикс ролей клиента",
        "tooltip": "Префикс для каждой роли клиента (опционально)."
      }
    },
    "realmRoleMapping": {
      "rolePrefix": {
        "label": "Префикс ролей Realm",
        "tooltip": "Префикс для каждой роли Realm (опционально)."
      }
    }
  },
  "userSession": {
    "modelNote": {
      "label": "Заметка сессии пользователя",
      "tooltip": "Наименование процедуры заметки сессии пользователя согласованным с UserSessionModel.note."
    }
  },
  "multivalued": {
    "label": "Несколько значений",
    "tooltip": "Отображается, если атрибут поддерживает несколько значений. Если включен, то список всех значений будет претендовать на этот атрибут. В противном случае выбираться будет только первое значение "
  },
  "jsonType": {
    "label": "Тип переменной JSON",
    "tooltip": "Тип переменной в JSON, который должен использоваться при добавлении ее в токен. Допустимые значения long, int, boolean, и String."
  },
  "includeInIdToken": {
    "label": "Добавить в токен ID",
    "tooltip": "Должно ли значение быть добавлено в токен ID?"
  },
  "includeInAccessToken": {
    "label": "Добавить в токен доступа",
    "tooltip": "Должно ли значение быть добавлено в токен доступа?"
  },
  "includeInUserInfo": {
    "label": "Добавить в информацию о пользователе",
    "tooltip": "Должно ли требование быть добавлено в информацию о пользователе?"
  },
  "sectorIdentifierUri": {
    "label": "Сектор идентификации URI",
    "tooltip": "Провайдеры, использующие пары вспомогательных значений и поддерживающие динамическую регистрацию клиентов ДОЛЖНЫ использовать sector_identified_uri параметр. Это обеспечивает способ для группы сайтов под общим административным контролем, чтобы иметь последовательные попарные значения независимо от индивидуальных доменных имен. Это также обеспечивает способ для клиентов для изменения redirect_uri доменов, не имещющих возможности перерегистрации всех своих пользователей."
  },
  "pairwiseSubAlgorithmSalt": {
    "label": "Соль",
    "tooltip": "Соль, используемая для вычисления парного субъекта идентификатора. Если поле не заполнено, то соль будет сгенерирована."
  },
  "addressClaim": {
    "street": {
      "label": "Имя пользовательского атрибута, обозначающего Улицу",
      "tooltip": "Имя пользовательского атрибута, которое будет использоваться для сопоставления атрибута 'street_address' внутри атрибута 'address' токена. По умолчанию 'street' ."
    },
    "locality": {
      "label": "Имя пользовательского атрибута, обозначающего Местонахождение",
      "tooltip": "Имя пользовательского атрибута, которое будет использоваться для сопоставления атрибута 'locality' внутри атрибута 'address' токена. По умолчанию 'locality' ."
    },
    "region": {
      "label": "Имя пользовательского атрибута, обозначающего Регион",
      "tooltip": "Имя пользовательского атрибута, которое  будет использоваться для сопоставления атрибута 'region' внутри атрибута 'address' токена. По умолчанию 'region' ."
    },
    "postal_code": {
      "label": "Имя пользовательского атрибута, обозначающего Почтовый индекс",
      "tooltip": "Имя пользоватеслького атрибута, котоое будет использоваться для сопоставления атрибута 'postal_code' внутри атрибута 'address' токена. По умолчанию 'postal_code' ."
    },
    "country": {
      "label": "Имя пользовательского атрибута, обозначающего Страна",
      "tooltip": "Имя пользовательского атрибута, которое будет использоватлься для сопоставления атрибута 'country' внутри атрибута 'address' токена. По умолчанию 'country' ."
    },
    "formatted": {
      "label": "Имя пользовательсокого атрибута, обозначающего Формитированный адрес",
      "tooltip": "Имя пользовательского атрибута, которое будет использоваться для сопоставления атрибута 'formatted' внутри атрибута 'address' токена. По умолчанию 'formatted' ."
    }
  },
  "name-id-format": "Наименование формата ID",
  "titleAuthentication": "Аутентификация",
  "titleEvents": "События",
  "titleRoles": "Роли Realm",
  "titleUsers": "Пользователи",
  "titleSessions": "Сессии",
  "authenticationAliasHelp": "Наименование конфигурации",
  "authenticationFlowTypeHelp": "Какого типа эта форма",
  "scopeNameHelp": "Наименование шаблона клиента. Должно быть уникально для realm",
  "scopeDescriptionHelp": "Описание шаблона клиента",
  "clientDescriptionHelp": "Задает описание клиента. Например 'Мой клиент для табеля учета времени'. Поддерживает ключи для локализованных значений. Например: ${my_client_description}",
  "clientsClientTypeHelp": "'OpenID connect' разрешает клиентам проверить личность конечного пользователя, основанного на  выполнении аутентификации на Сервере Авторизации.'SAML' включает веб-сценарии аутентификации и авторизации, включая кроссдоменные центры единого управления доступом (SSO) и использующие токены безопасности, содержащие заявления на передачу информации.",
  "clientsClientScopesHelp": "Области, ассоциироваанные с этим ресурсом."
}
