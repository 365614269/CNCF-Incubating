{
  "add": "追加",
  "create": "作成",
  "save": "保存",
  "continue": "続ける",
  "remove": "削除",
  "key": "キー",
  "value": "値",
  "next": "次へ",
  "back": "戻る",
  "export": "エクスポート",
  "action": "アクション",
  "download": "ダウンロード",
  "clear": "クリア",
  "on": "オン",
  "off": "オフ",
  "edit": "編集",
  "enabled": "有効",
  "disabled": "無効",
  "disable": "無効",
  "none": "none",
  "signOut": "サインアウト",
  "manageAccount": "アカウントの管理",
  "serverInfo": "サーバー情報",
  "testConnection": "接続テスト",
  "description": "説明",
  "type": "タイプ",
  "category": "カテゴリー",
  "priority": "優先度",
  "clientScope": {
    "default": "DEFAULT"
  },
  "allTypes": "すべてのタイプ",
  "manage": "管理",
  "clients": "クライアント",
  "clientScopes": "クライアント・スコープ",
  "realmRoles": "レルムロール",
  "users": "ユーザー",
  "sessions": "セッション",
  "events": "イベント",
  "mappers": "マッパー",
  "permissions": "パーミッション",
  "usersPermissionsHint": "レルム内のすべてのユーザーを管理するきめ細かいパーミッション。レルム内のユーザーを管理できるユーザーには、さまざまなポリシーを定義できます。",
  "clientsPermissionsHint": "このクライアントを管理したり、このクライアントによって定義されたロールを適用したりする管理者のきめ細かいパーミッションです。",
  "permissionsEnabled": "パーミッションが有効",
  "scopePermissions": {
    "clients": {
      "manage-description": "管理者がこのクライアントを管理できるかどうかを決定するポリシー",
      "view-description": "管理者がこのクライアントを表示できるかどうかを決定するポリシー",
      "map-roles-description": "管理者がこのクライアントによって定義されたロールをマップできるかどうかを決定するポリシー",
      "map-roles-client-scope-description": "管理者がこのクライアントによって定義されたロールを別のクライアントのクライアント・スコープに適用できるかどうかを決定するポリシー",
      "map-roles-composite-description": "管理者がこのクライアントによって定義されたロールをコンポジットとして別のロールに適用できるかどうかを決定するポリシー",
      "token-exchange-description": "このクライアントを対象とするトークンのトークン交換を許可するクライアントを決定するポリシー。"
    },
    "users": {
      "view-description": "管理者がレルム内のすべてのユーザーを表示できるかどうかを決定するポリシー",
      "manage-description": "管理者がレルム内のすべてのユーザーを管理できるかどうかを決定するポリシー",
      "map-roles-description": "管理者がすべてのユーザーのロールをマップできるかどうかを決定するポリシー",
      "manage-group-membership-description": "管理者がレルム内のすべてのユーザーのグループ・メンバーシップを管理できるかどうかを決定するポリシー。これは、特定のグループポリシーと組み合わせて使用??されます",
      "impersonate-description": "管理者が他のユーザーを偽装できるかどうかを決定するポリシー",
      "user-impersonated-description": "どのユーザーを偽装するかを決定するポリシー。これらのポリシーは、偽装されているユーザーに適用されます。"
    }
  },
  "configure": "設定",
  "realmSettings": "レルムの設定",
  "authentication": "認証",
  "identityProviders": "アイデンティティー・プロバイダー",
  "userFederation": "ユーザー・フェデレーション",
  "settings": "設定",
  "details": "詳細",
  "Sunday": "日",
  "Monday": "月",
  "Tuesday": "火",
  "Wednesday": "水",
  "Thursday": "木",
  "Friday": "金",
  "Saturday": "土",
  "times": {
    "seconds": "秒",
    "minutes": "分",
    "hours": "時",
    "days": "日"
  },
  "attributes": "属性",
  "credentials": "クレデンシャル",
  "clientId": "クライアントID",
  "clientName": "名前",
  "id": "ID",
  "mapperType": "マッパータイプ",
  "leave": "外す",
  "password": "パスワード",
  "passwordConfirmation": "新しいパスワード（確認）",
  "temporaryPassword": "一時的",
  "temporaryPasswordHelpText": "有効の場合は、ユーザーは次のログイン時にパスワードの変更が必要となります。",
  "profile": "プロファイル",
  "disabledFeatures": "使用できない機能",
  "protocol": "プロトコル",
  "copy": "コピー",
  "clientAuthorization": "認可",
  "importClient": "クライアントのインポート",
  "webOrigins": "Webオリジン",
  "adminURL": "管理URL",
  "formatOption": "フォーマット・オプション",
  "encryptAssertions": "アサーションを暗号化する",
  "clientSignature": "クライアント署名が必須",
  "keys": "鍵",
  "roles": "ロール",
  "addClientScope": "クライアント・スコープの追加",
  "fullScopeAllowed": "フルスコープを許可",
  "setup": "セットアップ",
  "selectAUser": "ユーザーを選択",
  "client": "client",
  "evaluate": "評価",
  "reevaluate": "再評価",
  "showAuthData": "認可データを表示",
  "unanimous": "Unanimous",
  "affirmative": "Affirmative",
  "consensus": "Consensus",
  "authScopes": "認可スコープ",
  "anyResource": "任意のリソース",
  "anyScope": "任意のスコープ",
  "selectScope": "スコープを選択",
  "applyToResourceType": "リソースタイプに適用",
  "contextualInfo": "コンテキスト情報",
  "contextualAttributes": "コンテキスト属性",
  "kc": {
    "realm": {
      "name": "レルム"
    }
  },
  "policyEnforcementMode": "ポリシー施行モード",
  "policyEnforcementModes": {
    "ENFORCING": "実施",
    "PERMISSIVE": "許容",
    "DISABLED": "無効"
  },
  "decisionStrategy": "決定戦略",
  "iconUri": "アイコンURI",
  "ownerManagedAccess": "User-Managed Accessの有効",
  "allowRemoteResourceManagement": "リモートリソース管理",
  "resources": "リソース",
  "resource": "リソース",
  "scope": "スコープ",
  "owner": "オーナー",
  "uris": "URI",
  "scopes": "スコープ",
  "policies": "ポリシー",
  "createPermission": "パーミッションを作成",
  "identityInformation": "アイデンティティー情報",
  "resourceType": "リソースタイプ",
  "createPolicy": "ポリシーを作成",
  "applyPolicy": "ポリシーの適用",
  "groupsClaim": "グループクレーム",
  "month": "月",
  "hour": "時",
  "minute": "分",
  "code": "コード",
  "logic": "ロジック",
  "logicType": {
    "positive": "Positive",
    "negative": "Negative"
  },
  "scopeParameter": "スコープ・パラメーター",
  "effectiveProtocolMappers": "有効なプロトコル・マッパー",
  "effectiveRoleScopeMappings": "有効なロールスコープ・マッピング",
  "generatedAccessToken": "生成されたアクセストークン",
  "parentClientScope": "親クライアント・スコープ",
  "user": "ユーザー",
  "clientList": "クライアント",
  "initialAccessToken": "初期アクセストークン",
  "alwaysDisplayInUI": "常にコンソールに表示",
  "created": "作成日",
  "lastUpdated": "最終更新日",
  "expires": "有効期限",
  "count": "カウント",
  "remainingCount": "残りのカウント",
  "expiration": "有効期限",
  "clientAuthentication": "クライアント認証",
  "frontchannelLogout": "フロントチャンネル・ログアウト",
  "rootUrl": "ルートURL",
  "validRedirectUri": "有効なリダイレクトURI",
  "idpInitiatedSsoRelayState": "IDP Initiated SSOのRelayState",
  "masterSamlProcessingUrl": "SAMLを処理するマスターURL",
  "nameIdFormat": "Name IDフォーマット",
  "forceNameIdFormat": "Name IDフォーマットを強制",
  "forcePostBinding": "POSTバインディングを強制",
  "includeAuthnStatement": "AuthnStatementを含める",
  "includeOneTimeUseCondition": "OneTimeUse条件を含める",
  "optimizeLookup": "REDIRECT署名鍵検索の最適化",
  "signDocuments": "ドキュメントを署名する",
  "signAssertions": "アサーションを署名する",
  "signatureKeyName": "SAML署名鍵名",
  "canonicalization": "正規化方式",
  "loginTheme": "ログインテーマ",
  "clientAuthenticator": "クライアント認証",
  "clientSecret": "クライアント・シークレット",
  "selectMethodType": {
    "import": "インポート"
  },
  "registrationAccessToken": "登録用アクセストークン",
  "subject": "サブジェクトDN",
  "revocation": "無効化",
  "clustering": "クラスタリング",
  "notBefore": "この日時より前",
  "setToNow": "現在日時を設定",
  "addNode": "ノードを追加",
  "push": "プッシュ",
  "nodeReRegistrationTimeout": "ノード再登録のタイムアウト",
  "registeredClusterNodes": "登録済みクラスターノード",
  "nodeHost": "ノードホスト",
  "lastRegistration": "最終登録",
  "testClusterAvailability": "クラスターの可用性をテスト",
  "registerNodeManually": "ノードを手動で登録",
  "fineGrainOpenIdConnectConfiguration": "OpenID Connectの詳細設定",
  "fineGrainSamlEndpointConfig": "SAMLエンドポイントの詳細設定",
  "accessTokenSignatureAlgorithm": "アクセストークン署名アルゴリズム",
  "idTokenSignatureAlgorithm": "IDトークン署名アルゴリズム",
  "idTokenEncryptionKeyManagementAlgorithm": "IDトークン暗号化鍵管理アルゴリズム",
  "idTokenEncryptionContentEncryptionAlgorithm": "IDトークン暗号化コンテンツの暗号化アルゴリズム",
  "userInfoSignedResponseAlgorithm": "署名付きUserInfoレスポンスのアルゴリズム",
  "requestObjectSignatureAlgorithm": "リクエスト・オブジェクトの署名アルゴリズム",
  "requestObjectRequired": "リクエスト・オブジェクトが必要",
  "excludeSessionStateFromAuthenticationResponse": "認証レスポンスからセッション状態を除外",
  "assertionConsumerServicePostBindingURL": "アサーション・コンシューマー・サービスのPOSTバインディングURL",
  "assertionConsumerServiceRedirectBindingURL": "アサーション・コンシューマー・サービスのRedirectバインディングURL",
  "logoutServicePostBindingURL": "ログアウト・サービスのPOSTバインディングURL",
  "logoutServiceRedirectBindingURL": "ログアウト・サービスのRedirectバインディングURL",
  "assertionLifespan": "アサーションの有効期限",
  "accessTokenLifespan": "アクセストークン生存期間",
  "oAuthMutual": "OAuth 2.0相互TLS証明書バインド・アクセストークンが有効",
  "keyForCodeExchange": "Proof Key for Code Exchangeのコードチャレンジ方式",
  "authenticationOverrides": "認証フローのオーバーライド",
  "browserFlow": "ブラウザーフロー",
  "directGrant": "ダイレクト・グラント・フロー",
  "useJwksUrl": "JWKS URLの使用",
  "certificate": "証明書",
  "jwksUrl": "JWKS URL",
  "generateNewKeys": "新しい鍵を生成",
  "archiveFormat": "アーカイブ形式",
  "keyAlias": "キーエイリアス",
  "keyPassword": "鍵のパスワード",
  "storePassword": "ストアのパスワード",
  "importFile": "ファイルをインポート",
  "tokenLifespan": {
    "expires": "有効期限"
  },
  "clientType": "「OpenID Connect」により、クライアントは認可サーバーによって実行される認証に基づいてエンドユーザーのアイデンティティーを検証できます。「SAML」は、クロスドメインのシングル・サインオン（SSO）を含むWebベースの認証および認可のシナリオを可能にし、アサーションを含むセキュリティー・トークンを使用して情報を渡します。",
  "serviceAccount": "このクライアントをKeycloakで認証し、このクライアント専用のアクセストークンの取得ができるようになります。OAuth2の仕様における「クライアント・クレデンシャル・グラント」のサポートを有効にします。",
  "authorization": "きめ細かい認可のサポートを有効/無効にします。",
  "directAccess": "ダイレクト・アクセス・グラントのサポートを有効にします。これは、アクセストークンの取得のためにKeycloakサーバーとユーザーのユーザー名/パスワードで直接アクセスを行います。OAuth2の仕様における「リソース・オーナー・パスワード・クレデンシャル・グラント」のサポートを有効にします。",
  "standardFlow": "OpenID Connectの標準的な、認可コードによるリダイレクト・ベースの認証を有効にします。OpenID ConnectまたはOAuth2の仕様における「認可コードフロー」のサポートを有効にします。",
  "implicitFlow": "OpenID Connectの認可コードなしのリダイレクト・ベース認証のサポートを有効にします。OpenID ConnectまたはOAuth2の仕様における「インプリシット・フロー」のサポートを有効にします。",
  "rootURL": "相対URLに追加するルートURLを設定します。",
  "validRedirectURIs": "ログインまたはログインの成功後にブラウザーがリダイレクト可能とする、有効なURIパターンを設定します。「http://example.com/*」のような単純なワイルドカードが使用可能です。相対パス、つまり「/my/relative/path/*」も指定可能です。相対パスはクライアントのルートURLを基準とします。または、未指定の場合は認証サーバーのルートURLが使用されます。SAMLでは、ログイン・リクエストに埋め込まれたコンシューマー・サービスのURLに依存している場合は、有効なURIパターンを設定する必要があります。",
  "nameIdFormatHelp": "サブジェクトに使用するName IDフォーマットを設定します。",
  "alwaysDisplayInUIHelp": "ユーザーのアクティブなセッションがない場合でも、このクライアントを常にアカウント・コンソールに一覧表示します。",
  "forceNameIdFormatHelp": "要求されたNameIDサブジェクト・フォーマットを無視し、管理コンソールで設定された物を使用します。",
  "forcePostBindingHelp": "レスポンスに常にPOSTバインディングを使用します。",
  "includeAuthnStatementHelp": "認証方式とタイムスタンプを含めたステートメントをログイン・レスポンスに含めるべきか設定します。",
  "includeOneTimeUseConditionHelp": "OneTimeUse条件をログイン・レスポンスに含めるべきか設定します。",
  "optimizeLookupHelp": "Keycloakアダプターによって保護されたSPのREDIRECTバインディングでSAMLドキュメントに署名する際、署名鍵のIDを<Extensions>要素のSAMLプロトコルメッセージに含める必要があるかどうかを設定します。これにより、検証のために既知のすべてのキーを試行する代わりに単一のキーを使用するため、署名の検証が最適化されます。",
  "signDocumentsHelp": "SAMLドキュメントをレルムで署名すべきか設定します。",
  "signAssertionsHelp": "SAMLドキュメント内のアサーションを署名すべきか設定します。もしドキュメントが既に署名済みの場合は、この設定は不要です。",
  "signatureAlgorithm": "ドキュメントの署名に使用する署名アルゴリズムです。",
  "signatureKeyNameHelp": "署名されたSAML文書には、KeyName要素の署名鍵の識別情報が含まれています。Keycloak / RH-SSOカウンター・パーティーの場合は、KEY_IDを使用し、MS AD FSの場合はCERT_SUBJECTを使用します。他のオプションが動作しない場合はNONEをチェックして使用します。",
  "canonicalizationHelp": "XML署名の正規化方式（Canonicalization Method）を設定します。",
  "webOriginsHelp": "許可されるCORSオリジンを設定します。有効なリダイレクトURIのすべてのオリジンを許可するには「+」を追加してください。ただし、これには「*」ワイルドカードは含まれません。すべてのオリジンを許可するには、明示的に「*」を追加してください。",
  "homeURL": "認証サーバーがクライアントへのリダイレクトまたは戻るリンクを必要とする際に使用するデフォルトURLを設定します。",
  "adminURLHelp": "クライアントの管理インターフェイスのURLを設定します。クライアントがアダプターのREST APIをサポートしている場合に設定してください。このREST APIにより、認証サーバーは無効化ポリシーや他の管理タスクをプッシュすることができます。通常、クライアントのベースURLを設定します。",
  "clientHelp": "認可リクエストを作成するクライアントを選択してください。提供されない場合は、認可リクエストは今いるページのクライアントで行われることになります。",
  "clientIdHelp": "アイデンティティー・プロバイダーで登録されているクライアント識別子を設定します。",
  "selectUser": "サーバーからパーミッションを検索するためにIDが使用されるユーザーを選択します。",
  "rolesHelp": "選択されたユーザーに関連付けたいロールを選択してください。",
  "contextualAttributesHelp": "実行環境や実行コンテキストによって提供される任意の属性を設定します。",
  "applyToResourceTypeHelp": "このパーミッションが、特定タイプの全リソースに適用されるべきかどうかを指定します。この場合、パーミッションは特定リソースタイプの全インスタンスに対して評価されます。",
  "resourcesHelp": "このパーミッションが適用されるリソース・インスタンスを指定します。",
  "scopesSelect": "このパーミッションは1つまたは複数のスコープに適用されるように指定してください。",
  "clientNameHelp": "クライアントの表示名を指定します。例えば、「My Client」です。ローカライズ用のキーもサポートしています。例: ${my_client}",
  "descriptionHelp": "クライアント・スコープの説明",
  "loginThemeHelp": "ログイン、OTP、グラント、登録、およびパスワード忘れに使用するページのテーマを選択します。",
  "encryptAssertionsHelp": "SAMLアサーションをクライアントの公開鍵でAESを使い暗号化すべきか設定します。",
  "clientSignatureHelp": "クライアントがSAMLリクエストとレスポンスを署名するか、そしてそれらを検証すべきどうかか設定します。",
  "expirationHelp": "イベントの有効期限を設定します。期限切れのイベントはデータベースから定期的に削除されます。",
  "countHelp": "このトークンを利用してクライアントをいくつ作成可能か指定します。",
  "client-authenticator-type": "Keycloakサーバーに対してこのクライアントの認証に使用するクライアント認証方式を設定します。",
  "registration-access-token": "登録用アクセストークンにより、クライアントはクライアント登録サービスにアクセスできます。",
  "effectiveProtocolMappersHelp": "すべてのデフォルトのクライアント・スコープと選択されたオプションのスコープが含まれます。クライアントに発行されたアクセストークンを生成するときに、すべてのクライアント・スコープのすべてのプロトコル・マッパーとロールスコープのマッピングが使用されます",
  "scopeParameterHelp": "このスコープ・パラメーターの値をコピー/ペーストし、このクライアント・アダプターから送信された最初のOpenID Connect認証リクエストで使用できます。このクライアントに発行されたトークンを生成するときは、デフォルトのクライアント・スコープと選択されたオプションのクライアント・スコープが使用されます",
  "userHelp": "必要に応じて、サンプルのアクセストークンを生成するユーザーを選択します。ユーザーを選択しないと、評価中にサンプルのアクセストークンは生成されません",
  "nodeReRegistrationTimeoutHelp": "登録されたクライアントをクラスターノードへ再登録する際の最大時間間隔を設定します。クラスターノードがこの時間内にKeycloakに再登録リクエストを送信しない場合は、Keycloakから登録解除されます。",
  "accessTokenSignatureAlgorithmHelp": "アクセストークンの署名に使用されるJWAアルゴリズム。",
  "idTokenSignatureAlgorithmHelp": "IDトークンの署名に使用されるJWAアルゴリズム。",
  "idTokenEncryptionKeyManagementAlgorithmHelp": "IDトークンの暗号化鍵の管理に使用されるJWAアルゴリズム。このオプションは、暗号化されたIDトークンが必要な場合に必須です。空のままにすると、IDトークンは署名されますが、暗号化されません。",
  "idTokenEncryptionContentEncryptionAlgorithmHelp": "IDトークンの暗号化の際に、コンテンツの暗号化に使用されるJWAアルゴリズム。このオプションは、暗号化されたIDトークンが必要な場合にのみ必須です。空のままにすると、IDトークンは署名されますが、暗号化されません。",
  "userInfoSignedResponseAlgorithmHelp": "署名付きUserInfoエンドポイントのレスポンスに使用するJWAアルゴリズムを設定します。「unsigned」に設定した場合は、UserInfoレスポンスは署名されず、application/json形式で返されます。",
  "requestObjectSignatureAlgorithmHelp": "クライアントが「request」または「request_uri」パラメーターで指定されたOIDCリクエスト・オブジェクトを送信する際に使用する必要がある、JWAアルゴリズムを設定します。「any」に設定した場合は、リクエスト・オブジェクトは任意のアルゴリズム（「none」を含む）で署名されます。",
  "requestObjectRequiredHelp": "クライアントが認可リクエストとともにリクエスト・オブジェクトを提供する必要があるかどうか、およびそのためにどの方法を使用できるかを指定します。「not required」に設定されている場合、リクエスト・オブジェクトの提供はオプションです。それ以外のケースでは、リクエスト・オブジェクトを提供する必要があります。「request」に設定されている場合、リクエスト・オブジェクトは値で提供される必要があります。「request_uri」に設定されている場合、リクエスト・オブジェクトは参照によって提供される必要があります。「requestまたはrequest_uri」に設定されている場合、いずれの方法も使用できます。",
  "idpInitiatedSsoUrlName": "IDP Initiated SSOを行う際にクライアントを参照するためのURLフラグメント名を設定します。空にするとIDP Initiated SSOは無効になります。ブラウザーから参照するURLは「{server-root}/realms/{realm}/protocol/saml/clients/{client-url-name}」になります。",
  "idpInitiatedSsoRelayStateHelp": "IDP Initiated SSOを行う際のSAMLリクエストで送信したいRelayStateを設定します。",
  "masterSamlProcessingUrlHelp": "設定された場合は、このURLがSPのアサーション・コンシューマーおよびシングル・ログアウト・サービスの両方のBindingに使われます。これは、SAMLエンドポイントの詳細設定にある各Bindingやサービスの設定にて個別に上書きすることができます。",
  "excludeSessionStateFromAuthenticationResponseHelp": "これがオンの場合、パラメーター「session_state」はOpenID Connect認証レスポンスに含まれません。クライアントが「session_state」パラメーターをサポートしていない古いOIDC / OAuth2アダプターを使用している場合に便利です。",
  "assertionLifespanHelp": "SAMLアサーション条件に設定された有効期限。その後、アサーションは無効になります。「SessionNotOnOrAfter」属性は変更されず、レルムレベルで定義された「SSOセッション最大」時間を引き続き使用します。",
  "accessTokenLifespanHelp": "アクセストークンが有効期限切れとなる最大時間です。この値はSSOタイムアウトと比べて短くすることをお勧めします。",
  "oAuthMutualHelp": "これにより、OAuth 2.0相互TLS証明書バインド・アクセストークンがサポートされます。つまり、Keycloakは、Keycloakのトークン・エンドポイントとこのクライアントの間で相互TLSにより交換されるクライアントのX.509証明書と、アクセストークンおよびリフレッシュ・トークンをバインドします。これらのトークンは、ベアラートークンの代わりにHolder-of-Keyトークンとして扱うことができます。",
  "keyForCodeExchangeHelp": "PKCEのどのコードチャレンジ方式を使用するかを選択します。指定しない場合、Keycloakは、クライアントが適切なコードチャレンジとコード交換の方式で認可リクエストを送信しない限り、クライアントにPKCEを適用しません。",
  "assertionConsumerServicePostBindingURLHelp": "アサーション・コンシューマー・サービス（ログイン・レスポンス）のSAML POSTバインディングURLを設定します。このBindingのためのURLがない場合は空でよいです。",
  "assertionConsumerServiceRedirectBindingURLHelp": "アサーション・コンシューマー・サービス（ログイン・レスポンス）のSAML RedirectバインディングURLを設定します。このBindingのためのURLがない場合は空でよいです。",
  "logoutServicePostBindingURLHelp": "シングル・ログアウト・サービスのSAMLPOSTバインディングURLを設定します。異なるBindingを使用している場合は空でよいです。",
  "logoutServiceRedirectBindingURLHelp": "シングル・ログアウト・サービスのSAMLRedirectバインディングURLを設定します。異なるBindingを使用している場合は空でよいです。",
  "frontchannelLogoutHelp": "有効の場合は、ログアウトはクライアントへのブラウザー・リダイレクトが必要になります。無効の場合は、サーバーはログアウトのバックグラウンド呼び出しを行います。",
  "authenticationOverridesHelp": "レルム認証フロー・バインディングをオーバーライドします。",
  "browserFlowHelp": "ブラウザー認証で使用したいフローを選択してください。",
  "directGrantHelp": "ダイレクト・グラント認証で使用したいフローを選択してください。",
  "certificateHelp": "クライアントで発行され、キーストアの秘密鍵で署名されたJWTを検証するためのクライアント証明書です。",
  "jwksUrlHelp": "JWK形式のクライアント鍵が格納されているURLを設定します。詳細はJWKの仕様を参照してください。「jwt」クレデンシャルを持つKeycloakクライアント・アダプターを使用している場合は、アプリケーションに「/k_jwks」という接尾辞を付けたURLを使用することができます。例えば、「http://www.myhost.com/myapp/k_jwks」です。",
  "archiveFormatHelp": "JavaキーストアまたはPKCS12アーカイブ形式",
  "keyAliasHelp": "秘密鍵と証明書のアーカイブ・エイリアスです。",
  "keyPasswordHelp": "アーカイブ内の秘密鍵にアクセスするためのパスワード",
  "storePasswordHelp": "アーカイブ自身にアクセスするためのパスワード",
  "consentRequired": "有効の場合は、ユーザーはクライアント・アクセスに同意する必要があります。",
  "import": "リソースサーバーの認可設定を含むJSONファイルをインポートします。",
  "policyEnforcementModeHelp": "ポリシー施行モードは、認可リクエストを評価する際に適用される方法を決定します。「Enforcing」は、与えられたリソースに関連するポリシーが存在しない場合でも、リクエストはデフォルトで拒否されることを意味します。「Permissive」は、与えられたリソースに関連するポリシーが存在しない場合でも、リクエストは許可されることを意味します。「Disabled」は、完全にポリシーの評価を無効にし、任意のリソースへのアクセスを許可します。",
  "decisionStrategyHelp": "決定戦略は、パーミッションの評価方法と最終的な判定の取得方法を決定します。「Affirmative」とは、リソースおよびそのスコープへのアクセスを許可するために、少なくとも1つのパーミッションが肯定的な判定に評価される必要があることを意味します。「Unanimous」とは、最終的な判定も肯定的であるために、すべてのパーミッションが肯定的な判定に評価される必要があることを意味します。",
  "allowRemoteResourceManagementHelp": "リソースは、リソースサーバーによりリモートで管理すべきかどうかを設定します。オフの場合は、リソースはこの管理コンソールだけで管理されます。",
  "resourceName": "このリソースの一意な名前。この名前は、リソースを一意に識別するために使用でき、特定のリソースを照会するときに便利です。",
  "typeHelp": "作成された各クライアントにデフォルト・スコープとして追加されるクライアント・スコープ",
  "urisHelp": "リソースによって保護されているURIのセット。",
  "scopesHelp": "認可リクエストの際に送信されるスコープです。スペース区切りでスコープのリストを設定します。デフォルトは「openid」です。",
  "fullScopeAllowedHelp": "全ての制限の無効を許可します。",
  "ownerManagedAccessHelp": "有効にすると、このリソースへのアクセスをリソースオーナーが管理できます。",
  "resourceAttribute": "リソースに関連付けられた属性。",
  "resetActions": "リセット・アクション",
  "lifespan": "有効期限",
  "scopeName": "このスコープのユニークな名前を設定します。名前はスコープの一意な識別に使用され、特定のスコープを照会する際に使用することができます。",
  "policy-name": "このポリシーの名前を設定します。",
  "policy-description": "このポリシーの説明を設定します。",
  "policyDecisionStagey": "決定戦略は、ポリシーの評価方法と最終的な判定方法を決定します。「Affirmative」は、最終判定がpositiveとなるためには、少なくとも1つのポリシーがpositiveと評価する必要がある、ということを意味します。「Unanimous」は、全体の判定がpositiveとなるためには、すべてのポリシーがpositiveと評価する必要がある、ということを意味します。「Consensus」は、positiveの数がnegativeの数より多くなければならないことを意味します。positiveとnegativeの数が同じ場合は、最終的な判定はnegativeになります。",
  "applyPolicyHelp": "このポリシーやパーミッションで定義されたスコープに適用するすべてのポリシーを設定します。",
  "policyClient": "このポリシーで許可されるクライアントを指定します。",
  "groupsClaimHelp": "定義されている場合、ポリシーは、パーミッションを要求するアイデンティティーを表すアクセストークンまたはIDトークン内の特定のクレームから、ユーザーのグループを取得します。定義されていない場合、ユーザーのグループはレルム設定から取得されます。",
  "policyGroups": "どのユーザーがこのポリシーで許可されるか指定してください。",
  "policyRoles": "このポリシーで許可されるクライアント・ロールを指定してください。",
  "startTime": "ポリシーを許可しない日時を定義します。現在日時がこの値より後か、等しい場合にのみ許可されます。",
  "expireTime": "ポリシーを許可しない日時を定義します。現在日時がこの値より前か、等しい場合にのみ許可されます。",
  "monthHelp": "ポリシーが許可される月を定義します。2番目のフィールドに値を入力して範囲を指定することもできます。この場合、現在の月が指定した2つの値の間にあるか、等しい場合のみ許可されます。",
  "dayMonth": "ポリシーが許可される日を定義します。2番目のフィールドに値を入力して範囲を指定することもできます。この場合、現在の日が指定した2つの値の間にあるか、等しい場合のみ許可されます。",
  "hourHelp": "ポリシーが許可される時を定義します。2番目のフィールドに値を入力して範囲を指定することもできます。この場合、現在の時が指定した2つの値の間にあるか、等しい場合のみ許可されます。",
  "minuteHelp": "ポリシーが許可される分を定義します。2番目のフィールドに値を入力して範囲を指定することもできます。この場合、現在の分が指定した2つの値の間にあるか、等しい場合のみ許可されます。",
  "policyCode": "このポリシーに対する条件を提供するJavaScriptコード。",
  "logicHelp": "ロジックは、ポリシーの判定方法を決定します。「Positive」の場合は、このポリシーの評価中に得られた結果（許可または拒否）が判定の実行に使用されます。「Negative」の場合は、結果は反転されます。つまり、許可は拒否になり、拒否は許可になります。",
  "permissionName": "このパーミッションの名前を設定します。",
  "permissionDescription": "このパーミッションの説明を設定します。",
  "permissionType": "このパーミッションが適用されるリソースタイプを指定します。",
  "permissionsEnabledHelp": "このロールを管理するために、きめ細かいパーミッションを有効にするかどうかを決定します。無効にすると、設定されている現在のパーミッションがすべて削除されます。",
  "clientScopeList": "クライアント・スコープ",
  "grantedClientScopes": "付与されたクライアント・スコープ",
  "includeInTokenScope": "トークンスコープに含める",
  "realmRolePrefix": "レルムロールのプレフィックス",
  "displayOnConsentScreen": "同意画面で表示する",
  "consentScreenText": "同意画面のテキスト",
  "name": "クライアント・スコープの名前。レルム内でユニークでなければなりません。スコープ・パラメーターの値として使用されるため、名前には空白文字を含めないでください",
  "protocolHelp": "このクライアント・スコープによって提供されているSSOプロトコル設定がどれか",
  "displayOnConsentScreenHelp": "オンで、同意が必要なクライアントにこのクライアント・スコープが追加された場合、「同意画面のテキスト」で指定されたテキストが同意画面に表示されます。オフの場合、このクライアント・スコープは同意画面に表示されません",
  "consentScreenTextHelp": "このクライアント・スコープが同意が必要なクライアントに追加された場合に、同意画面に表示されるテキスト。指定しない場合は、デフォルトでクライアント・スコープの名前になります",
  "includeInTokenScopeHelp": "オンの場合、このクライアント・スコープの名前がアクセストークン・プロパティーの「scope」と同様にトークン・イントロスペクション・エンドポイントのレスポンスに追加されます。オフの場合、このクライアント・スコープはトークンとトークン・イントロスペクション・エンドポイントのレスポンスから除外されます。",
  "guiOrder": "GUI（同意ページのような）でのプロバイダーの順序を整数で指定します。",
  "prefix": "各レルムロールのプレフィックスを設定します（オプション）。",
  "multiValued": "属性がマルチバリューをサポートしているかどうかを示します。サポートしている場合は、この属性のすべての値リストがクレームとして設定されます。サポートしていない場合は、最初の値だけがクレームとして設定されます。",
  "tokenClaimName": {
    "label": "トークンクレーム名",
    "tooltip": "トークン内に挿入するクレームの名前を設定します。「address.street」のように完全修飾名で設定します。この場合、ネストされたJSONオブジェクトが作成されます。ネスティングを防ぎ、ドットを文字通りに使用するには、ドットをバックスラッシュ（\\.）でエスケープします。"
  },
  "claimJsonType": "トークンへのJSONクレームの追加で使用されるJSONタイプを設定します。long、int、boolean、String、JSONが有効な値です。",
  "protocolMapper": "プロトコルです。",
  "createGroup": "グループの作成",
  "members": "メンバー",
  "email": "Eメール",
  "lastName": "姓",
  "firstName": "名",
  "associatedRolesText": "関連ロール",
  "title": "認証",
  "addRole": "ロールの追加",
  "roleName": "ロール名",
  "composite": "複合",
  "usersInRole": "ロールのユーザー",
  "addUser": "ユーザーの追加",
  "userName": "ユーザー名",
  "join": "参加",
  "groupMembership": "グループ・メンバーシップ",
  "createdAt": "作成日",
  "username": "ユーザー名",
  "emailVerified": "Eメールが確認済み",
  "status": "ステータス",
  "requiredUserActions": "必要なユーザー・アクション",
  "impersonate": "代理ログイン",
  "verifyEmail": "Eメールの確認",
  "consents": "同意",
  "identityProvider": "アイデンティティー・プロバイダー",
  "identityProviderLinks": "アイデンティティー・プロバイダーのリンク",
  "revoke": "無効化",
  "setPassword": "パスワードを設定",
  "credentialType": "タイプ",
  "credentialUserLabel": "ユーザーラベル",
  "credentialData": "データ",
  "resetPassword": "パスワードをリセット",
  "showPasswordDataValue": "値",
  "credentialResetBtn": "クレデンシャルのリセット",
  "hours": "時",
  "minutes": "分",
  "seconds": "秒",
  "credentialResetConfirm": "Eメールを送信",
  "temporaryLocked": "ユーザーは、ログインに複数回失敗したため、ロックされている可能性があります。",
  "emailVerifiedHelp": "ユーザーのEメールが確認済みかどうかを設定します。",
  "requiredUserActionsHelp": "ユーザーがログインするときに必要なアクションです。「Verify email」は、Eメールアドレスを確認するためのEメールをユーザーに送信します。「Update profile」は、新しい個人情報を入力する必要があります。「Update password」は、ユーザーが新しいパスワードを入力する必要があります。「Configure OTP」は、モバイル・パスワード・ジェネレーターの設定が必要です。",
  "groups": "メンバーであるグループです。グループから外すには、グループを選択して「外す」ボタンをクリックしてください。",
  "lastAccess": "最終アクセス",
  "adminEvents": "管理イベント",
  "time": "日時",
  "eventType": "イベントタイプ",
  "ipAddress": "IPアドレス",
  "realm": "レルム",
  "resourcePath": "リソースパス",
  "resourceTypes": "リソースタイプ",
  "operationType": "操作タイプ",
  "operationTypes": "操作タイプ",
  "auth": "認証",
  "representation": "Representation",
  "partialImport": "部分インポート",
  "partialExport": "部分エクスポート",
  "general": "一般",
  "login": "login",
  "themes": "テーマ",
  "eventListeners": "イベントリスナー",
  "eventListenersHelpText": "どのリスナーがレルムのイベントを受け取るか設定します。",
  "adminEventsSettings": "管理イベントの設定",
  "saveEvents": "イベントの保存",
  "clearAdminEvents": "管理イベントのクリア",
  "includeRepresentation": "Representationを含める",
  "from": "差出人",
  "fromDisplayName": "差出人の表示名",
  "replyTo": "返信先",
  "replyToDisplayName": "返信先の表示名",
  "envelopeFrom": "Envelope From",
  "host": "ホスト",
  "port": "ポート",
  "enableSSL": "SSLの有効",
  "enableStartTLS": "StartTLSの有効",
  "keystore": "キーストア",
  "providers": "プロバイダー",
  "algorithm": "アルゴリズム",
  "uiDisplayName": "コンソール表示名",
  "active": "アクティブ",
  "providerId": "ID",
  "kid": "Kid",
  "provider": "プロバイダー",
  "providerDescription": "プロバイダーの説明",
  "publicKeys": "公開鍵",
  "userRegistration": "ユーザー登録",
  "userRegistrationHelpText": "登録ページの有効/無効。ログインページに登録のリンクも表示されるようになります。",
  "forgotPassword": "パスワード忘れ",
  "rememberMe": "ログイン状態の保存",
  "rememberMeHelpText": "セッションの有効期限が切れるまではブラウザーの再起動でもログイン状態を保存するチェックボックスをログインページに表示します。",
  "registrationEmailAsUsername": "Eメールをユーザー名とする",
  "loginWithEmail": "Eメールでログイン",
  "loginWithEmailHelpText": "ユーザーがEメールアドレスでログインできるようにします。",
  "duplicateEmails": "メールの重複",
  "duplicateEmailsHelpText": "複数のユーザーが同じEメールアドレスを持つことを許可します。この設定を変更すると、ユーザーのキャッシュもクリアされます。重複するEメールアドレスのサポートを無効にした後で、データベース内の既存ユーザーのEメールの制約を手動で更新することをお勧めします。",
  "editUsername": "ユーザー名の編集",
  "htmlDisplayName": "HTML表示名",
  "frontendUrl": "フロントエンドURL",
  "requireSsl": "SSLの要求",
  "sslType": {
    "all": "全てのリクエスト",
    "external": "外部リクエスト",
    "none": "none"
  },
  "userManagedAccess": "User-Managed Access",
  "endpoints": "エンドポイント",
  "openIDEndpointConfiguration": "OpenIDエンドポイントの設定",
  "samlIdentityProviderMetadata": "SAML 2.0アイデンティティー・プロバイダー・メタデータ",
  "accountTheme": "アカウントテーマ",
  "adminTheme": "管理コンソールテーマ",
  "emailTheme": "Eメールテーマ",
  "SSOSessionIdle": "SSOセッション・アイドル",
  "SSOSessionMax": "SSOセッション最大",
  "SSOSessionIdleRememberMe": "SSOセッション・アイドル・リメンバーミー",
  "SSOSessionMaxRememberMe": "SSOセッション最大リメンバーミー",
  "clientSessionIdle": "クライアント・セッション・アイドル",
  "clientSessionMax": "クライアント・セッション最大",
  "offlineSessionIdle": "オフライン・セッション・アイドル",
  "offlineSessionMaxLimited": "オフライン・セッション最大制限",
  "offlineSessionMax": "オフライン・セッション最大",
  "loginTimeout": "ログイン・タイムアウト",
  "loginActionTimeout": "ログイン・アクション・タイムアウト",
  "defaultSigAlg": "デフォルトの署名アルゴリズム",
  "revokeRefreshToken": "リフレッシュ・トークンの無効化",
  "refreshTokenMaxReuse": "リフレッシュ・トークンの最大再利用回数",
  "accessTokenLifespanImplicitFlow": "インプリシット・フローにおけるアクセストークン生存期間",
  "clientLoginTimeout": "クライアントのログイン・タイムアウト",
  "userInitiatedActionLifespan": "ユーザー起動アクションの有効期間",
  "defaultAdminInitiated": "デフォルトの管理者起動アクションの有効期間",
  "executeActions": "アクションの実行",
  "clientProfileDescription": "説明",
  "tokens": "トークン",
  "supportedLocales": "サポートされるロケール",
  "defaultLocale": "デフォルト・ロケール",
  "validatorDialogColNames": {
    "colName": "ロール名"
  },
  "validatorColNames": {
    "colConfig": "設定"
  },
  "eventTypes": {
    "IMPERSONATE": {
      "name": "代理ログイン"
    },
    "LOGOUT": {
      "name": "ログアウト"
    },
    "REGISTER": {
      "name": "登録"
    },
    "RESET_PASSWORD": {
      "name": "パスワードをリセット"
    }
  },
  "deleteEvents": "イベントのクリア",
  "defaultRoles": "デフォルトロール",
  "defaultGroups": "デフォルト・グループ",
  "securityDefences": "セキュリティー防御",
  "headers": "ヘッダー",
  "bruteForceDetection": "ブルートフォースの検出",
  "xFrameOptions": "X-Frame-Options",
  "contentSecurityPolicy": "Content-Security-Policy",
  "contentSecurityPolicyReportOnly": "Content-Security-Policy-Report-Only",
  "xContentTypeOptions": "X-Content-Type-Options",
  "xRobotsTag": "X-Robots-Tag",
  "xXSSProtection": "X-XSS-Protection",
  "strictTransportSecurity": "HTTP Strict Transport Security（HSTS）",
  "failureFactor": "最大ログイン失敗回数",
  "permanentLockout": "永久ロックアウト",
  "waitIncrementSeconds": "連続失敗時の待機時間",
  "maxFailureWaitSeconds": "最大待機時間",
  "maxDeltaTimeSeconds": "ログイン失敗回数のリセット時間",
  "minimumQuickLoginWaitSeconds": "クイックログイン失敗時の最小待機時間",
  "fromDisplayNameHelp": "差出人のアドレスのユーザー・フレンドリーな名前です（オプション）。",
  "replyToDisplayNameHelp": "返信先のアドレスのユーザー・フレンドリーな名前です（オプション）。",
  "envelopeFromHelp": "バウンスに使用されるEメールアドレス（オプション）。",
  "passwordHelp": "SMTPパスワード。このフィールドは、ボールトから値を取得できます。${vault.ID}形式を使用します。",
  "frontendUrlHelp": "レルムのフロントエンドURLを設定します。デフォルトのホスト名プロバイダーと組み合わせて使用し、特定のレルムのフロントエンド・リクエストのベースURLをオーバーライドします。",
  "requireSslHelp": "HTTPSが必須かどうか。「なし」は、HTTPSがどのIPアドレスのクライアントにも要求されないことを意味します。「外部リクエスト」は、ローカルホストとプライベートIPアドレスのクライアントがHTTPSなしでアクセスできることを意味します。「すべてのリクエスト」は、HTTPSがすべてのIPアドレスのクライアントに要求されることを意味します。",
  "userManagedAccessHelp": "有効にすると、ユーザーはアカウント管理コンソールを使用してリソースとパーミッションを管理できます。",
  "endpointsHelp": "プロトコル・エンドポイントの設定を表示します。",
  "accountThemeHelp": "ユーザー・アカウント管理画面のテーマを選択します。",
  "adminThemeHelp": "管理コンソールのテーマを選択します。",
  "emailThemeHelp": "サーバーから送信されるEメールのテーマを選択します。",
  "save-user-events": "有効の場合は、ログインイベントがデータベースに保存され、管理コンソールとアカウント管理で使用することができます。",
  "save-admin-events": "有効の場合は、管理イベントがデータベースに保存され、管理コンソールで使用可能になります。",
  "admin-clearEvents": "データベース内のすべての管理イベントを削除します。",
  "includeRepresentationHelp": "作成または更新リクエストのJSON Representationを含めるかどうかを設定します。",
  "failureFactorHelp": "検出するまでの失敗回数です。",
  "permanentLockoutHelp": "最大ログイン失敗回数を超えたときに、ユーザーを永久にロックします。",
  "waitIncrementSecondsHelp": "失敗回数が閾値に達した場合、どれくらいの時間ユーザーはロックアウトされるか設定します。",
  "maxFailureWaitSecondsHelp": "ユーザーがロックアウトされる最大待機時間を設定します。",
  "maxDeltaTimeSecondsHelp": "いつ失敗回数がリセットされるか設定します。",
  "quickLoginCheckMilliSeconds": "クイックログイン失敗があまりにも頻繁に発生した場合は、ユーザーをロックアウトします。",
  "minimumQuickLoginWaitSecondsHelp": "クイックログイン失敗後にどれくらいの時間待機するか設定します。",
  "ssoSessionIdle": "セッションの有効期限が切れるまでのアイドル時間です。セッションの有効期限が切れると、トークンとブラウザー・セッションは無効化されます。",
  "ssoSessionMax": "セッションの有効期限が切れるまでの最大時間です。セッションの有効期限が切れると、トークンとブラウザー・セッションは無効化されます。",
  "ssoSessionIdleRememberMe": "リメンバーミー・セッションの有効期限が切れるまでのアイドル時間です。セッションが期限切れになると、トークンおよびブラウザー・セッションは無効になります。設定されていない場合は、標準のSSOセッション・アイドル値が使用されます。",
  "clientSessionIdleHelp": "クライアント・セッションが期限切れになるまでアイドル状態にできる時間。トークンは、クライアント・セッションが期限切れになると無効になります。設定しない場合、標準のSSOセッション・アイドルの値が使用されます。",
  "offlineSessionIdleHelp": "セッションの有効期限が切れるまでのオフライン時間です。この期限内に少なくとも1回はオフライン・トークンを使用してリフレッシュしないと、オフライン・セッションは有効期限切れとなります。",
  "defaultSigAlgHelp": "このレルムでトークンの署名に使用されるデフォルトのアルゴリズム",
  "revokeRefreshTokenHelp": "有効にすると、リフレッシュ・トークンは「リフレッシュ・トークンの最大再利用回数」までしか使用できず、別のトークンが使用されると無効化されます。無効にすると、リフレッシュ・トークンは使用後に無効化されず、複数回使用できます。",
  "refreshTokenMaxReuseHelp": "リフレッシュ・トークンを再利用できる最大回数。別のトークンが使用された場合、即時に無効化されます。",
  "clientLoginTimeoutHelp": "クライアントがアクセストークン・プロトコルを終了するまでの最大時間。これは通常1分です。",
  "editUsernameHelp": "有効の場合はユーザー名フィールドが編集可能になり、そうでない場合は読み取り専用になります。",
  "flows": "フロー",
  "requiredActions": "必須アクション",
  "passwordPolicy": "パスワード・ポリシー",
  "otpPolicy": "OTPポリシー",
  "webauthnPolicy": "WebAuthnポリシー",
  "webauthnPasswordlessPolicy": "WebAuthnパスワードレス・ポリシー",
  "webAuthnPolicyRpEntityName": "リライング・パーティー・エンティティー名",
  "otpType": "OTPタイプ",
  "policyType": {
    "totp": "タイムベース",
    "hotp": "カウンターベース"
  },
  "otpHashAlgorithm": "OTPハッシュ・アルゴリズム",
  "otpPolicyDigits": "桁数",
  "otpPolicyPeriod": "OTPトークンの期間",
  "initialCounter": "初期カウンター",
  "webAuthnPolicySignatureAlgorithms": "署名アルゴリズム",
  "webAuthnPolicyRpId": "リライング・パーティー・エンティティーID",
  "webAuthnPolicyAttestationConveyancePreference": "期待する構成証明伝達",
  "attestationPreference": {
    "none": "none"
  },
  "webAuthnPolicyAuthenticatorAttachment": "オーセンティケーター・アタッチメント",
  "webAuthnPolicyRequireResidentKey": "常駐鍵が必要",
  "webAuthnPolicyUserVerificationRequirement": "ユーザー検証要件",
  "webAuthnPolicyCreateTimeout": "タイムアウト",
  "webAuthnPolicyAvoidSameAuthenticatorRegister": "オーセンティケーターの重複登録回避",
  "webAuthnPolicyAcceptableAaguids": "許容可能なAAGUID",
  "webAuthnPolicyExtraOrigins": "エクストラオリジンズ",
  "addOrigins": "オリジンを追加",
  "default": "DEFAULT",
  "flow": {
    "browser": "ブラウザーフロー",
    "registration": "登録フロー",
    "direct grant": "ダイレクト・グラント・フロー"
  },
  "flowType": "フロータイプ",
  "flow-type": {
    "basic-flow": "generic",
    "form-flow": "form"
  },
  "addExecution": "エグゼキューションを追加",
  "requirement": "必要条件",
  "requirements": {
    "DISABLED": "無効"
  },
  "alias": "エイリアス",
  "flowTypeHelp": "どの種類のフォームかを設定します。",
  "topLevelFlowType": "どの種類のトップレベル・フローを作成するか設定します。「client」タイプは、クライアント（アプリケーション）の認証で使用します。「generic」はユーザーと他のすべてで使用します。",
  "aliasHelp": "エイリアスは一意にアイデンティティー・プロバイダーを識別するもので、リダイレクトURIの構築にも使用されます。",
  "otpTypeHelp": "「totp」はタイムベースのワンタイム・パスワードです。「hotp」は、サーバーでハッシュに対してカウンターを保持するカウンターベースのワンタイム・パスワードです。",
  "webAuthnPolicyRpEntityNameHelp": "WebAuthnリライング・パーティーとしての人間が読み取れるサーバー名",
  "otpHashAlgorithmHelp": "OTPを生成するのにどのハッシュ・アルゴリズムを使用するか設定します。",
  "otpPolicyDigitsHelp": "OTPの桁数を設定します。",
  "otpPolicyPeriodHelp": "OTPトークンが有効な秒数を設定します。デフォルトは30秒です。",
  "supportedApplications": "現在のOTPポリシーで動作することが分かっているアプリケーション",
  "webAuthnPolicyFormHelp": "WebAuthn認証のポリシー。これは、「WebAuthn Register」必須アクションと「WebAuthn Authenticator」オーセンティケーターで使用されます。一般的な用途は、2要素認証にWebAuthnを使用する場合です。",
  "webAuthnPolicyPasswordlessFormHelp": "パスワードレスWebAuthn認証のポリシー。これは、「Webauthn Register Passwordless」必須アクションおよび「WebAuthn Passwordless Authenticator」オーセンティケーターによって使用されます。一般的な使用法は、WebAuthnが一要素認証として使用される場合です。「WebAuthnポリシー」と「WebAuthnパスワードレス・ポリシー」の両方を使用すると、WebAuthnを同じレルムの第1要素オーセンティケーターと第2要素オーセンティケーターの両方として使用できます。",
  "webAuthnPolicySignatureAlgorithmsHelp": "認証アサーションに使用する署名アルゴリズム。",
  "webAuthnPolicyRpIdHelp": "これは、WebAuthnリライング・パーティーとしてのIDです。オリジンの有効なドメインでなければなりません。",
  "webAuthnPolicyAttestationConveyancePreferenceHelp": "認証ステートメントを生成する方法の優先権をオーセンティケーターに通知します。",
  "webAuthnPolicyAuthenticatorAttachmentHelp": "受け入れ可能なアタッチメント・パターンでオーセンティケーターと通信します。",
  "webAuthnPolicyRequireResidentKeyHelp": "これは、オーセンティケーターに公開鍵クレデンシャルを常駐鍵として作成するかどうかを指示します。",
  "webAuthnPolicyUserVerificationRequirementHelp": "ユーザーを実際に検証することを確認するためにオーセンティケーターと通信します。",
  "webAuthnPolicyCreateTimeoutHelp": "ユーザーの公開鍵クレデンシャルの作成に対するタイムアウト値（秒単位）。0に設定すると、このタイムアウト・オプションは適応されません。",
  "webAuthnPolicyAvoidSameAuthenticatorRegisterHelp": "すでに登録されているオーセンティケーターの登録を避けるかどうかを設定します。",
  "webAuthnPolicyAcceptableAaguidsHelp": "登録可能なオーセンティケーターのAAGUIDのリスト。",
  "webAuthnPolicyExtraOriginsHelp": "非 Web アプリケーションの追加オリジンのリスト。",
  "unlinkUsers": "ユーザーのリンクを解除する",
  "removeImported": "インポートを削除",
  "vendor": "ベンダー",
  "connectionURL": "接続URL",
  "enableStartTls": "StartTLSの有効",
  "useTruststoreSpi": "トラストストアSPIを使用",
  "connectionPooling": "接続プーリング",
  "connectionTimeout": "接続タイムアウト",
  "bindType": "バインドタイプ",
  "bindDn": "バインドDN",
  "editMode": "編集モード",
  "usersDN": "ユーザーDN",
  "usernameLdapAttribute": "ユーザー名のLDAP属性",
  "rdnLdapAttribute": "RDN LDAP属性",
  "uuidLdapAttribute": "UUID LDAP属性",
  "userObjectClasses": "ユーザー・オブジェクト・クラス",
  "searchScope": "検索スコープ",
  "readTimeout": "読み取りタイムアウト",
  "pagination": "ページネーション",
  "importUsers": "ユーザーのインポート",
  "batchSize": "バッチサイズ",
  "periodicFullSync": "定期的なフル同期",
  "fullSyncPeriod": "フル同期の周期",
  "periodicChangedUsersSync": "定期的な変更ユーザーの同期",
  "changedUsersSyncPeriod": "変更ユーザーの同期周期",
  "kerberosIntegration": "Kerberosと統合",
  "allowKerberosAuthentication": "Kerberos認証を許可",
  "useKerberosForPasswordAuthentication": "パスワード認証にKerberosを使用",
  "cacheSettings": "キャッシュ設定",
  "cachePolicy": "キャッシュ・ポリシー",
  "evictionDay": "エビクションの日",
  "evictionHour": "エビクションの時",
  "evictionMinute": "エビクションの分",
  "maxLifespan": "最大生存期間",
  "validatePasswordPolicy": "パスワード・ポリシーの検証",
  "trustEmail": "Eメールを信頼",
  "requiredSettings": "必要な設定",
  "kerberosRealm": "Kerberosレルム",
  "serverPrincipal": "サーバー・プリンシパル",
  "debug": "デバッグ",
  "allowPasswordAuthentication": "パスワード認証を許可",
  "testAuthentication": "認証テスト",
  "ldapMappersList": "LDAPマッパー",
  "ldapFilter": "LDAPフィルター",
  "selectRole": {
    "label": "ロールの選択",
    "tooltip": "左側にあるテキストボックスにロールを入力するか、ブラウズして必要なロールを選択するためにこのボタンをクリックしてください。"
  },
  "vendorHelp": "LDAPベンダー（プロバイダー）",
  "consoleDisplayConnectionUrlHelp": "LDAPサーバーへの接続URL",
  "connectionTimeoutHelp": "LDAP接続タイムアウト（ミリ秒単位）",
  "bindCredentialsHelp": "LDAP管理者のパスワードを設定します。このフィールドは、ボールトから値を取得できます。${vault.ID}形式を使用します。",
  "editModeLdapHelp": "READ_ONLYの場合、LDAPストアに読み取り専用でアクセスします。WRITABLEは、必要に応じてデータをLDAPに同期させることを意味します。UNSYNCEDは、ユーザーデータをインポートするが、LDAPに同期しないことを意味します。",
  "fullSyncPeriodHelp": "フル同期の周期を秒で設定します。",
  "changedUsersSyncHelp": "変更または新規作成されたLDAPユーザーの同期周期を秒で設定します。",
  "trustEmailHelp": "有効とした場合は、このレルムでEメールの確認が有効となっている場合でも、このプロバイダーが提供するEメールは確認されなくなります。",
  "debugHelp": "Krb5LoginModuleの標準出力へのデバッグロギングの有効/無効を設定します。",
  "allowPasswordAuthenticationHelp": "Kerberosデータベースに対するユーザー名/パスワード認証の有効/無効を設定します。",
  "updateFirstLoginHelp": "初回ログイン時のプロファイル更新の有効/無効を設定します。",
  "addIdPMapper": "アイデンティティー・プロバイダー・マッパーを追加",
  "redirectURI": "リダイレクトURI",
  "ssoServiceUrl": "シングル・サインオン・サービスのURL",
  "singleLogoutServiceUrl": "シングル・ログアウト・サービスのURL",
  "nameIdPolicyFormat": "Name IDポリシー・フォーマット",
  "unspecified": "未定義",
  "principalType": "プリンシパル・タイプ",
  "principalAttribute": "プリンシパル属性",
  "httpPostBindingResponse": "HTTP-POSTバインディング・レスポンス",
  "httpPostBindingAuthnRequest": "AuthnRequestのHTTP-POSTバインディング",
  "httpPostBindingLogout": "HTTP-POSTバインディング・ログアウト",
  "wantAuthnRequestsSigned": "AuthnRequestの署名が必要",
  "samlSignatureKeyName": "SAML署名鍵名",
  "wantAssertionsSigned": "アサーションの署名が必要",
  "wantAssertionsEncrypted": "アサーションの暗号化が必要",
  "forceAuthentication": "認証を強制",
  "validatingX509Certs": "検証用のX509証明書",
  "authorizationUrl": "認可URL",
  "passLoginHint": "login_hintを渡す",
  "passCurrentLocale": "現在のロケールを渡す",
  "tokenUrl": "トークンURL",
  "logoutUrl": "ログアウトURL",
  "backchannelLogout": "バックチャンネル・ログアウト",
  "disableUserInfo": "UserInfoの無効",
  "userInfoUrl": "UserInfo URL",
  "issuer": "発行者（Issuer）",
  "prompt": "プロンプト（prompt）",
  "prompts": {
    "none": "none",
    "consent": "consent",
    "login": "login"
  },
  "clientAuthentications": {
    "client_secret_post": "POSTで送信されたクライアント・シークレット",
    "client_secret_basic": "基本認証で送信されたクライアント・シークレット",
    "client_secret_jwt": "JWTでクライアント・シークレット",
    "private_key_jwt": "秘密鍵で署名されたJWT"
  },
  "clientAssertionSigningAlg": "クライアントアサーション署名アルゴリズム",
  "algorithmNotSpecified": "アルゴリズムの指定なし",
  "acceptsPromptNone": "クライアントから転送されるprompt=noneを受け入れる",
  "validateSignature": "署名検証",
  "allowedClockSkew": "許容されるクロックスキュー",
  "forwardParameters": "転送されるクエリー・パラメーター",
  "storeTokens": "トークンの格納",
  "storedTokensReadable": "読み取り可能なトークンを格納",
  "accountLinkingOnly": "アカウントのリンクのみ",
  "hideOnLoginPage": "ログインページで非表示",
  "firstBrokerLoginFlowAlias": "初回ログインフロー",
  "postBrokerLoginFlowAlias": "ログイン後のフロー",
  "syncMode": "同期モード",
  "syncModes": {
    "inherit": "継承",
    "import": "インポート",
    "legacy": "レガシー",
    "force": "強制"
  },
  "syncModeOverride": "同期モードのオーバーライド",
  "userAttribute": "ユーザー属性",
  "redirectURIHelp": "アイデンティティー・プロバイダーの設定で使用するリダイレクトURIです。",
  "displayName": "アイデンティティー・プロバイダーの分かりやすい名前を設定します。",
  "clientSecretHelp": "アイデンティティー・プロバイダーで登録されているクライアント・シークレットを設定します。このフィールドは、ボールトから値を取得できます。${vault.ID}形式を使用します。",
  "discoveryEndpoint": "リモートIDPディスカバリー・ディスクリプターよりメタデータをインポートします。",
  "importConfig": "ダウンロードしたIDPディスカバリー・ディスクリプターよりメタデータをインポートします。",
  "passLoginHintHelp": "アイデンティティー・プロバイダーにlogin_hintを渡します。",
  "passCurrentLocaleHelp": "現在のロケールをui_localesパラメーターとしてアイデンティティー・プロバイダーに渡します。",
  "logoutUrlHelp": "外部IDPからユーザーのログアウトに使用するセッション終了エンドポイントを設定します。",
  "backchannelLogoutHelp": "外部IDPがバックチャンネル・ログアウトをサポートするどうかを設定します。",
  "disableUserInfoHelp": "追加のユーザー情報を取得するUserInfoサービスの使用を無効にするかどうかを設定します。デフォルトではこのOIDCサービスを使用します。",
  "userInfoUrlHelp": "UserInfoのURLを設定します。これはオプションです。",
  "issuerHelp": "レスポンス内の発行者の識別子（Issuer Identifier）を設定します。未設定の場合は、検証は実行されません。",
  "acceptsPromptNoneHelp": "これは、アイデンティティー・プロバイダー・オーセンティケーターとともに使用されるか、またはkc_idp_hintがこのアイデンティティー・プロバイダーを指す場合に使用されます。クライアントがprompt=noneでリクエストを送信し、ユーザーがまだ認証されていない場合、エラーは直接クライアントに返されませんが、prompt=noneのリクエストはこのアイデンティティー・プロバイダーに転送されます。",
  "validateSignatureHelp": "外部IDPの署名検証の有効/無効を設定します。",
  "useJwksUrlHelp": "有効とした場合は、アイデンティティー・プロバイダーの公開鍵が指定されたJWKS URLからダウンロードされます。アイデンティティー・プロバイダーが新しい鍵ペアを生成する際に、新しい鍵が常に再ダウンロードされるため、柔軟性が大幅に向上します。無効とした場合は、Keycloak DBの公開鍵（または証明書）が使用されるため、アイデンティティー・プロバイダーの鍵ペアが変更された際には、常にKeycloak DBに新しい鍵をインポートする必要があります。",
  "allowedClockSkewHelp": "アイデンティティー・プロバイダーのトークンの検証時に許容されるクロックスキュー（秒単位）。デフォルト値は0です。",
  "forwardParametersHelp": "最初のアプリケーションへのリクエストから取得し、外部IDPの認可エンドポイントへ転送されるOpenID Connect/OAuth標準以外のクエリー・パラメーター。複数のパラメーターをカンマ（,）で区切って入力できます。",
  "clientAuthenticationHelp": "クライアント認証方法（参照：https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication）。秘密鍵で署名されたJWTの場合、レルム秘密鍵が使用されます。",
  "clientAssertionSigningAlgHelp": "クライアント認証でJWTアサーションを利用するときの署名アルゴリズム。クライアント認証が 秘密鍵で署名されたJWT もしくは JWTでクライアント・シークレット の場合に設定します。アルゴリズムの指定をしなかった場合、 秘密鍵で署名されたJWT ではRS256 JWTでクライアント・シークレット ではHS256のアルゴリズムが使用されます。",
  "storeTokensHelp": "ユーザー認証後のトークン格納の有効/無効を設定します。",
  "storedTokensReadableHelp": "新しいユーザーが格納されたトークンを読み取り可能かどうかの有効/無効設定です。broker.read-tokenロールをアサインします。",
  "accountLinkingOnlyHelp": "オンの場合、ユーザーはこのプロバイダーからログインできません。このプロバイダーにリンクすることのみできます。これは、プロバイダーからのログインを許可したくないが、プロバイダーと統合したい場合に便利です",
  "hideOnLoginPageHelp": "非表示の場合、明示的に要求されていれば（例えば、「kc_idp_hint」パラメーターを使用していれば）、このプロバイダーによるログインが可能です。",
  "firstBrokerLoginFlowAliasHelp": "このアイデンティティー・プロバイダーでの初回ログイン後に起動させる認証フローのエイリアスです。「初回ログイン」という用語は、認証したアイデンティティー・プロバイダー・アカウントに現在関連付けられているKeycloakアカウントがない状態であることを意味します。",
  "syncModeHelp": "すべてのマッパーのデフォルトの同期モード。同期モードは、マッパーを使用してユーザーデータを同期するタイミングを決定します。可能な値は次のとおりです。このオプションが導入される前の動作を維持する「レガシー」、このアイデンティティー・プロバイダーを使用したユーザーの初回ログイン時に一度だけユーザーをインポートする「インポート」、このアイデンティティー・プロバイダーでログインするたびにユーザーを常に更新する「強制」。",
  "useEntityDescriptor": "リモートIDPのSAMLエンティティー・ディスクリプターからメタデータをインポートします。",
  "samlEntityDescriptor": "外部IDPメタデータを設定ファイルよりロード、またはURLよりダウンロードして設定します。",
  "ssoServiceUrlHelp": "認証リクエスト（SAML AuthnRequest）の送信に使用するURLを設定します。",
  "singleLogoutServiceUrlHelp": "ログアウト・リクエストの送信に使用するURLを設定します。",
  "principalTypeHelp": "アサーションから外部ユーザーを識別し、追跡する方法。デフォルトではSubject NameIDを使用しますが、識別属性を設定することもできます。",
  "principalAttributeHelp": "外部ユーザーを識別するために使用される属性の名前またはフレンドリー名。",
  "httpPostBindingResponseHelp": "HTTP-POSTバインディングを使用してリクエストに応答するかどうかを設定します。オフの場合は、HTTP-REDIRECTバインディングが使用されます。",
  "httpPostBindingAuthnRequestHelp": "HTTP-POSTバインディングを使用してAuthnRequestを送信するかどうかを設定します。オフの場合は、HTTP-REDIRECTバインディングが使用されます。",
  "wantAuthnRequestsSignedHelp": "アイデンティティー・プロバイダーが署名付きAuthnRequestを要求するかどうかを設定します。",
  "wantAssertionsSignedHelp": "このサービス・プロバイダーが署名付きアサーションを要求するかどうかを設定します。",
  "wantAssertionsEncryptedHelp": "このサービス・プロバイダーが暗号化されたアサーションを期待するかどうかを設定します。",
  "forceAuthenticationHelp": "アイデンティティー・プロバイダーが以前のセキュリティー・コンテキストに頼るのではなく、プレゼンターを直接認証すべきかどうかを設定します。",
  "validateSignatures": "SAMLレスポンスの署名検証の有効/無効を設定します。",
  "validatingX509CertsHelp": "署名の確認に使用するPEM形式の証明書を設定します。",
  "addIdpMapperName": "マッパーの名前です。",
  "syncModeOverrideHelp": "このマッパーのIDPのデフォルトの同期モードをオーバーライドします。値は次のとおりです。このオプションが導入される前の動作を維持する「レガシー」、このアイデンティティー・プロバイダーを使用したユーザーの初回ログイン時に一度だけユーザーをインポートする「インポート」、このアイデンティティー・プロバイダーでログインするたびにユーザーを常に更新する「強制」、このマッパーのアイデンティティー・プロバイダーで定義された同期モードを使用する「継承」。",
  "selectARole": "ロールを選択してください",
  "usermodel": {
    "prop": {
      "label": "プロパティー",
      "tooltip": "UserModelインターフェイスのプロパティー・メソッドの名前です。例えば、「email」の値はUserModel.getEmail()メソッドを参照しています。"
    },
    "attr": {
      "label": "ユーザー属性",
      "tooltip": "格納されるユーザー属性名、UserMode.attributeマップ内の属性名です。"
    },
    "clientRoleMapping": {
      "clientId": {
        "label": "クライアントID",
        "tooltip": "ロールマッピング用のクライアントID。このクライアントのクライアント・ロールだけがトークンに追加されます。これが設定されていない場合は、すべてのクライアントのクライアント・ロールがトークンに追加されます。"
      },
      "rolePrefix": {
        "label": "クライアント・ロールのプレフィックス",
        "tooltip": "各クライアント・ロールのプレフィックスを設定します（オプション）。"
      },
      "tokenClaimName": {
        "tooltip": "トークン内に挿入するクレームの名前を設定します。「address.street」のように完全修飾名で設定します。この場合、ネストされたJSONオブジェクトが作成されます。ネスティングを防ぎ、ドットを文字通りに使用するには、ドットをバックスラッシュ（\\.）でエスケープします。特別なトークン${client_id}を使うことができ、これは実際のクライアントIDに置き換えられます。使用例は「resource_access.${client_id}.roles」です。これは、すべてのクライアントからロールを追加する場合（特に「Client ID」スイッチが設定されていない場合）や、各クライアントのクライアント・ロールを別々の場所に保存する場合に、特に便利です。"
      }
    },
    "realmRoleMapping": {
      "rolePrefix": {
        "label": "レルムロールのプレフィックス",
        "tooltip": "各レルムロールのプレフィックスを設定します（オプション）。"
      }
    }
  },
  "userSession": {
    "modelNote": {
      "label": "ユーザー・セッション・ノート",
      "tooltip": "UserSessionModel.noteマップ内のユーザー・セッション・ノート名です。"
    }
  },
  "multivalued": {
    "label": "マルチバリュー",
    "tooltip": "属性がマルチバリューをサポートしているかどうかを示します。サポートしている場合は、この属性のすべての値リストがクレームとして設定されます。サポートしていない場合は、最初の値だけがクレームとして設定されます。"
  },
  "aggregate": {
    "attrs": {
      "label": "属性値の集約",
      "tooltip": "属性値をグループ属性と集約する必要があるかどうかを示します。OpenID Connectマッパーを使用している場合は、すべての値を取得するためにマルチバリューのオプションも有効にする必要があります。重複した値は破棄され、値の順序はこのオプションでは保証されません。"
    }
  },
  "jsonType": {
    "label": "クレームJSONタイプ",
    "tooltip": "トークンへのJSONクレームの追加で使用されるJSONタイプを設定します。long、int、boolean、String、JSONが有効な値です。"
  },
  "includeInIdToken": {
    "label": "IDトークンに追加",
    "tooltip": "クレームをIDトークンに追加すべきかどうかを設定します。"
  },
  "includeInAccessToken": {
    "label": "アクセストークンに追加",
    "tooltip": "クレームをアクセストークンに追加すべきかどうかを設定します。"
  },
  "includeInUserInfo": {
    "label": "UserInfoに追加",
    "tooltip": "クレームをUserInfoに追加すべきかどうかを設定します。"
  },
  "sectorIdentifierUri": {
    "label": "セクター識別子URI",
    "tooltip": "pairwise sub値を使用し、かつ動的クライアント登録をサポートするプロバイダーは、sector_identifier_uriパラメーターを使用すべきです（SHOULD）。これは、共通の管理下にあるWebサイト群に対し、個々のドメイン名とは独立してparwise sub値の一貫性を保持する方法を提供します。また、クライアントに対し、すべてのユーザーを再登録させることなしにredirect_uriを変更する方法も提供します。"
  },
  "pairwiseSubAlgorithmSalt": {
    "label": "ソルト",
    "tooltip": "ペアワイズ対象識別子を計算する際に使用するソルトを設定します。空白のままにするとソルトは生成されます。"
  },
  "addressClaim": {
    "street": {
      "label": "その他住所のユーザー属性名",
      "tooltip": "「address」トークンクレーム内の「street_address」サブクレームにマップするために使用されるユーザー属性の名前。デフォルトは「street」です。"
    },
    "locality": {
      "label": "市区町村のユーザー属性名",
      "tooltip": "「address」トークンクレーム内の「locality」サブクレームにマップするために使用されるユーザー属性の名前。デフォルトは「locality」です。"
    },
    "region": {
      "label": "都道府県のユーザー属性名",
      "tooltip": "「address」トークンクレーム内の「region」サブクレームにマップするために使用されるユーザー属性の名前。デフォルトは「region」です。"
    },
    "postal_code": {
      "label": "郵便番号のユーザー属性名",
      "tooltip": "「address」トークンクレーム内の「postal_code」サブクレームにマップするために使用されるユーザー属性の名前。デフォルトは「postal_code」です。"
    },
    "country": {
      "label": "国のユーザー属性名",
      "tooltip": "「address」トークンクレーム内の「country」サブクレームにマップするために使用されるユーザー属性の名前。デフォルトは「country」です。"
    },
    "formatted": {
      "label": "整形された住所のユーザー属性名",
      "tooltip": "「address」トークンクレーム内の「formatted」サブクレームにマップするために使用されるユーザー属性の名前。デフォルトは「formatted」です。"
    }
  },
  "included": {
    "client": {
      "audience": {
        "label": "含まれるクライアント・オーディエンス",
        "tooltip": "指定されたオーディエンス・クライアントのクライアントIDが、トークンのオーディエンス（aud）フィールドに含まれます。トークンに既存のオーディエンスが存在する場合は、指定された値が単にそれらに追加されます。既存のオーディエンスを上書きすることはありません。"
      }
    },
    "custom": {
      "audience": {
        "label": "含まれるカスタム・オーディエンス",
        "tooltip": "これは「含まれるクライアント・オーディエンス」が入力されていない場合にのみ使用されます。指定された値が、トークンのオーディエンス（aud）フィールドに含まれます。トークンに既存のオーディエンスが存在する場合は、指定された値が単にそれらに追加されます。既存のオーディエンスを上書きすることはありません。"
      }
    }
  },
  "name-id-format": "Name IDフォーマット",
  "mapper": {
    "nameid": {
      "format": {
        "tooltip": "マッパーを適用するName IDフォーマット"
      }
    }
  },
  "clientScopeType": { "default": "DEFAULT" },
  "titleAuthentication": "認証",
  "titleEvents": "イベント",
  "titleRoles": "レルムロール",
  "titleUsers": "ユーザー",
  "titleSessions": "セッション",
  "authenticationAliasHelp": "この設定の名前を設定します。",
  "clientScopeTypes": { "default": "DEFAULT" },
  "authenticationFlowTypeHelp": "どの種類のフォームかを設定します。",
  "scopeNameHelp": "クライアント・スコープの名前。レルム内でユニークでなければなりません。スコープ・パラメーターの値として使用されるため、名前には空白文字を含めないでください",
  "scopeDescriptionHelp": "クライアント・スコープの説明",
  "scopeTypeHelp": "作成された各クライアントにデフォルト・スコープとして追加されるクライアント・スコープ",
  "clientDescriptionHelp": "クライアントの説明を指定します。例えば「タイムシート用のクライアント」です。ローカライズ用のキーもサポートしています。例: ${my_client_description}",
  "clientsClientTypeHelp": "「OpenID Connect」により、クライアントは認可サーバーによって実行される認証に基づいてエンドユーザーのアイデンティティーを検証できます。「SAML」は、クロスドメインのシングル・サインオン（SSO）を含むWebベースの認証および認可のシナリオを可能にし、アサーションを含むセキュリティー・トークンを使用して情報を渡します。",
  "clientsClientScopesHelp": "このリソースに関連付けるスコープを設定します。"
}
