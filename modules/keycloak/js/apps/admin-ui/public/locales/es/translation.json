{
  "create": "Crear",
  "save": "Guardar",
  "key": "Clave",
  "export": "Exportar",
  "download": "Descargar",
  "clear": "Limpiar",
  "on": "Activado",
  "edit": "Editar",
  "enabled": "Habilitado",
  "none": "ninguno",
  "description": "Descripción",
  "type": "Tipo",
  "category": "Categoría",
  "clients": "Clientes",
  "realmRoles": "Roles de dominio",
  "sessions": "Sesiones",
  "mappers": "Asignadores",
  "identityProviders": "Proveedores de identidad",
  "settings": "Ajustes",
  "times": {
    "seconds": "Segundos",
    "minutes": "Minutos",
    "hours": "Horas",
    "days": "Días"
  },
  "credentials": "Credenciales",
  "clientId": "ID Cliente",
  "clientName": "Nombre",
  "id": "ID",
  "mapperType": "Tipo de asignador",
  "password": "Contraseña",
  "protocol": "Protocolo",
  "importClient": "Importar Cliente",
  "webOrigins": "Orígenes web",
  "adminURL": "URL de administración",
  "formatOption": "Formato",
  "encryptAssertions": "Cifrar afirmaciones",
  "clientSignature": "Firma de Cliente requerida",
  "roles": "Roles",
  "fullScopeAllowed": "Permitir todos los ámbitos",
  "kc": {
    "realm": {
      "name": "Dominio"
    }
  },
  "user": "Usuario",
  "clientList": "Clientes",
  "frontchannelLogout": "Desonexión en primer plano (Front Channel)",
  "rootUrl": "URL raíz",
  "validRedirectUri": "URIs de redirección válidas",
  "idpInitiatedSsoRelayState": "Estado de retransmisión de un SSO iniciado por el IDP",
  "masterSamlProcessingUrl": "URL principal de procesamiento SAML",
  "nameIdFormat": "Formato de NameID",
  "forceNameIdFormat": "Forzar formato NameID",
  "forcePostBinding": "Forzar enlaces POST",
  "includeAuthnStatement": "Incluir AuthnStatement",
  "signDocuments": "Firmar documentos",
  "signAssertions": "Firmar aserciones",
  "canonicalization": "Método de canonicalización",
  "loginTheme": "Tema de inicio de sesión",
  "clientAuthenticator": "Cliente autenticador",
  "clientSecret": "Secreto de Cliente",
  "revocation": "Revocación",
  "clustering": "Clustering",
  "notBefore": "No antes de",
  "setToNow": "Fijar a ahora",
  "addNode": "Añadir Nodo",
  "push": "Push",
  "nodeReRegistrationTimeout": "Tiempo de espera de re-registro de nodo",
  "registeredClusterNodes": "Registrar nodos de cluster",
  "nodeHost": "Host del nodo",
  "lastRegistration": "Último registro",
  "testClusterAvailability": "Probar disponibilidad del cluster",
  "registerNodeManually": "Registrar nodo manualmente",
  "fineGrainSamlEndpointConfig": "Fine Grain SAML Endpoint Configuration",
  "assertionConsumerServicePostBindingURL": "Assertion Consumer Service POST Binding URL",
  "assertionConsumerServiceRedirectBindingURL": "Assertion Consumer Service Redirect Binding URL",
  "logoutServicePostBindingURL": "URL de enlace SAML POST para la desconexión",
  "logoutServiceRedirectBindingURL": "URL de enlace SAML de redirección para la desconexión",
  "accessTokenLifespan": "Duración del token de acceso",
  "certificate": "Certificado",
  "generateNewKeys": "Generar nuevas claves",
  "archiveFormat": "Formato de Archivo",
  "keyAlias": "Alias de clave",
  "keyPassword": "Contraseña de la clave",
  "storePassword": "Contraseña del almacén",
  "importFile": "Archivo de Importación",
  "clientType": "''OpenID connect'' permite a los clientes verificar la identidad del usuario final basado en la autenticación realizada por un servidor de autorización. ''SAML'' habilita la autenticación y autorización de escenarios basados en web incluyendo cross-domain y single sign-on (SSO) y utiliza tokens de seguridad que contienen afirmaciones para pasar información.",
  "serviceAccount": "Permitir autenticar este cliente contra Keycloak y recibir un token de acceso dedicado para este cliente.",
  "rootURL": "URL raíz añadida a las URLs relativas",
  "validRedirectURIs": "Patrón de URI válida para la cual un navegador puede solicitar la redirección tras un inicio o cierre de sesión completado. Se permiten comodines simples p.ej. ''http://example.com/*''. También se pueden indicar rutas relativas p.ej. ''/my/relative/path/*''. Las rutas relativas generarán una URI de redirección usando el host y puerto de la petición. Para SAML, se deben fijar patrones de URI válidos si quieres confiar en la URL del servicio del consumidor indicada en la petición de inicio de sesión.",
  "nameIdFormatHelp": "El formato de NameID que se usará para el título",
  "forceNameIdFormatHelp": "Ignorar la petición de sujeto NameID y usar la configurada en la consola de administración.",
  "forcePostBindingHelp": "Usar siempre POST para las respuestas",
  "includeAuthnStatementHelp": "¿Debería incluirse una declaración especificando el método y la marca de tiempo en la respuesta de inicio de sesión?",
  "signDocumentsHelp": "¿Debería el dominio firmar los documentos SAML?",
  "signAssertionsHelp": "¿Deberían firmarse las aserciones en documentos SAML? Este ajuste no es necesario si el documento ya está siendo firmado.",
  "signatureAlgorithm": "El algoritmo de firma usado para firmar los documentos.",
  "canonicalizationHelp": "Método de canonicalización para las firmas XML",
  "webOriginsHelp": "Orígenes CORS permitidos. Para permitir todos los orígenes de URIs de redirección válidas añade ''+''. Para permitir todos los orígenes añade ''*''.",
  "homeURL": "URL por defecto para usar cuando el servidor de autorización necesita redirigir o enviar de vuelta al cliente.",
  "adminURLHelp": "URL a la interfaz de administración del cliente. Fija este valor si el cliente soporta el adaptador de REST. Esta API REST permite al servidor de autenticación enviar al cliente políticas de revocación y otras tareas administrativas. Normalment se fija a la URL base del cliente.",
  "clientIdHelp": "El identificador del cliente registrado con el proveedor de identidad.",
  "clientNameHelp": "Indica el nombre visible del cliente. Por ejemplo ''My Client''. También soporta claves para valores localizados. Por ejemplo: ${my_client}",
  "descriptionHelp": "Indica la descripción del cliente. Por ejemplo ''My Client for TimeSheets''. También soporta claves para valores localizados. Por ejemplo: ${my_client_description}",
  "loginThemeHelp": "Selecciona el tema para las páginas de inicio de sesión, OTP, permisos, registro y recordatorio de contraseña.",
  "encryptAssertionsHelp": "¿Deberían cifrarse las afirmaciones SAML con la clave pública del cliente usando AES?",
  "clientSignatureHelp": "¿Firmará el cliente sus peticiones y respuestas SAML? ¿Y deberían ser validadas?",
  "client-authenticator-type": "Cliente autenticador usado para autenticar este cliente contra el servidor Keycloak",
  "nodeReRegistrationTimeoutHelp": "Indica el máximo intervalo de tiempo para que los nodos del cluster registrados se vuelvan a registrar. Si el nodo del cluster no envía una petición de re-registro a Keycloak dentro de este intervalo, será desregistrado de Keycloak",
  "idpInitiatedSsoUrlName": "Nombre del fragmento de la URL para referenciar al cliente cuando quieres un SSO iniciado por el IDP. Dejando esto vacío deshabilita los SSO iniciados por el IDP. La URL referenciada desde el navegador será: {server-root}/realms/{realm}/protocol/saml/clients/{client-url-name}",
  "idpInitiatedSsoRelayStateHelp": "Estado de retransmisión que quieres enviar con una petición SAML cuando se inicia un SSO iniciado por el IDP",
  "masterSamlProcessingUrlHelp": "Si está configurada, esta URL se usará para cada enlace al proveedor del servicio del consumidor de aserciones y servicios de desconexión únicos. Puede ser sobreescrito de forma individual para cada enlace y servicio en el punto final de configuración fina de SAML.",
  "accessTokenLifespanHelp": "Tiempo máximo antes de que un token de acceso expire. Se recomienda que este valor sea corto en relación al tiempo máximo de SSO",
  "assertionConsumerServicePostBindingURLHelp": "SAML POST Binding URL for the client''s assertion consumer service (login responses).  You can leave this blank if you do not have a URL for this binding.",
  "logoutServicePostBindingURLHelp": "URL de enlace SAML POST para la desconexión única del cliente. Puedes dejar esto en blanco si estás usando un enlace distinto.",
  "logoutServiceRedirectBindingURLHelp": "URL de enlace SAML de redirección para la desconexión única del cliente. Puedes dejar esto en blanco si estás usando un enlace distinto.",
  "frontchannelLogoutHelp": "Cuando está activado, la desconexión require una redirección del navegador hacia el cliente. Cuando no está activado, el servidor realiza una invovación de desconexión en segundo plano.",
  "certificateHelp": "Certificado de cliente para validar los JWT emitidos por este cliente y firmados con la clave privada del cliente de tu almacén de claves.",
  "archiveFormatHelp": "Formato de archivo Java keystore o PKCS12",
  "keyAliasHelp": "Alias del archivo de tu clave privada y certificado.",
  "keyPasswordHelp": "Contraseña para acceder a la clave privada contenida en el archivo",
  "storePasswordHelp": "Contraseña para acceder al archivo",
  "consentRequired": "Si está habilitado, los usuarios tienen que consentir el acceso del cliente.",
  "fullScopeAllowedHelp": "Permite deshabilitar todas las restricciones.",
  "multiValued": "Indica si el atributo soporta múltiples valores. Si está habilitado, la lista de todos los valores de este atributo se fijará como reclamación. Si está deshabilitado, solo el primer valor será fijado como reclamación.",
  "tokenClaimName": {
    "label": "Nombre de reclamo del token",
    "tooltip": "Nombre del reclamo a insertar en el token. Puede ser un nombre completo como ''address.street''. En este caso, se creará un objeto JSON anidado."
  },
  "claimJsonType": "El tipo de JSON que debería ser usado para rellenar la petición de JSON en el token. long, int, boolean y String son valores válidos",
  "protocolMapper": "Protocolo.",
  "associatedRolesText": "Roles Asociados",
  "title": "Sesiones",
  "addRole": "Añadir rol",
  "roleName": "Nombre de rol",
  "composite": "Compuesto",
  "userName": "Usuario",
  "username": "Usuario",
  "verifyEmail": "Verificar email",
  "credentialType": "Tipo",
  "hours": "Horas",
  "minutes": "Minutos",
  "seconds": "Segundos",
  "lastAccess": "Último Acceso",
  "realm": "Dominio",
  "general": "General",
  "login": "login",
  "themes": "Temas",
  "from": "De",
  "host": "Host",
  "port": "Puerto",
  "enableSSL": "Habilitar SSL",
  "enableStartTLS": "Habilitar StartTLS",
  "providerId": "ID",
  "provider": "Proveedor",
  "userRegistration": "Registro de usuario",
  "userRegistrationHelpText": "Habilitar/deshabilitar la página de registro. Un enlace para el registro se mostrará también en la página de inicio de sesión.",
  "rememberMe": "Seguir conectado",
  "rememberMeHelpText": "Muestra la casilla de selección en la página de inicio de sesión para permitir al usuario permanecer conectado entre reinicios del navegador hasta que la sesión expire.",
  "registrationEmailAsUsername": "Email como nombre de usuario",
  "editUsername": "Editar nombre de usuario",
  "requireSsl": "Solicitar SSL",
  "sslType": {
    "all": "todas las peticiones",
    "external": "peticiones externas",
    "none": "ninguno"
  },
  "accountTheme": "Tema de cuenta",
  "adminTheme": "Tema de consola de administración",
  "emailTheme": "Tema de email",
  "SSOSessionIdle": "Sesiones SSO inactivas",
  "SSOSessionMax": "Tiempo máximo sesión SSO",
  "offlineSessionIdle": "Inactividad de sesión sin conexión",
  "loginTimeout": "Tiempo máximo de desconexión",
  "loginActionTimeout": "Tiempo máximo de acción en el inicio de sesión",
  "revokeRefreshToken": "Revocar el token de actualización",
  "clientLoginTimeout": "Tiempo máximo de autenticación",
  "clientProfileDescription": "Descripción",
  "tokens": "Tokens",
  "supportedLocales": "Idiomas soportados",
  "defaultLocale": "Idioma por defecto",
  "validatorDialogColNames": {
    "colName": "Nombre de rol"
  },
  "securityDefences": "Defensas de seguridad",
  "headers": "Cabeceras",
  "bruteForceDetection": "Detección de ataques por fuerza bruta",
  "xFrameOptions": "X-Frame-Options",
  "contentSecurityPolicy": "Content-Security-Policy",
  "failureFactor": "Número máximo de fallos de inicio de sesión",
  "waitIncrementSeconds": "Incremento de espera",
  "maxFailureWaitSeconds": "Espera máxima",
  "maxDeltaTimeSeconds": "Reinicio del contador de errores",
  "minimumQuickLoginWaitSeconds": "Tiempo mínimo entre fallos de conexión rápidos",
  "requireSslHelp": "¿Es HTTP obligatorio? ''ninguna'' significa que HTTPS no es obligatorio para ninguna direcicón IP de cliente, ''peticiones externas'' indica que localhost y las direcciones IP privadas pueden acceder sin HTTPS, ''todas las peticiones'' significa que HTTPS es obligatorio para todas las direcciones IP.",
  "accountThemeHelp": "Selecciona el tema para las páginas de gestión de la cuenta de usuario.",
  "adminThemeHelp": "Selecciona el tema para la consola de administración.",
  "emailThemeHelp": "Selecciona el tema para los emails que son enviados por el servidor.",
  "failureFactorHelp": "Indica cuantos fallos se permiten antes de que se dispare una espera.",
  "waitIncrementSecondsHelp": "Cuando se ha alcanzado el umbral de fallo, ¿cuanto tiempo debe estar un usuario bloqueado?",
  "maxFailureWaitSecondsHelp": "Tiempo máximo que un usuario quedará bloqueado.",
  "maxDeltaTimeSecondsHelp": "¿Cuando se debe reiniciar el contador de errores?",
  "quickLoginCheckMilliSeconds": "Si ocurren errores de forma concurrente y muy rápida, bloquear al usuario.",
  "minimumQuickLoginWaitSecondsHelp": "Cuanto tiempo se debe esperar tras un fallo en un intento rápido de identificación",
  "ssoSessionIdle": "Tiempo máximo que una sesión puede estar inactiva antes de que expire. Los tokens y sesiones de navegador son invalidadas cuando la sesión expira.",
  "ssoSessionMax": "Tiempo máximo antes de que una sesión expire. Los tokens y sesiones de navegador son invalidados cuando una sesión expira.",
  "offlineSessionIdleHelp": "Tiempo máximo inactivo de una sesión sin conexión antes de que expire. Necesitas usar un token sin conexión para refrescar al menos una vez dentro de este periodo, en otro caso la sesión sin conexión expirará.",
  "revokeRefreshTokenHelp": "Si está activado los tokens de actualización solo pueden usarse una vez. En otro caso los tokens de actualización no se revocan cuando se utilizan y pueden ser usado múltiples veces.",
  "clientLoginTimeoutHelp": "Tiempo máximo que un cliente tiene para finalizar el protocolo de obtención del token de acceso. Debería ser normalmente del orden de 1 minuto.",
  "editUsernameHelp": "Si está habilitado, el nombre de usuario es editable, en otro caso es de solo lectura.",
  "attestationPreference": {
    "none": "ninguno"
  },
  "alias": "Alias",
  "enableStartTls": "Habilitar StartTLS",
  "trustEmail": "Confiar en el email",
  "selectRole": {
    "label": "Selecciona rol",
    "tooltip": "Introduce el rol en la caja de texto de la izquierda, o haz clic en este botón para navegar y buscar el rol que quieres."
  },
  "trustEmailHelp": "Si está habilitado, el email recibido de este proveedor no se verificará aunque la verificación esté habilitada para el dominio.",
  "addIdPMapper": "Añadir asignador de proveedor de identidad",
  "redirectURI": "URI de redirección",
  "ssoServiceUrl": "URL de servicio de conexión único (SSO)",
  "singleLogoutServiceUrl": "URL de servicio de desconexión único",
  "nameIdPolicyFormat": "Formato de política NameID",
  "unspecified": "no especificado",
  "httpPostBindingResponse": "HTTP-POST enlace de respuesta",
  "httpPostBindingAuthnRequest": "HTTP-POST para AuthnRequest",
  "wantAuthnRequestsSigned": "Firmar AuthnRequests",
  "forceAuthentication": "Forzar autenticación",
  "validatingX509Certs": "Validando certificado X509",
  "authorizationUrl": "URL de autorización",
  "tokenUrl": "Token URL",
  "logoutUrl": "URL de desconexión",
  "backchannelLogout": "Backchannel Logout",
  "userInfoUrl": "URL de información de usuario",
  "issuer": "Emisor",
  "prompt": "Prompt",
  "prompts": {
    "none": "ninguno",
    "consent": "consentimiento",
    "login": "login"
  },
  "validateSignature": "Validar firmas",
  "storeTokens": "Almacenar tokens",
  "storedTokensReadable": "Tokens almacenados legibles",
  "userAttribute": "Atributo de usuario",
  "redirectURIHelp": "La URI de redirección usada para configurar el proveedor de identidad.",
  "aliasHelp": "El alias que identifica de forma única un proveedor de identidad, se usa también para construir la URI de redirección.",
  "clientSecretHelp": "El secreto del cliente registrado con el proveedor de identidad.",
  "discoveryEndpoint": "Importar metadatos desde un descriptor de un proveedor de identidad (IDP) remoto.",
  "importConfig": "Importar metadatos desde un descriptor de un proveedor de identidad (IDP) descargado.",
  "logoutUrlHelp": "Punto de cierre de sesión para usar en la desconexión de usuarios desde un proveedor de identidad (IDP) externo.",
  "backchannelLogoutHelp": "Does the external IDP support backchannel logout?",
  "userInfoUrlHelp": "La URL de información de usuario. Opcional.",
  "issuerHelp": "El identificador del emisor para el emisor de la respuesta. Si no se indica, no se realizará ninguna validación.",
  "scopes": "Los ámbitos que se enviarán cuando se solicite autorización. Puede ser una lista de ámbitos separados por espacios. El valor por defecto es ''openid''.",
  "validateSignatureHelp": "Habilitar/deshabilitar la validación de firmas de proveedores de identidad (IDP) externos",
  "storeTokensHelp": "Habilitar/deshabilitar si los tokens deben ser almacenados después de autenticar a los usuarios.",
  "storedTokensReadableHelp": "Habilitar/deshabilitar si los nuevos usuarios pueden leer los tokens almacenados. Esto asigna el rol ''broker.read-token''.",
  "useEntityDescriptor": "Importar metadatos desde un descriptor de entidad remoto de un IDP de SAML",
  "samlEntityDescriptor": "Te permite cargar metadatos de un proveedor de identidad (IDP) externo de un archivo de coniguración o descargarlo desde una URL.",
  "ssoServiceUrlHelp": "La URL que debe ser usada para enviar peticiones de autenticación (SAML AuthnRequest).",
  "singleLogoutServiceUrlHelp": "La URL que debe usarse para enviar peticiones de desconexión.",
  "httpPostBindingAuthnRequestHelp": "Indica si AuthnRequest debe ser enviada usando HTTP-POST. Si no está activado se hace HTTP-REDIRECT.",
  "wantAuthnRequestsSignedHelp": "Indica si el proveedor de identidad espera recibir firmadas las AuthnRequest.",
  "forceAuthenticationHelp": "Indica si el proveedor de identidad debe autenticar al presentar directamente las credenciales en lugar de depender de un contexto de seguridad previo.",
  "validateSignatures": "Habilitar/deshabilitar la validación de firma en respuestas SAML.",
  "validatingX509CertsHelp": "El certificado en formato PEM que debe usarse para comprobar las firmas.",
  "addIdpMapperName": "Nombre del asignador.",
  "usermodel": {
    "prop": {
      "label": "Propiedad",
      "tooltip": "Nombre del método de propiedad en la interfaz UserModel. Por ejemplo, un valor de ''email'' referenciaría al método UserModel.getEmail()."
    },
    "attr": {
      "label": "Atributo de usuario",
      "tooltip": "Nombre del atributo de usuario almacenado que es el nombre del atributo dentro del map UserModel.attribute."
    },
    "clientRoleMapping": {
      "clientId": {
        "label": "ID Cliente"
      }
    }
  },
  "userSession": {
    "modelNote": {
      "label": "Nota sesión usuario",
      "tooltip": "Nombre de la nota almacenada en la sesión de usuario dentro del mapa UserSessionModel.note"
    }
  },
  "multivalued": {
    "label": "Valores múltiples",
    "tooltip": "Indica si el atributo soporta múltiples valores. Si está habilitado, la lista de todos los valores de este atributo se fijará como reclamación. Si está deshabilitado, solo el primer valor será fijado como reclamación."
  },
  "jsonType": {
    "label": "Tipo JSON de reclamación",
    "tooltip": "El tipo de JSON que debería ser usado para rellenar la petición de JSON en el token. long, int, boolean y String son valores válidos"
  },
  "includeInIdToken": {
    "label": "Añadir al token de ID"
  },
  "includeInAccessToken": {
    "label": "Añadir al token de acceso",
    "tooltip": "¿Debería añadirse la identidad reclamada al token de acceso?"
  },
  "name-id-format": "Formato de NameID",
  "titleRoles": "Roles de dominio",
  "titleSessions": "Sesiones",
  "clientDescriptionHelp": "Indica la descripción del cliente. Por ejemplo ''My Client for TimeSheets''. También soporta claves para valores localizados. Por ejemplo: ${my_client_description}",
  "clientsClientTypeHelp": "''OpenID connect'' permite a los clientes verificar la identidad del usuario final basado en la autenticación realizada por un servidor de autorización. ''SAML'' habilita la autenticación y autorización de escenarios basados en web incluyendo cross-domain y single sign-on (SSO) y utiliza tokens de seguridad que contienen afirmaciones para pasar información."
}
