// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cubefs/cubefs/blobstore/util/selector (interfaces: Selector)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSelector is a mock of Selector interface.
type MockSelector struct {
	ctrl     *gomock.Controller
	recorder *MockSelectorMockRecorder
}

// MockSelectorMockRecorder is the mock recorder for MockSelector.
type MockSelectorMockRecorder struct {
	mock *MockSelector
}

// NewMockSelector creates a new mock instance.
func NewMockSelector(ctrl *gomock.Controller) *MockSelector {
	mock := &MockSelector{ctrl: ctrl}
	mock.recorder = &MockSelectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSelector) EXPECT() *MockSelectorMockRecorder {
	return m.recorder
}

// GetHashN mocks base method.
func (m *MockSelector) GetHashN(arg0 int, arg1 []byte) []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHashN", arg0, arg1)
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetHashN indicates an expected call of GetHashN.
func (mr *MockSelectorMockRecorder) GetHashN(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHashN", reflect.TypeOf((*MockSelector)(nil).GetHashN), arg0, arg1)
}

// GetRandomN mocks base method.
func (m *MockSelector) GetRandomN(arg0 int) []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRandomN", arg0)
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetRandomN indicates an expected call of GetRandomN.
func (mr *MockSelectorMockRecorder) GetRandomN(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRandomN", reflect.TypeOf((*MockSelector)(nil).GetRandomN), arg0)
}

// GetRoundRobinN mocks base method.
func (m *MockSelector) GetRoundRobinN(arg0 int) []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRoundRobinN", arg0)
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetRoundRobinN indicates an expected call of GetRoundRobinN.
func (mr *MockSelectorMockRecorder) GetRoundRobinN(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRoundRobinN", reflect.TypeOf((*MockSelector)(nil).GetRoundRobinN), arg0)
}
